{"version":3,"file":"ngx-bar-rating.mjs","sources":["../../../projects/ngx-bar-rating/src/lib/custom-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.html","../../../projects/ngx-bar-rating/src/lib/bar-rating.module.ts","../../../projects/ngx-bar-rating/src/ngx-bar-rating.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[ratingActive]'\r\n})\r\nexport class ActiveRating {\r\n  constructor(public template: TemplateRef<any>) {\r\n  }\r\n}\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[ratingInactive]'\r\n})\r\nexport class InactiveRating {\r\n  constructor(public template: TemplateRef<any>) {\r\n  }\r\n}\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[ratingFraction]'\r\n})\r\nexport class FractionRating {\r\n  constructor(public template: TemplateRef<any>) {\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Output,\r\n  signal,\r\n  computed,\r\n  forwardRef,\r\n  numberAttribute,\r\n  booleanAttribute,\r\n  input,\r\n  model,\r\n  contentChild,\r\n  EventEmitter,\r\n  Signal,\r\n  Provider,\r\n  InputSignal,\r\n  ModelSignal,\r\n  WritableSignal,\r\n  InputSignalWithTransform,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { ControlValueAccessor, Validator, NG_VALIDATORS, NG_VALUE_ACCESSOR, UntypedFormControl } from '@angular/forms';\r\nimport { ActiveRating, FractionRating, InactiveRating } from './custom-rating';\r\n\r\n/** This allows support [(ngModel)] and ngControl. */\r\nconst RATING_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => BarRating),\r\n  multi: true\r\n};\r\n\r\n/** This allows control required validation. */\r\nconst RATING_VALUE_VALIDATOR: Provider = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => BarRating),\r\n  multi: true,\r\n};\r\n\r\nenum BarRatingUnitState {\r\n  active = 'active',\r\n  inactive = 'inactive',\r\n  selected = 'selected',\r\n  fraction = 'fraction'\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'bar-rating',\r\n  templateUrl: './bar-rating.html',\r\n  styleUrl: './bar-rating.scss',\r\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\r\n  imports: [NgTemplateOutlet],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarRating implements ControlValueAccessor, Validator {\r\n\r\n  onChange: OnChangeFn<number> = () => {\r\n  };\r\n\r\n  onTouched: OnTouchedFn = () => {\r\n  };\r\n\r\n  readonly UNITS = BarRatingUnitState;\r\n\r\n  disabled: boolean;\r\n\r\n  /** Current rating. Can be a decimal value like 3.14 */\r\n  rate: ModelSignal<number> = model<number>(5);\r\n\r\n  /** Maximal rating that can be given using this widget. */\r\n  max: InputSignalWithTransform<number, number | string> = input<number, string | number>(5, { transform: numberAttribute });\r\n\r\n  /** A flag indicating if rating can be updated. */\r\n  readOnly: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(false, {\r\n    transform: booleanAttribute,\r\n    alias: 'readonly'\r\n  });\r\n\r\n  /** Set the theme */\r\n  theme: InputSignal<string> = input<string>('default');\r\n\r\n  /** Show rating title */\r\n  showText: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(false, { transform: booleanAttribute });\r\n\r\n  /** Replace rate value with a title */\r\n  titles: InputSignal<string[]> = input<string[]>([]);\r\n\r\n  /** A flag indicating if rating is required for form validation. */\r\n  required: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(false, { transform: booleanAttribute });\r\n\r\n  tabIndex: InputSignalWithTransform<number, number | string> = input<number, string | number>(0, { transform: numberAttribute });\r\n\r\n  hoveredIndex: WritableSignal<number> = signal(null);\r\n\r\n  contexts: Signal<BarRatingUnitState[]> = computed(() => {\r\n    if (this.hoveredIndex()) {\r\n      return Array.from({ length: this.max() }, (c, i: number) => {\r\n        if (this.hoveredIndex()) {\r\n          if (i + 1 <= this.hoveredIndex()) {\r\n            return BarRatingUnitState.active;\r\n          }\r\n          return BarRatingUnitState.inactive;\r\n        }\r\n      });\r\n    }\r\n    return Array.from({ length: this.max() }, (c, i: number) => {\r\n      if (i + 1 <= this.rate()) {\r\n        return BarRatingUnitState.selected;\r\n      }\r\n      if ((i + 1 === Math.round(this.rate()) && this.rate() % 1) >= 0.5) {\r\n        return BarRatingUnitState.fraction;\r\n      }\r\n      return BarRatingUnitState.inactive;\r\n    });\r\n  });\r\n\r\n  ratingText: Signal<string | number> = computed(() => {\r\n    const value: string | number = this.hoveredIndex() || this.rate();\r\n    return this.titles()[value] || value;\r\n  });\r\n\r\n  /**\r\n   * A stream that forwards a bar rating click since clicks are not propagated\r\n   */\r\n  @Output() barClick: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  customActiveRating: Signal<ActiveRating> = contentChild(ActiveRating);\r\n  customInActiveRating: Signal<InactiveRating> = contentChild(InactiveRating);\r\n  customFractionRating: Signal<FractionRating> = contentChild(FractionRating);\r\n\r\n  updateRating(value: number): void {\r\n    this.rate.set(value);\r\n    this.onChange(value);\r\n  }\r\n\r\n  /**\r\n   * This is the initial value set to the component\r\n   */\r\n  writeValue(value: number): void {\r\n    if (value !== null) {\r\n      this.rate.set(value);\r\n    }\r\n  }\r\n\r\n  validate(c: UntypedFormControl): { required: boolean } | null {\r\n    return (this.required && !c.value) ? { required: true } : null;\r\n  }\r\n\r\n  registerOnChange(fn: OnChangeFn<number>): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => OnTouchedFn): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n\r\ntype OnChangeFn<T> = (value: T) => void;\r\ntype OnTouchedFn = () => void;\r\n","<div class=\"br br-{{ customInActiveRating() ? '' : theme() }}\"\r\n     [class.br-readonly]=\"readOnly()\"\r\n     [class.br-disabled]=\"disabled\"\r\n     [attr.tabindex]=\"disabled || readOnly() ? -1 : tabIndex()\"\r\n     (focusout)=\"onTouched()\">\r\n\r\n  <div class=\"br-units\"\r\n       (mouseleave)=\"hoveredIndex.set(0)\">\r\n    @for (unit of contexts(); let i = $index; track i) {\r\n      <div class=\"br-unit\"\r\n           (click)=\"updateRating(i + 1); barClick.emit(i + 1)\"\r\n           (mouseenter)=\"hoveredIndex.set(i + 1)\">\r\n        @switch (unit) {\r\n          @case (UNITS.fraction) {\r\n            <ng-template [ngTemplateOutlet]=\"customFractionRating()?.template || fractionTemplate\"/>\r\n          }\r\n          @case (UNITS.inactive) {\r\n            <ng-template [ngTemplateOutlet]=\"customInActiveRating()?.template || inactiveTemplate\"/>\r\n          }\r\n          @default {\r\n            <ng-template [ngTemplateOutlet]=\"customActiveRating()?.template || activeTemplate\"/>\r\n          }\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n\r\n  @if (showText()) {\r\n    <div class=\"br-text\">{{ ratingText() }}</div>\r\n  }\r\n</div>\r\n\r\n<ng-template #fractionTemplate>\r\n  <div class=\"br-unit-inner br-fraction\"></div>\r\n</ng-template>\r\n\r\n<ng-template #activeTemplate>\r\n  <div class=\"br-unit-inner br-active\"></div>\r\n</ng-template>\r\n\r\n<ng-template #inactiveTemplate>\r\n  <div class=\"br-unit-inner br-inactive\"></div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { BarRating } from './bar-rating';\r\nimport { ActiveRating, InactiveRating, FractionRating } from './custom-rating';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BarRating,\r\n    ActiveRating,\r\n    InactiveRating,\r\n    FractionRating\r\n  ],\r\n  exports: [\r\n    BarRating,\r\n    ActiveRating,\r\n    InactiveRating,\r\n    FractionRating\r\n  ]\r\n})\r\nexport class BarRatingModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}