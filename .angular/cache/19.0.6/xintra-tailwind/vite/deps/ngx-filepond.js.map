{
  "version": 3,
  "sources": ["../../../../../../node_modules/filepond/dist/filepond.esm.js", "../../../../../../node_modules/ngx-filepond/fesm2020/ngx-filepond.mjs"],
  "sourcesContent": ["/*!\n * FilePond 4.32.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isNode = value => value instanceof HTMLElement;\nconst createStore = (initialState, queries = [], actions = []) => {\n  // internal state\n  const state = {\n    ...initialState\n  };\n\n  // contains all actions for next frame, is clear when actions are requested\n  const actionQueue = [];\n  const dispatchQueue = [];\n\n  // returns a duplicate of the current state\n  const getState = () => ({\n    ...state\n  });\n\n  // returns a duplicate of the actions array and clears the actions array\n  const processActionQueue = () => {\n    // create copy of actions queue\n    const queue = [...actionQueue];\n\n    // clear actions queue (we don't want no double actions)\n    actionQueue.length = 0;\n    return queue;\n  };\n\n  // processes actions that might block the main UI thread\n  const processDispatchQueue = () => {\n    // create copy of actions queue\n    const queue = [...dispatchQueue];\n\n    // clear actions queue (we don't want no double actions)\n    dispatchQueue.length = 0;\n\n    // now dispatch these actions\n    queue.forEach(({\n      type,\n      data\n    }) => {\n      dispatch(type, data);\n    });\n  };\n\n  // adds a new action, calls its handler and\n  const dispatch = (type, data, isBlocking) => {\n    // is blocking action (should never block if document is hidden)\n    if (isBlocking && !document.hidden) {\n      dispatchQueue.push({\n        type,\n        data\n      });\n      return;\n    }\n\n    // if this action has a handler, handle the action\n    if (actionHandlers[type]) {\n      actionHandlers[type](data);\n    }\n\n    // now add action\n    actionQueue.push({\n      type,\n      data\n    });\n  };\n  const query = (str, ...args) => queryHandles[str] ? queryHandles[str](...args) : null;\n  const api = {\n    getState,\n    processActionQueue,\n    processDispatchQueue,\n    dispatch,\n    query\n  };\n  let queryHandles = {};\n  queries.forEach(query => {\n    queryHandles = {\n      ...query(state),\n      ...queryHandles\n    };\n  });\n  let actionHandlers = {};\n  actions.forEach(action => {\n    actionHandlers = {\n      ...action(dispatch, query, state),\n      ...actionHandlers\n    };\n  });\n  return api;\n};\nconst defineProperty = (obj, property, definition) => {\n  if (typeof definition === 'function') {\n    obj[property] = definition;\n    return;\n  }\n  Object.defineProperty(obj, property, {\n    ...definition\n  });\n};\nconst forin = (obj, cb) => {\n  for (const key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    cb(key, obj[key]);\n  }\n};\nconst createObject = definition => {\n  const obj = {};\n  forin(definition, property => {\n    defineProperty(obj, property, definition[property]);\n  });\n  return obj;\n};\nconst attr = (node, name, value = null) => {\n  if (value === null) {\n    return node.getAttribute(name) || node.hasAttribute(name);\n  }\n  node.setAttribute(name, value);\n};\nconst ns = 'http://www.w3.org/2000/svg';\nconst svgElements = ['svg', 'path']; // only svg elements used\n\nconst isSVGElement = tag => svgElements.includes(tag);\nconst createElement = (tag, className, attributes = {}) => {\n  if (typeof className === 'object') {\n    attributes = className;\n    className = null;\n  }\n  const element = isSVGElement(tag) ? document.createElementNS(ns, tag) : document.createElement(tag);\n  if (className) {\n    if (isSVGElement(tag)) {\n      attr(element, 'class', className);\n    } else {\n      element.className = className;\n    }\n  }\n  forin(attributes, (name, value) => {\n    attr(element, name, value);\n  });\n  return element;\n};\nconst appendChild = parent => (child, index) => {\n  if (typeof index !== 'undefined' && parent.children[index]) {\n    parent.insertBefore(child, parent.children[index]);\n  } else {\n    parent.appendChild(child);\n  }\n};\nconst appendChildView = (parent, childViews) => (view, index) => {\n  if (typeof index !== 'undefined') {\n    childViews.splice(index, 0, view);\n  } else {\n    childViews.push(view);\n  }\n  return view;\n};\nconst removeChildView = (parent, childViews) => view => {\n  // remove from child views\n  childViews.splice(childViews.indexOf(view), 1);\n\n  // remove the element\n  if (view.element.parentNode) {\n    parent.removeChild(view.element);\n  }\n  return view;\n};\nconst IS_BROWSER = (() => typeof window !== 'undefined' && typeof window.document !== 'undefined')();\nconst isBrowser = () => IS_BROWSER;\nconst testElement = isBrowser() ? createElement('svg') : {};\nconst getChildCount = 'children' in testElement ? el => el.children.length : el => el.childNodes.length;\nconst getViewRect = (elementRect, childViews, offset, scale) => {\n  const left = offset[0] || elementRect.left;\n  const top = offset[1] || elementRect.top;\n  const right = left + elementRect.width;\n  const bottom = top + elementRect.height * (scale[1] || 1);\n  const rect = {\n    // the rectangle of the element itself\n    element: {\n      ...elementRect\n    },\n    // the rectangle of the element expanded to contain its children, does not include any margins\n    inner: {\n      left: elementRect.left,\n      top: elementRect.top,\n      right: elementRect.right,\n      bottom: elementRect.bottom\n    },\n    // the rectangle of the element expanded to contain its children including own margin and child margins\n    // margins will be added after we've recalculated the size\n    outer: {\n      left,\n      top,\n      right,\n      bottom\n    }\n  };\n\n  // expand rect to fit all child rectangles\n  childViews.filter(childView => !childView.isRectIgnored()).map(childView => childView.rect).forEach(childViewRect => {\n    expandRect(rect.inner, {\n      ...childViewRect.inner\n    });\n    expandRect(rect.outer, {\n      ...childViewRect.outer\n    });\n  });\n\n  // calculate inner width and height\n  calculateRectSize(rect.inner);\n\n  // append additional margin (top and left margins are included in top and left automatically)\n  rect.outer.bottom += rect.element.marginBottom;\n  rect.outer.right += rect.element.marginRight;\n\n  // calculate outer width and height\n  calculateRectSize(rect.outer);\n  return rect;\n};\nconst expandRect = (parent, child) => {\n  // adjust for parent offset\n  child.top += parent.top;\n  child.right += parent.left;\n  child.bottom += parent.top;\n  child.left += parent.left;\n  if (child.bottom > parent.bottom) {\n    parent.bottom = child.bottom;\n  }\n  if (child.right > parent.right) {\n    parent.right = child.right;\n  }\n};\nconst calculateRectSize = rect => {\n  rect.width = rect.right - rect.left;\n  rect.height = rect.bottom - rect.top;\n};\nconst isNumber = value => typeof value === 'number';\n\n/**\n * Determines if position is at destination\n * @param position\n * @param destination\n * @param velocity\n * @param errorMargin\n * @returns {boolean}\n */\nconst thereYet = (position, destination, velocity, errorMargin = 0.001) => {\n  return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n};\n\n/**\n * Spring animation\n */\nconst spring =\n// default options\n({\n  stiffness = 0.5,\n  damping = 0.75,\n  mass = 10\n} = {}) =>\n// method definition\n{\n  let target = null;\n  let position = null;\n  let velocity = 0;\n  let resting = false;\n\n  // updates spring state\n  const interpolate = (ts, skipToEndState) => {\n    // in rest, don't animate\n    if (resting) return;\n\n    // need at least a target or position to do springy things\n    if (!(isNumber(target) && isNumber(position))) {\n      resting = true;\n      velocity = 0;\n      return;\n    }\n\n    // calculate spring force\n    const f = -(position - target) * stiffness;\n\n    // update velocity by adding force based on mass\n    velocity += f / mass;\n\n    // update position by adding velocity\n    position += velocity;\n\n    // slow down based on amount of damping\n    velocity *= damping;\n\n    // we've arrived if we're near target and our velocity is near zero\n    if (thereYet(position, target, velocity) || skipToEndState) {\n      position = target;\n      velocity = 0;\n      resting = true;\n\n      // we done\n      api.onupdate(position);\n      api.oncomplete(position);\n    } else {\n      // progress update\n      api.onupdate(position);\n    }\n  };\n\n  /**\n   * Set new target value\n   * @param value\n   */\n  const setTarget = value => {\n    // if currently has no position, set target and position to this value\n    if (isNumber(value) && !isNumber(position)) {\n      position = value;\n    }\n\n    // next target value will not be animated to\n    if (target === null) {\n      target = value;\n      position = value;\n    }\n\n    // let start moving to target\n    target = value;\n\n    // already at target\n    if (position === target || typeof target === 'undefined') {\n      // now resting as target is current position, stop moving\n      resting = true;\n      velocity = 0;\n\n      // done!\n      api.onupdate(position);\n      api.oncomplete(position);\n      return;\n    }\n    resting = false;\n  };\n\n  // need 'api' to call onupdate callback\n  const api = createObject({\n    interpolate,\n    target: {\n      set: setTarget,\n      get: () => target\n    },\n    resting: {\n      get: () => resting\n    },\n    onupdate: value => {},\n    oncomplete: value => {}\n  });\n  return api;\n};\nconst easeLinear = t => t;\nconst easeInOutQuad = t => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\nconst tween =\n// default values\n({\n  duration = 500,\n  easing = easeInOutQuad,\n  delay = 0\n} = {}) =>\n// method definition\n{\n  let start = null;\n  let t;\n  let p;\n  let resting = true;\n  let reverse = false;\n  let target = null;\n  const interpolate = (ts, skipToEndState) => {\n    if (resting || target === null) return;\n    if (start === null) {\n      start = ts;\n    }\n    if (ts - start < delay) return;\n    t = ts - start - delay;\n    if (t >= duration || skipToEndState) {\n      t = 1;\n      p = reverse ? 0 : 1;\n      api.onupdate(p * target);\n      api.oncomplete(p * target);\n      resting = true;\n    } else {\n      p = t / duration;\n      api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n    }\n  };\n\n  // need 'api' to call onupdate callback\n  const api = createObject({\n    interpolate,\n    target: {\n      get: () => reverse ? 0 : target,\n      set: value => {\n        // is initial value\n        if (target === null) {\n          target = value;\n          api.onupdate(value);\n          api.oncomplete(value);\n          return;\n        }\n\n        // want to tween to a smaller value and have a current value\n        if (value < target) {\n          target = 1;\n          reverse = true;\n        } else {\n          // not tweening to a smaller value\n          reverse = false;\n          target = value;\n        }\n\n        // let's go!\n        resting = false;\n        start = null;\n      }\n    },\n    resting: {\n      get: () => resting\n    },\n    onupdate: value => {},\n    oncomplete: value => {}\n  });\n  return api;\n};\nconst animator = {\n  spring,\n  tween\n};\n\n/*\n { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n { translation: { type: 'spring', ... }, ... }\n { translation: { x: { type: 'spring', ... } } }\n*/\nconst createAnimator = (definition, category, property) => {\n  // default is single definition\n  // we check if transform is set, if so, we check if property is set\n  const def = definition[category] && typeof definition[category][property] === 'object' ? definition[category][property] : definition[category] || definition;\n  const type = typeof def === 'string' ? def : def.type;\n  const props = typeof def === 'object' ? {\n    ...def\n  } : {};\n  return animator[type] ? animator[type](props) : null;\n};\nconst addGetSet = (keys, obj, props, overwrite = false) => {\n  obj = Array.isArray(obj) ? obj : [obj];\n  obj.forEach(o => {\n    keys.forEach(key => {\n      let name = key;\n      let getter = () => props[key];\n      let setter = value => props[key] = value;\n      if (typeof key === 'object') {\n        name = key.key;\n        getter = key.getter || getter;\n        setter = key.setter || setter;\n      }\n      if (o[name] && !overwrite) {\n        return;\n      }\n      o[name] = {\n        get: getter,\n        set: setter\n      };\n    });\n  });\n};\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// setup animators\n\nconst animations = ({\n  mixinConfig,\n  viewProps,\n  viewInternalAPI,\n  viewExternalAPI\n}) => {\n  // initial properties\n  const initialProps = {\n    ...viewProps\n  };\n\n  // list of all active animations\n  const animations = [];\n\n  // setup animators\n  forin(mixinConfig, (property, animation) => {\n    const animator = createAnimator(animation);\n    if (!animator) {\n      return;\n    }\n\n    // when the animator updates, update the view state value\n    animator.onupdate = value => {\n      viewProps[property] = value;\n    };\n\n    // set animator target\n    animator.target = initialProps[property];\n\n    // when value is set, set the animator target value\n    const prop = {\n      key: property,\n      setter: value => {\n        // if already at target, we done!\n        if (animator.target === value) {\n          return;\n        }\n        animator.target = value;\n      },\n      getter: () => viewProps[property]\n    };\n\n    // add getters and setters\n    addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);\n\n    // add it to the list for easy updating from the _write method\n    animations.push(animator);\n  });\n\n  // expose internal write api\n  return {\n    write: ts => {\n      let skipToEndState = document.hidden;\n      let resting = true;\n      animations.forEach(animation => {\n        if (!animation.resting) resting = false;\n        animation.interpolate(ts, skipToEndState);\n      });\n      return resting;\n    },\n    destroy: () => {}\n  };\n};\nconst addEvent = element => (type, fn) => {\n  element.addEventListener(type, fn);\n};\nconst removeEvent = element => (type, fn) => {\n  element.removeEventListener(type, fn);\n};\n\n// mixin\nconst listeners = ({\n  mixinConfig,\n  viewProps,\n  viewInternalAPI,\n  viewExternalAPI,\n  viewState,\n  view\n}) => {\n  const events = [];\n  const add = addEvent(view.element);\n  const remove = removeEvent(view.element);\n  viewExternalAPI.on = (type, fn) => {\n    events.push({\n      type,\n      fn\n    });\n    add(type, fn);\n  };\n  viewExternalAPI.off = (type, fn) => {\n    events.splice(events.findIndex(event => event.type === type && event.fn === fn), 1);\n    remove(type, fn);\n  };\n  return {\n    write: () => {\n      // not busy\n      return true;\n    },\n    destroy: () => {\n      events.forEach(event => {\n        remove(event.type, event.fn);\n      });\n    }\n  };\n};\n\n// add to external api and link to props\n\nconst apis = ({\n  mixinConfig,\n  viewProps,\n  viewExternalAPI\n}) => {\n  addGetSet(mixinConfig, viewExternalAPI, viewProps);\n};\nconst isDefined = value => value != null;\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// set initial state based on props in viewProps\n// apply as transforms each frame\n\nconst defaults = {\n  opacity: 1,\n  scaleX: 1,\n  scaleY: 1,\n  translateX: 0,\n  translateY: 0,\n  rotateX: 0,\n  rotateY: 0,\n  rotateZ: 0,\n  originX: 0,\n  originY: 0\n};\nconst styles = ({\n  mixinConfig,\n  viewProps,\n  viewInternalAPI,\n  viewExternalAPI,\n  view\n}) => {\n  // initial props\n  const initialProps = {\n    ...viewProps\n  };\n\n  // current props\n  const currentProps = {};\n\n  // we will add those properties to the external API and link them to the viewState\n  addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);\n\n  // override rect on internal and external rect getter so it takes in account transforms\n  const getOffset = () => [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n  const getScale = () => [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n  const getRect = () => view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n  viewInternalAPI.rect = {\n    get: getRect\n  };\n  viewExternalAPI.rect = {\n    get: getRect\n  };\n\n  // apply view props\n  mixinConfig.forEach(key => {\n    viewProps[key] = typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n  });\n\n  // expose api\n  return {\n    write: () => {\n      // see if props have changed\n      if (!propsHaveChanged(currentProps, viewProps)) {\n        return;\n      }\n\n      // moves element to correct position on screen\n      applyStyles(view.element, viewProps);\n\n      // store new transforms\n      Object.assign(currentProps, {\n        ...viewProps\n      });\n\n      // no longer busy\n      return true;\n    },\n    destroy: () => {}\n  };\n};\nconst propsHaveChanged = (currentProps, newProps) => {\n  // different amount of keys\n  if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n    return true;\n  }\n\n  // lets analyze the individual props\n  for (const prop in newProps) {\n    if (newProps[prop] !== currentProps[prop]) {\n      return true;\n    }\n  }\n  return false;\n};\nconst applyStyles = (element, {\n  opacity,\n  perspective,\n  translateX,\n  translateY,\n  scaleX,\n  scaleY,\n  rotateX,\n  rotateY,\n  rotateZ,\n  originX,\n  originY,\n  width,\n  height\n}) => {\n  let transforms = '';\n  let styles = '';\n\n  // handle transform origin\n  if (isDefined(originX) || isDefined(originY)) {\n    styles += `transform-origin: ${originX || 0}px ${originY || 0}px;`;\n  }\n\n  // transform order is relevant\n  // 0. perspective\n  if (isDefined(perspective)) {\n    transforms += `perspective(${perspective}px) `;\n  }\n\n  // 1. translate\n  if (isDefined(translateX) || isDefined(translateY)) {\n    transforms += `translate3d(${translateX || 0}px, ${translateY || 0}px, 0) `;\n  }\n\n  // 2. scale\n  if (isDefined(scaleX) || isDefined(scaleY)) {\n    transforms += `scale3d(${isDefined(scaleX) ? scaleX : 1}, ${isDefined(scaleY) ? scaleY : 1}, 1) `;\n  }\n\n  // 3. rotate\n  if (isDefined(rotateZ)) {\n    transforms += `rotateZ(${rotateZ}rad) `;\n  }\n  if (isDefined(rotateX)) {\n    transforms += `rotateX(${rotateX}rad) `;\n  }\n  if (isDefined(rotateY)) {\n    transforms += `rotateY(${rotateY}rad) `;\n  }\n\n  // add transforms\n  if (transforms.length) {\n    styles += `transform:${transforms};`;\n  }\n\n  // add opacity\n  if (isDefined(opacity)) {\n    styles += `opacity:${opacity};`;\n\n    // if we reach zero, we make the element inaccessible\n    if (opacity === 0) {\n      styles += `visibility:hidden;`;\n    }\n\n    // if we're below 100% opacity this element can't be clicked\n    if (opacity < 1) {\n      styles += `pointer-events:none;`;\n    }\n  }\n\n  // add height\n  if (isDefined(height)) {\n    styles += `height:${height}px;`;\n  }\n\n  // add width\n  if (isDefined(width)) {\n    styles += `width:${width}px;`;\n  }\n\n  // apply styles\n  const elementCurrentStyle = element.elementCurrentStyle || '';\n\n  // if new styles does not match current styles, lets update!\n  if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n    element.style.cssText = styles;\n    // store current styles so we can compare them to new styles later on\n    // _not_ getting the style value is faster\n    element.elementCurrentStyle = styles;\n  }\n};\nconst Mixins = {\n  styles,\n  listeners,\n  animations,\n  apis\n};\nconst updateRect = (rect = {}, element = {}, style = {}) => {\n  if (!element.layoutCalculated) {\n    rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n    rect.marginTop = parseInt(style.marginTop, 10) || 0;\n    rect.marginRight = parseInt(style.marginRight, 10) || 0;\n    rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n    rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n    element.layoutCalculated = true;\n  }\n  rect.left = element.offsetLeft || 0;\n  rect.top = element.offsetTop || 0;\n  rect.width = element.offsetWidth || 0;\n  rect.height = element.offsetHeight || 0;\n  rect.right = rect.left + rect.width;\n  rect.bottom = rect.top + rect.height;\n  rect.scrollTop = element.scrollTop;\n  rect.hidden = element.offsetParent === null;\n  return rect;\n};\nconst createView =\n// default view definition\n({\n  // element definition\n  tag = 'div',\n  name = null,\n  attributes = {},\n  // view interaction\n  read = () => {},\n  write = () => {},\n  create = () => {},\n  destroy = () => {},\n  // hooks\n  filterFrameActionsForChild = (child, actions) => actions,\n  didCreateView = () => {},\n  didWriteView = () => {},\n  // rect related\n  ignoreRect = false,\n  ignoreRectUpdate = false,\n  // mixins\n  mixins = []\n} = {}) => (\n// each view requires reference to store\nstore,\n// specific properties for this view\nprops = {}) => {\n  // root element should not be changed\n  const element = createElement(tag, `filepond--${name}`, attributes);\n\n  // style reference should also not be changed\n  const style = window.getComputedStyle(element, null);\n\n  // element rectangle\n  const rect = updateRect();\n  let frameRect = null;\n\n  // rest state\n  let isResting = false;\n\n  // pretty self explanatory\n  const childViews = [];\n\n  // loaded mixins\n  const activeMixins = [];\n\n  // references to created children\n  const ref = {};\n\n  // state used for each instance\n  const state = {};\n\n  // list of writers that will be called to update this view\n  const writers = [write // default writer\n  ];\n  const readers = [read // default reader\n  ];\n  const destroyers = [destroy // default destroy\n  ];\n\n  // core view methods\n  const getElement = () => element;\n  const getChildViews = () => childViews.concat();\n  const getReference = () => ref;\n  const createChildView = store => (view, props) => view(store, props);\n  const getRect = () => {\n    if (frameRect) {\n      return frameRect;\n    }\n    frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n    return frameRect;\n  };\n  const getStyle = () => style;\n\n  /**\n   * Read data from DOM\n   * @private\n   */\n  const _read = () => {\n    frameRect = null;\n\n    // read child views\n    childViews.forEach(child => child._read());\n    const shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n    if (shouldUpdate) {\n      updateRect(rect, element, style);\n    }\n\n    // readers\n    const api = {\n      root: internalAPI,\n      props,\n      rect\n    };\n    readers.forEach(reader => reader(api));\n  };\n\n  /**\n   * Write data to DOM\n   * @private\n   */\n  const _write = (ts, frameActions, shouldOptimize) => {\n    // if no actions, we assume that the view is resting\n    let resting = frameActions.length === 0;\n\n    // writers\n    writers.forEach(writer => {\n      const writerResting = writer({\n        props,\n        root: internalAPI,\n        actions: frameActions,\n        timestamp: ts,\n        shouldOptimize\n      });\n      if (writerResting === false) {\n        resting = false;\n      }\n    });\n\n    // run mixins\n    activeMixins.forEach(mixin => {\n      // if one of the mixins is still busy after write operation, we are not resting\n      const mixinResting = mixin.write(ts);\n      if (mixinResting === false) {\n        resting = false;\n      }\n    });\n\n    // updates child views that are currently attached to the DOM\n    childViews.filter(child => !!child.element.parentNode).forEach(child => {\n      // if a child view is not resting, we are not resting\n      const childResting = child._write(ts, filterFrameActionsForChild(child, frameActions), shouldOptimize);\n      if (!childResting) {\n        resting = false;\n      }\n    });\n\n    // append new elements to DOM and update those\n    childViews\n    //.filter(child => !child.element.parentNode)\n    .forEach((child, index) => {\n      // skip\n      if (child.element.parentNode) {\n        return;\n      }\n\n      // append to DOM\n      internalAPI.appendChild(child.element, index);\n\n      // call read (need to know the size of these elements)\n      child._read();\n\n      // re-call write\n      child._write(ts, filterFrameActionsForChild(child, frameActions), shouldOptimize);\n\n      // we just added somthing to the dom, no rest\n      resting = false;\n    });\n\n    // update resting state\n    isResting = resting;\n    didWriteView({\n      props,\n      root: internalAPI,\n      actions: frameActions,\n      timestamp: ts\n    });\n\n    // let parent know if we are resting\n    return resting;\n  };\n  const _destroy = () => {\n    activeMixins.forEach(mixin => mixin.destroy());\n    destroyers.forEach(destroyer => {\n      destroyer({\n        root: internalAPI,\n        props\n      });\n    });\n    childViews.forEach(child => child._destroy());\n  };\n\n  // sharedAPI\n  const sharedAPIDefinition = {\n    element: {\n      get: getElement\n    },\n    style: {\n      get: getStyle\n    },\n    childViews: {\n      get: getChildViews\n    }\n  };\n\n  // private API definition\n  const internalAPIDefinition = {\n    ...sharedAPIDefinition,\n    rect: {\n      get: getRect\n    },\n    // access to custom children references\n    ref: {\n      get: getReference\n    },\n    // dom modifiers\n    is: needle => name === needle,\n    appendChild: appendChild(element),\n    createChildView: createChildView(store),\n    linkView: view => {\n      childViews.push(view);\n      return view;\n    },\n    unlinkView: view => {\n      childViews.splice(childViews.indexOf(view), 1);\n    },\n    appendChildView: appendChildView(element, childViews),\n    removeChildView: removeChildView(element, childViews),\n    registerWriter: writer => writers.push(writer),\n    registerReader: reader => readers.push(reader),\n    registerDestroyer: destroyer => destroyers.push(destroyer),\n    invalidateLayout: () => element.layoutCalculated = false,\n    // access to data store\n    dispatch: store.dispatch,\n    query: store.query\n  };\n\n  // public view API methods\n  const externalAPIDefinition = {\n    element: {\n      get: getElement\n    },\n    childViews: {\n      get: getChildViews\n    },\n    rect: {\n      get: getRect\n    },\n    resting: {\n      get: () => isResting\n    },\n    isRectIgnored: () => ignoreRect,\n    _read,\n    _write,\n    _destroy\n  };\n\n  // mixin API methods\n  const mixinAPIDefinition = {\n    ...sharedAPIDefinition,\n    rect: {\n      get: () => rect\n    }\n  };\n\n  // add mixin functionality\n  Object.keys(mixins).sort((a, b) => {\n    // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n    if (a === 'styles') {\n      return 1;\n    } else if (b === 'styles') {\n      return -1;\n    }\n    return 0;\n  }).forEach(key => {\n    const mixinAPI = Mixins[key]({\n      mixinConfig: mixins[key],\n      viewProps: props,\n      viewState: state,\n      viewInternalAPI: internalAPIDefinition,\n      viewExternalAPI: externalAPIDefinition,\n      view: createObject(mixinAPIDefinition)\n    });\n    if (mixinAPI) {\n      activeMixins.push(mixinAPI);\n    }\n  });\n\n  // construct private api\n  const internalAPI = createObject(internalAPIDefinition);\n\n  // create the view\n  create({\n    root: internalAPI,\n    props\n  });\n\n  // append created child views to root node\n  const childCount = getChildCount(element); // need to know the current child count so appending happens in correct order\n  childViews.forEach((child, index) => {\n    internalAPI.appendChild(child.element, childCount + index);\n  });\n\n  // call did create\n  didCreateView(internalAPI);\n\n  // expose public api\n  return createObject(externalAPIDefinition);\n};\nconst createPainter = (read, write, fps = 60) => {\n  const name = '__framePainter';\n\n  // set global painter\n  if (window[name]) {\n    window[name].readers.push(read);\n    window[name].writers.push(write);\n    return;\n  }\n  window[name] = {\n    readers: [read],\n    writers: [write]\n  };\n  const painter = window[name];\n  const interval = 1000 / fps;\n  let last = null;\n  let id = null;\n  let requestTick = null;\n  let cancelTick = null;\n  const setTimerType = () => {\n    if (document.hidden) {\n      requestTick = () => window.setTimeout(() => tick(performance.now()), interval);\n      cancelTick = () => window.clearTimeout(id);\n    } else {\n      requestTick = () => window.requestAnimationFrame(tick);\n      cancelTick = () => window.cancelAnimationFrame(id);\n    }\n  };\n  document.addEventListener('visibilitychange', () => {\n    if (cancelTick) cancelTick();\n    setTimerType();\n    tick(performance.now());\n  });\n  const tick = ts => {\n    // queue next tick\n    id = requestTick(tick);\n\n    // limit fps\n    if (!last) {\n      last = ts;\n    }\n    const delta = ts - last;\n    if (delta <= interval) {\n      // skip frame\n      return;\n    }\n\n    // align next frame\n    last = ts - delta % interval;\n\n    // update view\n    painter.readers.forEach(read => read());\n    painter.writers.forEach(write => write(ts));\n  };\n  setTimerType();\n  tick(performance.now());\n  return {\n    pause: () => {\n      cancelTick(id);\n    }\n  };\n};\nconst createRoute = (routes, fn) => ({\n  root,\n  props,\n  actions = [],\n  timestamp,\n  shouldOptimize\n}) => {\n  actions.filter(action => routes[action.type]).forEach(action => routes[action.type]({\n    root,\n    props,\n    action: action.data,\n    timestamp,\n    shouldOptimize\n  }));\n  if (fn) {\n    fn({\n      root,\n      props,\n      actions,\n      timestamp,\n      shouldOptimize\n    });\n  }\n};\nconst insertBefore = (newNode, referenceNode) => referenceNode.parentNode.insertBefore(newNode, referenceNode);\nconst insertAfter = (newNode, referenceNode) => {\n  return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\nconst isArray = value => Array.isArray(value);\nconst isEmpty = value => value == null;\nconst trim = str => str.trim();\nconst toString = value => '' + value;\nconst toArray = (value, splitter = ',') => {\n  if (isEmpty(value)) {\n    return [];\n  }\n  if (isArray(value)) {\n    return value;\n  }\n  return toString(value).split(splitter).map(trim).filter(str => str.length);\n};\nconst isBoolean = value => typeof value === 'boolean';\nconst toBoolean = value => isBoolean(value) ? value : value === 'true';\nconst isString = value => typeof value === 'string';\nconst toNumber = value => isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\nconst toInt = value => parseInt(toNumber(value), 10);\nconst toFloat = value => parseFloat(toNumber(value));\nconst isInt = value => isNumber(value) && isFinite(value) && Math.floor(value) === value;\nconst toBytes = (value, base = 1000) => {\n  // is in bytes\n  if (isInt(value)) {\n    return value;\n  }\n\n  // is natural file size\n  let naturalFileSize = toString(value).trim();\n\n  // if is value in megabytes\n  if (/MB$/i.test(naturalFileSize)) {\n    naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n    return toInt(naturalFileSize) * base * base;\n  }\n\n  // if is value in kilobytes\n  if (/KB/i.test(naturalFileSize)) {\n    naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n    return toInt(naturalFileSize) * base;\n  }\n  return toInt(naturalFileSize);\n};\nconst isFunction = value => typeof value === 'function';\nconst toFunctionReference = string => {\n  let ref = self;\n  let levels = string.split('.');\n  let level = null;\n  while (level = levels.shift()) {\n    ref = ref[level];\n    if (!ref) {\n      return null;\n    }\n  }\n  return ref;\n};\nconst methods = {\n  process: 'POST',\n  patch: 'PATCH',\n  revert: 'DELETE',\n  fetch: 'GET',\n  restore: 'GET',\n  load: 'GET'\n};\nconst createServerAPI = outline => {\n  const api = {};\n  api.url = isString(outline) ? outline : outline.url || '';\n  api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n  api.headers = outline.headers ? outline.headers : {};\n  forin(methods, key => {\n    api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);\n  });\n\n  // remove process if no url or process on outline\n  api.process = outline.process || isString(outline) || outline.url ? api.process : null;\n\n  // special treatment for remove\n  api.remove = outline.remove || null;\n\n  // remove generic headers from api object\n  delete api.headers;\n  return api;\n};\nconst createAction = (name, outline, method, timeout, headers) => {\n  // is explicitely set to null so disable\n  if (outline === null) {\n    return null;\n  }\n\n  // if is custom function, done! Dev handles everything.\n  if (typeof outline === 'function') {\n    return outline;\n  }\n\n  // build action object\n  const action = {\n    url: method === 'GET' || method === 'PATCH' ? `?${name}=` : '',\n    method,\n    headers,\n    withCredentials: false,\n    timeout,\n    onload: null,\n    ondata: null,\n    onerror: null\n  };\n\n  // is a single url\n  if (isString(outline)) {\n    action.url = outline;\n    return action;\n  }\n\n  // overwrite\n  Object.assign(action, outline);\n\n  // see if should reformat headers;\n  if (isString(action.headers)) {\n    const parts = action.headers.split(/:(.+)/);\n    action.headers = {\n      header: parts[0],\n      value: parts[1]\n    };\n  }\n\n  // if is bool withCredentials\n  action.withCredentials = toBoolean(action.withCredentials);\n  return action;\n};\nconst toServerAPI = value => createServerAPI(value);\nconst isNull = value => value === null;\nconst isObject = value => typeof value === 'object' && value !== null;\nconst isAPI = value => {\n  return isObject(value) && isString(value.url) && isObject(value.process) && isObject(value.revert) && isObject(value.restore) && isObject(value.fetch);\n};\nconst getType = value => {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (isNull(value)) {\n    return 'null';\n  }\n  if (isInt(value)) {\n    return 'int';\n  }\n  if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n    return 'bytes';\n  }\n  if (isAPI(value)) {\n    return 'api';\n  }\n  return typeof value;\n};\nconst replaceSingleQuotes = str => str.replace(/{\\s*'/g, '{\"').replace(/'\\s*}/g, '\"}').replace(/'\\s*:/g, '\":').replace(/:\\s*'/g, ':\"').replace(/,\\s*'/g, ',\"').replace(/'\\s*,/g, '\",');\nconst conversionTable = {\n  array: toArray,\n  boolean: toBoolean,\n  int: value => getType(value) === 'bytes' ? toBytes(value) : toInt(value),\n  number: toFloat,\n  float: toFloat,\n  bytes: toBytes,\n  string: value => isFunction(value) ? value : toString(value),\n  function: value => toFunctionReference(value),\n  serverapi: toServerAPI,\n  object: value => {\n    try {\n      return JSON.parse(replaceSingleQuotes(value));\n    } catch (e) {\n      return null;\n    }\n  }\n};\nconst convertTo = (value, type) => conversionTable[type](value);\nconst getValueByType = (newValue, defaultValue, valueType) => {\n  // can always assign default value\n  if (newValue === defaultValue) {\n    return newValue;\n  }\n\n  // get the type of the new value\n  let newValueType = getType(newValue);\n\n  // is valid type?\n  if (newValueType !== valueType) {\n    // is string input, let's attempt to convert\n    const convertedValue = convertTo(newValue, valueType);\n\n    // what is the type now\n    newValueType = getType(convertedValue);\n\n    // no valid conversions found\n    if (convertedValue === null) {\n      throw `Trying to assign value with incorrect type to \"${option}\", allowed type: \"${valueType}\"`;\n    } else {\n      newValue = convertedValue;\n    }\n  }\n\n  // assign new value\n  return newValue;\n};\nconst createOption = (defaultValue, valueType) => {\n  let currentValue = defaultValue;\n  return {\n    enumerable: true,\n    get: () => currentValue,\n    set: newValue => {\n      currentValue = getValueByType(newValue, defaultValue, valueType);\n    }\n  };\n};\nconst createOptions = options => {\n  const obj = {};\n  forin(options, prop => {\n    const optionDefinition = options[prop];\n    obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n  });\n  return createObject(obj);\n};\nconst createInitialState = options => ({\n  // model\n  items: [],\n  // timeout used for calling update items\n  listUpdateTimeout: null,\n  // timeout used for stacking metadata updates\n  itemUpdateTimeout: null,\n  // queue of items waiting to be processed\n  processingQueue: [],\n  // options\n  options: createOptions(options)\n});\nconst fromCamels = (string, separator = '-') => string.split(/(?=[A-Z])/).map(part => part.toLowerCase()).join(separator);\nconst createOptionAPI = (store, options) => {\n  const obj = {};\n  forin(options, key => {\n    obj[key] = {\n      get: () => store.getState().options[key],\n      set: value => {\n        store.dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n          value\n        });\n      }\n    };\n  });\n  return obj;\n};\nconst createOptionActions = options => (dispatch, query, state) => {\n  const obj = {};\n  forin(options, key => {\n    const name = fromCamels(key, '_').toUpperCase();\n    obj[`SET_${name}`] = action => {\n      try {\n        state.options[key] = action.value;\n      } catch (e) {\n        // nope, failed\n      }\n\n      // we successfully set the value of this option\n      dispatch(`DID_SET_${name}`, {\n        value: state.options[key]\n      });\n    };\n  });\n  return obj;\n};\nconst createOptionQueries = options => state => {\n  const obj = {};\n  forin(options, key => {\n    obj[`GET_${fromCamels(key, '_').toUpperCase()}`] = action => state.options[key];\n  });\n  return obj;\n};\nconst InteractionMethod = {\n  API: 1,\n  DROP: 2,\n  BROWSE: 3,\n  PASTE: 4,\n  NONE: 5\n};\nconst getUniqueId = () => Math.random().toString(36).substring(2, 11);\nconst arrayRemove = (arr, index) => arr.splice(index, 1);\nconst run = (cb, sync) => {\n  if (sync) {\n    cb();\n  } else if (document.hidden) {\n    Promise.resolve(1).then(cb);\n  } else {\n    setTimeout(cb, 0);\n  }\n};\nconst on = () => {\n  const listeners = [];\n  const off = (event, cb) => {\n    arrayRemove(listeners, listeners.findIndex(listener => listener.event === event && (listener.cb === cb || !cb)));\n  };\n  const fire = (event, args, sync) => {\n    listeners.filter(listener => listener.event === event).map(listener => listener.cb).forEach(cb => run(() => cb(...args), sync));\n  };\n  return {\n    fireSync: (event, ...args) => {\n      fire(event, args, true);\n    },\n    fire: (event, ...args) => {\n      fire(event, args, false);\n    },\n    on: (event, cb) => {\n      listeners.push({\n        event,\n        cb\n      });\n    },\n    onOnce: (event, cb) => {\n      listeners.push({\n        event,\n        cb: (...args) => {\n          off(event, cb);\n          cb(...args);\n        }\n      });\n    },\n    off\n  };\n};\nconst copyObjectPropertiesToObject = (src, target, excluded) => {\n  Object.getOwnPropertyNames(src).filter(property => !excluded.includes(property)).forEach(key => Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key)));\n};\nconst PRIVATE = ['fire', 'process', 'revert', 'load', 'on', 'off', 'onOnce', 'retryLoad', 'extend', 'archive', 'archived', 'release', 'released', 'requestProcessing', 'freeze'];\nconst createItemAPI = item => {\n  const api = {};\n  copyObjectPropertiesToObject(item, api, PRIVATE);\n  return api;\n};\nconst removeReleasedItems = items => {\n  items.forEach((item, index) => {\n    if (item.released) {\n      arrayRemove(items, index);\n    }\n  });\n};\nconst ItemStatus = {\n  INIT: 1,\n  IDLE: 2,\n  PROCESSING_QUEUED: 9,\n  PROCESSING: 3,\n  PROCESSING_COMPLETE: 5,\n  PROCESSING_ERROR: 6,\n  PROCESSING_REVERT_ERROR: 10,\n  LOADING: 7,\n  LOAD_ERROR: 8\n};\nconst FileOrigin = {\n  INPUT: 1,\n  LIMBO: 2,\n  LOCAL: 3\n};\nconst getNonNumeric = str => /[^0-9]+/.exec(str);\nconst getDecimalSeparator = () => getNonNumeric(1.1.toLocaleString())[0];\nconst getThousandsSeparator = () => {\n  // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n  // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n  const decimalSeparator = getDecimalSeparator();\n  const thousandsStringWithSeparator = 1000.0.toLocaleString();\n  const thousandsStringWithoutSeparator = 1000.0.toString();\n  if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n    return getNonNumeric(thousandsStringWithSeparator)[0];\n  }\n  return decimalSeparator === '.' ? ',' : '.';\n};\nconst Type = {\n  BOOLEAN: 'boolean',\n  INT: 'int',\n  NUMBER: 'number',\n  STRING: 'string',\n  ARRAY: 'array',\n  OBJECT: 'object',\n  FUNCTION: 'function',\n  ACTION: 'action',\n  SERVER_API: 'serverapi',\n  REGEX: 'regex'\n};\n\n// all registered filters\nconst filters = [];\n\n// loops over matching filters and passes options to each filter, returning the mapped results\nconst applyFilterChain = (key, value, utils) => new Promise((resolve, reject) => {\n  // find matching filters for this key\n  const matchingFilters = filters.filter(f => f.key === key).map(f => f.cb);\n\n  // resolve now\n  if (matchingFilters.length === 0) {\n    resolve(value);\n    return;\n  }\n\n  // first filter to kick things of\n  const initialFilter = matchingFilters.shift();\n\n  // chain filters\n  matchingFilters.reduce(\n  // loop over promises passing value to next promise\n  (current, next) => current.then(value => next(value, utils)),\n  // call initial filter, will return a promise\n  initialFilter(value, utils)\n\n  // all executed\n  ).then(value => resolve(value)).catch(error => reject(error));\n});\nconst applyFilters = (key, value, utils) => filters.filter(f => f.key === key).map(f => f.cb(value, utils));\n\n// adds a new filter to the list\nconst addFilter = (key, cb) => filters.push({\n  key,\n  cb\n});\nconst extendDefaultOptions = additionalOptions => Object.assign(defaultOptions, additionalOptions);\nconst getOptions = () => ({\n  ...defaultOptions\n});\nconst setOptions = opts => {\n  forin(opts, (key, value) => {\n    // key does not exist, so this option cannot be set\n    if (!defaultOptions[key]) {\n      return;\n    }\n    defaultOptions[key][0] = getValueByType(value, defaultOptions[key][0], defaultOptions[key][1]);\n  });\n};\n\n// default options on app\nconst defaultOptions = {\n  // the id to add to the root element\n  id: [null, Type.STRING],\n  // input field name to use\n  name: ['filepond', Type.STRING],\n  // disable the field\n  disabled: [false, Type.BOOLEAN],\n  // classname to put on wrapper\n  className: [null, Type.STRING],\n  // is the field required\n  required: [false, Type.BOOLEAN],\n  // Allow media capture when value is set\n  captureMethod: [null, Type.STRING],\n  // - \"camera\", \"microphone\" or \"camcorder\",\n  // - Does not work with multiple on apple devices\n  // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n\n  // sync `acceptedFileTypes` property with `accept` attribute\n  allowSyncAcceptAttribute: [true, Type.BOOLEAN],\n  // Feature toggles\n  allowDrop: [true, Type.BOOLEAN],\n  // Allow dropping of files\n  allowBrowse: [true, Type.BOOLEAN],\n  // Allow browsing the file system\n  allowPaste: [true, Type.BOOLEAN],\n  // Allow pasting files\n  allowMultiple: [false, Type.BOOLEAN],\n  // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n  allowReplace: [true, Type.BOOLEAN],\n  // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n  allowRevert: [true, Type.BOOLEAN],\n  // Allows user to revert file upload\n  allowRemove: [true, Type.BOOLEAN],\n  // Allow user to remove a file\n  allowProcess: [true, Type.BOOLEAN],\n  // Allows user to process a file, when set to false, this removes the file upload button\n  allowReorder: [false, Type.BOOLEAN],\n  // Allow reordering of files\n  allowDirectoriesOnly: [false, Type.BOOLEAN],\n  // Allow only selecting directories with browse (no support for filtering dnd at this point)\n\n  // Try store file if `server` not set\n  storeAsFile: [false, Type.BOOLEAN],\n  // Revert mode\n  forceRevert: [false, Type.BOOLEAN],\n  // Set to 'force' to require the file to be reverted before removal\n\n  // Input requirements\n  maxFiles: [null, Type.INT],\n  // Max number of files\n  checkValidity: [false, Type.BOOLEAN],\n  // Enables custom validity messages\n\n  // Where to put file\n  itemInsertLocationFreedom: [true, Type.BOOLEAN],\n  // Set to false to always add items to begin or end of list\n  itemInsertLocation: ['before', Type.STRING],\n  // Default index in list to add items that have been dropped at the top of the list\n  itemInsertInterval: [75, Type.INT],\n  // Drag 'n Drop related\n  dropOnPage: [false, Type.BOOLEAN],\n  // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n  dropOnElement: [true, Type.BOOLEAN],\n  // Drop needs to happen on element (set to false to also load drops outside of Up)\n  dropValidation: [false, Type.BOOLEAN],\n  // Enable or disable validating files on drop\n  ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n  // Upload related\n  instantUpload: [true, Type.BOOLEAN],\n  // Should upload files immediately on drop\n  maxParallelUploads: [2, Type.INT],\n  // Maximum files to upload in parallel\n  allowMinimumUploadDuration: [true, Type.BOOLEAN],\n  // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened\n\n  // Chunks\n  chunkUploads: [false, Type.BOOLEAN],\n  // Enable chunked uploads\n  chunkForce: [false, Type.BOOLEAN],\n  // Force use of chunk uploads even for files smaller than chunk size\n  chunkSize: [5000000, Type.INT],\n  // Size of chunks (5MB default)\n  chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY],\n  // Amount of times to retry upload of a chunk when it fails\n\n  // The server api end points to use for uploading (see docs)\n  server: [null, Type.SERVER_API],\n  // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000\n  fileSizeBase: [1000, Type.INT],\n  // Labels and status messages\n  labelFileSizeBytes: ['bytes', Type.STRING],\n  labelFileSizeKilobytes: ['KB', Type.STRING],\n  labelFileSizeMegabytes: ['MB', Type.STRING],\n  labelFileSizeGigabytes: ['GB', Type.STRING],\n  labelDecimalSeparator: [getDecimalSeparator(), Type.STRING],\n  // Default is locale separator\n  labelThousandsSeparator: [getThousandsSeparator(), Type.STRING],\n  // Default is locale separator\n\n  labelIdle: ['Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>', Type.STRING],\n  labelInvalidField: ['Field contains invalid files', Type.STRING],\n  labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n  labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n  labelFileCountSingular: ['file in list', Type.STRING],\n  labelFileCountPlural: ['files in list', Type.STRING],\n  labelFileLoading: ['Loading', Type.STRING],\n  labelFileAdded: ['Added', Type.STRING],\n  // assistive only\n  labelFileLoadError: ['Error during load', Type.STRING],\n  labelFileRemoved: ['Removed', Type.STRING],\n  // assistive only\n  labelFileRemoveError: ['Error during remove', Type.STRING],\n  labelFileProcessing: ['Uploading', Type.STRING],\n  labelFileProcessingComplete: ['Upload complete', Type.STRING],\n  labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n  labelFileProcessingError: ['Error during upload', Type.STRING],\n  labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n  labelTapToCancel: ['tap to cancel', Type.STRING],\n  labelTapToRetry: ['tap to retry', Type.STRING],\n  labelTapToUndo: ['tap to undo', Type.STRING],\n  labelButtonRemoveItem: ['Remove', Type.STRING],\n  labelButtonAbortItemLoad: ['Abort', Type.STRING],\n  labelButtonRetryItemLoad: ['Retry', Type.STRING],\n  labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n  labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n  labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n  labelButtonProcessItem: ['Upload', Type.STRING],\n  // make sure width and height plus viewpox are even numbers so icons are nicely centered\n  iconRemove: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n  iconProcess: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>', Type.STRING],\n  iconRetry: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n  iconUndo: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n  iconDone: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n  // event handlers\n  oninit: [null, Type.FUNCTION],\n  onwarning: [null, Type.FUNCTION],\n  onerror: [null, Type.FUNCTION],\n  onactivatefile: [null, Type.FUNCTION],\n  oninitfile: [null, Type.FUNCTION],\n  onaddfilestart: [null, Type.FUNCTION],\n  onaddfileprogress: [null, Type.FUNCTION],\n  onaddfile: [null, Type.FUNCTION],\n  onprocessfilestart: [null, Type.FUNCTION],\n  onprocessfileprogress: [null, Type.FUNCTION],\n  onprocessfileabort: [null, Type.FUNCTION],\n  onprocessfilerevert: [null, Type.FUNCTION],\n  onprocessfile: [null, Type.FUNCTION],\n  onprocessfiles: [null, Type.FUNCTION],\n  onremovefile: [null, Type.FUNCTION],\n  onpreparefile: [null, Type.FUNCTION],\n  onupdatefiles: [null, Type.FUNCTION],\n  onreorderfiles: [null, Type.FUNCTION],\n  // hooks\n  beforeDropFile: [null, Type.FUNCTION],\n  beforeAddFile: [null, Type.FUNCTION],\n  beforeRemoveFile: [null, Type.FUNCTION],\n  beforePrepareFile: [null, Type.FUNCTION],\n  // styles\n  stylePanelLayout: [null, Type.STRING],\n  // null 'integrated', 'compact', 'circle'\n  stylePanelAspectRatio: [null, Type.STRING],\n  // null or '3:2' or 1\n  styleItemPanelAspectRatio: [null, Type.STRING],\n  styleButtonRemoveItemPosition: ['left', Type.STRING],\n  styleButtonProcessItemPosition: ['right', Type.STRING],\n  styleLoadIndicatorPosition: ['right', Type.STRING],\n  styleProgressIndicatorPosition: ['right', Type.STRING],\n  styleButtonRemoveItemAlign: [false, Type.BOOLEAN],\n  // custom initial files array\n  files: [[], Type.ARRAY],\n  // show support by displaying credits\n  credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY]\n};\nconst getItemByQuery = (items, query) => {\n  // just return first index\n  if (isEmpty(query)) {\n    return items[0] || null;\n  }\n\n  // query is index\n  if (isInt(query)) {\n    return items[query] || null;\n  }\n\n  // if query is item, get the id\n  if (typeof query === 'object') {\n    query = query.id;\n  }\n\n  // assume query is a string and return item by id\n  return items.find(item => item.id === query) || null;\n};\nconst getNumericAspectRatioFromString = aspectRatio => {\n  if (isEmpty(aspectRatio)) {\n    return aspectRatio;\n  }\n  if (/:/.test(aspectRatio)) {\n    const parts = aspectRatio.split(':');\n    return parts[1] / parts[0];\n  }\n  return parseFloat(aspectRatio);\n};\nconst getActiveItems = items => items.filter(item => !item.archived);\nconst Status = {\n  EMPTY: 0,\n  IDLE: 1,\n  // waiting\n  ERROR: 2,\n  // a file is in error state\n  BUSY: 3,\n  // busy processing or loading\n  READY: 4 // all files uploaded\n};\nlet res = null;\nconst canUpdateFileInput = () => {\n  if (res === null) {\n    try {\n      const dataTransfer = new DataTransfer();\n      dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));\n      const el = document.createElement('input');\n      el.setAttribute('type', 'file');\n      el.files = dataTransfer.files;\n      res = el.files.length === 1;\n    } catch (err) {\n      res = false;\n    }\n  }\n  return res;\n};\nconst ITEM_ERROR = [ItemStatus.LOAD_ERROR, ItemStatus.PROCESSING_ERROR, ItemStatus.PROCESSING_REVERT_ERROR];\nconst ITEM_BUSY = [ItemStatus.LOADING, ItemStatus.PROCESSING, ItemStatus.PROCESSING_QUEUED, ItemStatus.INIT];\nconst ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\nconst isItemInErrorState = item => ITEM_ERROR.includes(item.status);\nconst isItemInBusyState = item => ITEM_BUSY.includes(item.status);\nconst isItemInReadyState = item => ITEM_READY.includes(item.status);\nconst isAsync = state => isObject(state.options.server) && (isObject(state.options.server.process) || isFunction(state.options.server.process));\nconst queries = state => ({\n  GET_STATUS: () => {\n    const items = getActiveItems(state.items);\n    const {\n      EMPTY,\n      ERROR,\n      BUSY,\n      IDLE,\n      READY\n    } = Status;\n    if (items.length === 0) return EMPTY;\n    if (items.some(isItemInErrorState)) return ERROR;\n    if (items.some(isItemInBusyState)) return BUSY;\n    if (items.some(isItemInReadyState)) return READY;\n    return IDLE;\n  },\n  GET_ITEM: query => getItemByQuery(state.items, query),\n  GET_ACTIVE_ITEM: query => getItemByQuery(getActiveItems(state.items), query),\n  GET_ACTIVE_ITEMS: () => getActiveItems(state.items),\n  GET_ITEMS: () => state.items,\n  GET_ITEM_NAME: query => {\n    const item = getItemByQuery(state.items, query);\n    return item ? item.filename : null;\n  },\n  GET_ITEM_SIZE: query => {\n    const item = getItemByQuery(state.items, query);\n    return item ? item.fileSize : null;\n  },\n  GET_STYLES: () => Object.keys(state.options).filter(key => /^style/.test(key)).map(option => ({\n    name: option,\n    value: state.options[option]\n  })),\n  GET_PANEL_ASPECT_RATIO: () => {\n    const isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n    const aspectRatio = isShapeCircle ? 1 : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n    return aspectRatio;\n  },\n  GET_ITEM_PANEL_ASPECT_RATIO: () => state.options.styleItemPanelAspectRatio,\n  GET_ITEMS_BY_STATUS: status => getActiveItems(state.items).filter(item => item.status === status),\n  GET_TOTAL_ITEMS: () => getActiveItems(state.items).length,\n  SHOULD_UPDATE_FILE_INPUT: () => state.options.storeAsFile && canUpdateFileInput() && !isAsync(state),\n  IS_ASYNC: () => isAsync(state),\n  GET_FILE_SIZE_LABELS: query => ({\n    labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,\n    labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,\n    labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,\n    labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined\n  })\n});\nconst hasRoomForItem = state => {\n  const count = getActiveItems(state.items).length;\n\n  // if cannot have multiple items, to add one item it should currently not contain items\n  if (!state.options.allowMultiple) {\n    return count === 0;\n  }\n\n  // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n  const maxFileCount = state.options.maxFiles;\n  if (maxFileCount === null) {\n    return true;\n  }\n\n  // we check if the current count is smaller than the max count, if so, another file can still be added\n  if (count < maxFileCount) {\n    return true;\n  }\n\n  // no more room for another file\n  return false;\n};\nconst limit = (value, min, max) => Math.max(Math.min(max, value), min);\nconst arrayInsert = (arr, index, item) => arr.splice(index, 0, item);\nconst insertItem = (items, item, index) => {\n  if (isEmpty(item)) {\n    return null;\n  }\n\n  // if index is undefined, append\n  if (typeof index === 'undefined') {\n    items.push(item);\n    return item;\n  }\n\n  // limit the index to the size of the items array\n  index = limit(index, 0, items.length);\n\n  // add item to array\n  arrayInsert(items, index, item);\n\n  // expose\n  return item;\n};\nconst isBase64DataURI = str => /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(str);\nconst getFilenameFromURL = url => `${url}`.split('/').pop().split('?').shift();\nconst getExtensionFromFilename = name => name.split('.').pop();\nconst guesstimateExtension = type => {\n  // if no extension supplied, exit here\n  if (typeof type !== 'string') {\n    return '';\n  }\n\n  // get subtype\n  const subtype = type.split('/').pop();\n\n  // is svg subtype\n  if (/svg/.test(subtype)) {\n    return 'svg';\n  }\n  if (/zip|compressed/.test(subtype)) {\n    return 'zip';\n  }\n  if (/plain/.test(subtype)) {\n    return 'txt';\n  }\n  if (/msword/.test(subtype)) {\n    return 'doc';\n  }\n\n  // if is valid subtype\n  if (/[a-z]+/.test(subtype)) {\n    // always use jpg extension\n    if (subtype === 'jpeg') {\n      return 'jpg';\n    }\n\n    // return subtype\n    return subtype;\n  }\n  return '';\n};\nconst leftPad = (value, padding = '') => (padding + value).slice(-padding.length);\nconst getDateString = (date = new Date()) => `${date.getFullYear()}-${leftPad(date.getMonth() + 1, '00')}-${leftPad(date.getDate(), '00')}_${leftPad(date.getHours(), '00')}-${leftPad(date.getMinutes(), '00')}-${leftPad(date.getSeconds(), '00')}`;\nconst getFileFromBlob = (blob, filename, type = null, extension = null) => {\n  const file = typeof type === 'string' ? blob.slice(0, blob.size, type) : blob.slice(0, blob.size, blob.type);\n  file.lastModifiedDate = new Date();\n\n  // copy relative path\n  if (blob._relativePath) file._relativePath = blob._relativePath;\n\n  // if blob has name property, use as filename if no filename supplied\n  if (!isString(filename)) {\n    filename = getDateString();\n  }\n\n  // if filename supplied but no extension and filename has extension\n  if (filename && extension === null && getExtensionFromFilename(filename)) {\n    file.name = filename;\n  } else {\n    extension = extension || guesstimateExtension(file.type);\n    file.name = filename + (extension ? '.' + extension : '');\n  }\n  return file;\n};\nconst getBlobBuilder = () => {\n  return window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n};\nconst createBlob = (arrayBuffer, mimeType) => {\n  const BB = getBlobBuilder();\n  if (BB) {\n    const bb = new BB();\n    bb.append(arrayBuffer);\n    return bb.getBlob(mimeType);\n  }\n  return new Blob([arrayBuffer], {\n    type: mimeType\n  });\n};\nconst getBlobFromByteStringWithMimeType = (byteString, mimeType) => {\n  const ab = new ArrayBuffer(byteString.length);\n  const ia = new Uint8Array(ab);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n  return createBlob(ab, mimeType);\n};\nconst getMimeTypeFromBase64DataURI = dataURI => {\n  return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n};\nconst getBase64DataFromBase64DataURI = dataURI => {\n  // get data part of string (remove data:image/jpeg...,)\n  const data = dataURI.split(',')[1];\n\n  // remove any whitespace as that causes InvalidCharacterError in IE\n  return data.replace(/\\s/g, '');\n};\nconst getByteStringFromBase64DataURI = dataURI => {\n  return atob(getBase64DataFromBase64DataURI(dataURI));\n};\nconst getBlobFromBase64DataURI = dataURI => {\n  const mimeType = getMimeTypeFromBase64DataURI(dataURI);\n  const byteString = getByteStringFromBase64DataURI(dataURI);\n  return getBlobFromByteStringWithMimeType(byteString, mimeType);\n};\nconst getFileFromBase64DataURI = (dataURI, filename, extension) => {\n  return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n};\nconst getFileNameFromHeader = header => {\n  // test if is content disposition header, if not exit\n  if (!/^content-disposition:/i.test(header)) return null;\n\n  // get filename parts\n  const matches = header.split(/filename=|filename\\*=.+''/).splice(1).map(name => name.trim().replace(/^[\"']|[;\"']{0,2}$/g, '')).filter(name => name.length);\n  return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n};\nconst getFileSizeFromHeader = header => {\n  if (/content-length:/i.test(header)) {\n    const size = header.match(/[0-9]+/)[0];\n    return size ? parseInt(size, 10) : null;\n  }\n  return null;\n};\nconst getTranfserIdFromHeader = header => {\n  if (/x-content-transfer-id:/i.test(header)) {\n    const id = (header.split(':')[1] || '').trim();\n    return id || null;\n  }\n  return null;\n};\nconst getFileInfoFromHeaders = headers => {\n  const info = {\n    source: null,\n    name: null,\n    size: null\n  };\n  const rows = headers.split('\\n');\n  for (let header of rows) {\n    const name = getFileNameFromHeader(header);\n    if (name) {\n      info.name = name;\n      continue;\n    }\n    const size = getFileSizeFromHeader(header);\n    if (size) {\n      info.size = size;\n      continue;\n    }\n    const source = getTranfserIdFromHeader(header);\n    if (source) {\n      info.source = source;\n      continue;\n    }\n  }\n  return info;\n};\nconst createFileLoader = fetchFn => {\n  const state = {\n    source: null,\n    complete: false,\n    progress: 0,\n    size: null,\n    timestamp: null,\n    duration: 0,\n    request: null\n  };\n  const getProgress = () => state.progress;\n  const abort = () => {\n    if (state.request && state.request.abort) {\n      state.request.abort();\n    }\n  };\n\n  // load source\n  const load = () => {\n    // get quick reference\n    const source = state.source;\n    api.fire('init', source);\n\n    // Load Files\n    if (source instanceof File) {\n      api.fire('load', source);\n    } else if (source instanceof Blob) {\n      // Load blobs, set default name to current date\n      api.fire('load', getFileFromBlob(source, source.name));\n    } else if (isBase64DataURI(source)) {\n      // Load base 64, set default name to current date\n      api.fire('load', getFileFromBase64DataURI(source));\n    } else {\n      // Deal as if is external URL, let's load it!\n      loadURL(source);\n    }\n  };\n\n  // loads a url\n  const loadURL = url => {\n    // is remote url and no fetch method supplied\n    if (!fetchFn) {\n      api.fire('error', {\n        type: 'error',\n        body: \"Can't load URL\",\n        code: 400\n      });\n      return;\n    }\n\n    // set request start\n    state.timestamp = Date.now();\n\n    // load file\n    state.request = fetchFn(url, response => {\n      // update duration\n      state.duration = Date.now() - state.timestamp;\n\n      // done!\n      state.complete = true;\n\n      // turn blob response into a file\n      if (response instanceof Blob) {\n        response = getFileFromBlob(response, response.name || getFilenameFromURL(url));\n      }\n      api.fire('load',\n      // if has received blob, we go with blob, if no response, we return null\n      response instanceof Blob ? response : response ? response.body : null);\n    }, error => {\n      api.fire('error', typeof error === 'string' ? {\n        type: 'error',\n        code: 0,\n        body: error\n      } : error);\n    }, (computable, current, total) => {\n      // collected some meta data already\n      if (total) {\n        state.size = total;\n      }\n\n      // update duration\n      state.duration = Date.now() - state.timestamp;\n\n      // if we can't compute progress, we're not going to fire progress events\n      if (!computable) {\n        state.progress = null;\n        return;\n      }\n\n      // update progress percentage\n      state.progress = current / total;\n\n      // expose\n      api.fire('progress', state.progress);\n    }, () => {\n      api.fire('abort');\n    }, response => {\n      const fileinfo = getFileInfoFromHeaders(typeof response === 'string' ? response : response.headers);\n      api.fire('meta', {\n        size: state.size || fileinfo.size,\n        filename: fileinfo.name,\n        source: fileinfo.source\n      });\n    });\n  };\n  const api = {\n    ...on(),\n    setSource: source => state.source = source,\n    getProgress,\n    // file load progress\n    abort,\n    // abort file load\n    load // start load\n  };\n  return api;\n};\nconst isGet = method => /GET|HEAD/.test(method);\nconst sendRequest = (data, url, options) => {\n  const api = {\n    onheaders: () => {},\n    onprogress: () => {},\n    onload: () => {},\n    ontimeout: () => {},\n    onerror: () => {},\n    onabort: () => {},\n    abort: () => {\n      aborted = true;\n      xhr.abort();\n    }\n  };\n\n  // timeout identifier, only used when timeout is defined\n  let aborted = false;\n  let headersReceived = false;\n\n  // set default options\n  options = {\n    method: 'POST',\n    headers: {},\n    withCredentials: false,\n    ...options\n  };\n\n  // encode url\n  url = encodeURI(url);\n\n  // if method is GET, add any received data to url\n\n  if (isGet(options.method) && data) {\n    url = `${url}${encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data))}`;\n  }\n\n  // create request\n  const xhr = new XMLHttpRequest();\n\n  // progress of load\n  const process = isGet(options.method) ? xhr : xhr.upload;\n  process.onprogress = e => {\n    // no progress event when aborted ( onprogress is called once after abort() )\n    if (aborted) {\n      return;\n    }\n    api.onprogress(e.lengthComputable, e.loaded, e.total);\n  };\n\n  // tries to get header info to the app as fast as possible\n  xhr.onreadystatechange = () => {\n    // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n    if (xhr.readyState < 2) {\n      return;\n    }\n\n    // no server response\n    if (xhr.readyState === 4 && xhr.status === 0) {\n      return;\n    }\n    if (headersReceived) {\n      return;\n    }\n    headersReceived = true;\n\n    // we've probably received some useful data in response headers\n    api.onheaders(xhr);\n  };\n\n  // load successful\n  xhr.onload = () => {\n    // is classified as valid response\n    if (xhr.status >= 200 && xhr.status < 300) {\n      api.onload(xhr);\n    } else {\n      api.onerror(xhr);\n    }\n  };\n\n  // error during load\n  xhr.onerror = () => api.onerror(xhr);\n\n  // request aborted\n  xhr.onabort = () => {\n    aborted = true;\n    api.onabort();\n  };\n\n  // request timeout\n  xhr.ontimeout = () => api.ontimeout(xhr);\n\n  // open up open up!\n  xhr.open(options.method, url, true);\n\n  // set timeout if defined (do it after open so IE11 plays ball)\n  if (isInt(options.timeout)) {\n    xhr.timeout = options.timeout;\n  }\n\n  // add headers\n  Object.keys(options.headers).forEach(key => {\n    const value = unescape(encodeURIComponent(options.headers[key]));\n    xhr.setRequestHeader(key, value);\n  });\n\n  // set type of response\n  if (options.responseType) {\n    xhr.responseType = options.responseType;\n  }\n\n  // set credentials\n  if (options.withCredentials) {\n    xhr.withCredentials = true;\n  }\n\n  // let's send our data\n  xhr.send(data);\n  return api;\n};\nconst createResponse = (type, code, body, headers) => ({\n  type,\n  code,\n  body,\n  headers\n});\nconst createTimeoutResponse = cb => xhr => {\n  cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n};\nconst hasQS = str => /\\?/.test(str);\nconst buildURL = (...parts) => {\n  let url = '';\n  parts.forEach(part => {\n    url += hasQS(url) && hasQS(part) ? part.replace(/\\?/, '&') : part;\n  });\n  return url;\n};\nconst createFetchFunction = (apiUrl = '', action) => {\n  // custom handler (should also handle file, load, error, progress and abort)\n  if (typeof action === 'function') {\n    return action;\n  }\n\n  // no action supplied\n  if (!action || !isString(action.url)) {\n    return null;\n  }\n\n  // set onload hanlder\n  const onload = action.onload || (res => res);\n  const onerror = action.onerror || (res => null);\n\n  // internal handler\n  return (url, load, error, progress, abort, headers) => {\n    // do local or remote request based on if the url is external\n    const request = sendRequest(url, buildURL(apiUrl, action.url), {\n      ...action,\n      responseType: 'blob'\n    });\n    request.onload = xhr => {\n      // get headers\n      const headers = xhr.getAllResponseHeaders();\n\n      // get filename\n      const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n      // create response\n      load(createResponse('load', xhr.status, action.method === 'HEAD' ? null : getFileFromBlob(onload(xhr.response), filename), headers));\n    };\n    request.onerror = xhr => {\n      error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n    request.onheaders = xhr => {\n      headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n  };\n};\nconst ChunkStatus = {\n  QUEUED: 0,\n  COMPLETE: 1,\n  PROCESSING: 2,\n  ERROR: 3,\n  WAITING: 4\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort, transfer, options) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\n\n// apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options\nconst processFileChunked = (apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options) => {\n  // all chunks\n  const chunks = [];\n  const {\n    chunkTransferId,\n    chunkServer,\n    chunkSize,\n    chunkRetryDelays\n  } = options;\n\n  // default state\n  const state = {\n    serverId: chunkTransferId,\n    aborted: false\n  };\n\n  // set onload handlers\n  const ondata = action.ondata || (fd => fd);\n  const onload = action.onload || ((xhr, method) => method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response);\n  const onerror = action.onerror || (res => null);\n\n  // create server hook\n  const requestTransferId = cb => {\n    const formData = new FormData();\n\n    // add metadata under same name\n    if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));\n    const headers = typeof action.headers === 'function' ? action.headers(file, metadata) : {\n      ...action.headers,\n      'Upload-Length': file.size\n    };\n    const requestParams = {\n      ...action,\n      headers\n    };\n\n    // send request object\n    const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n    request.onload = xhr => cb(onload(xhr, requestParams.method));\n    request.onerror = xhr => error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n    request.ontimeout = createTimeoutResponse(error);\n  };\n  const requestTransferOffset = cb => {\n    const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n    const headers = typeof action.headers === 'function' ? action.headers(state.serverId) : {\n      ...action.headers\n    };\n    const requestParams = {\n      headers,\n      method: 'HEAD'\n    };\n    const request = sendRequest(null, requestUrl, requestParams);\n    request.onload = xhr => cb(onload(xhr, requestParams.method));\n    request.onerror = xhr => error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n    request.ontimeout = createTimeoutResponse(error);\n  };\n\n  // create chunks\n  const lastChunkIndex = Math.floor(file.size / chunkSize);\n  for (let i = 0; i <= lastChunkIndex; i++) {\n    const offset = i * chunkSize;\n    const data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');\n    chunks[i] = {\n      index: i,\n      size: data.size,\n      offset,\n      data,\n      file,\n      progress: 0,\n      retries: [...chunkRetryDelays],\n      status: ChunkStatus.QUEUED,\n      error: null,\n      request: null,\n      timeout: null\n    };\n  }\n  const completeProcessingChunks = () => load(state.serverId);\n  const canProcessChunk = chunk => chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;\n  const processChunk = chunk => {\n    // processing is paused, wait here\n    if (state.aborted) return;\n\n    // get next chunk to process\n    chunk = chunk || chunks.find(canProcessChunk);\n\n    // no more chunks to process\n    if (!chunk) {\n      // all done?\n      if (chunks.every(chunk => chunk.status === ChunkStatus.COMPLETE)) {\n        completeProcessingChunks();\n      }\n\n      // no chunk to handle\n      return;\n    }\n\n    // now processing this chunk\n    chunk.status = ChunkStatus.PROCESSING;\n    chunk.progress = null;\n\n    // allow parsing of formdata\n    const ondata = chunkServer.ondata || (fd => fd);\n    const onerror = chunkServer.onerror || (res => null);\n    const onload = chunkServer.onload || (() => {});\n\n    // send request object\n    const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n    const headers = typeof chunkServer.headers === 'function' ? chunkServer.headers(chunk) : {\n      ...chunkServer.headers,\n      'Content-Type': 'application/offset+octet-stream',\n      'Upload-Offset': chunk.offset,\n      'Upload-Length': file.size,\n      'Upload-Name': file.name\n    };\n    const request = chunk.request = sendRequest(ondata(chunk.data), requestUrl, {\n      ...chunkServer,\n      headers\n    });\n    request.onload = xhr => {\n      // allow hooking into request result\n      onload(xhr, chunk.index, chunks.length);\n\n      // done!\n      chunk.status = ChunkStatus.COMPLETE;\n\n      // remove request reference\n      chunk.request = null;\n\n      // start processing more chunks\n      processChunks();\n    };\n    request.onprogress = (lengthComputable, loaded, total) => {\n      chunk.progress = lengthComputable ? loaded : null;\n      updateTotalProgress();\n    };\n    request.onerror = xhr => {\n      chunk.status = ChunkStatus.ERROR;\n      chunk.request = null;\n      chunk.error = onerror(xhr.response) || xhr.statusText;\n      if (!retryProcessChunk(chunk)) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      }\n    };\n    request.ontimeout = xhr => {\n      chunk.status = ChunkStatus.ERROR;\n      chunk.request = null;\n      if (!retryProcessChunk(chunk)) {\n        createTimeoutResponse(error)(xhr);\n      }\n    };\n    request.onabort = () => {\n      chunk.status = ChunkStatus.QUEUED;\n      chunk.request = null;\n      abort();\n    };\n  };\n  const retryProcessChunk = chunk => {\n    // no more retries left\n    if (chunk.retries.length === 0) return false;\n\n    // new retry\n    chunk.status = ChunkStatus.WAITING;\n    clearTimeout(chunk.timeout);\n    chunk.timeout = setTimeout(() => {\n      processChunk(chunk);\n    }, chunk.retries.shift());\n\n    // we're going to retry\n    return true;\n  };\n  const updateTotalProgress = () => {\n    // calculate total progress fraction\n    const totalBytesTransfered = chunks.reduce((p, chunk) => {\n      if (p === null || chunk.progress === null) return null;\n      return p + chunk.progress;\n    }, 0);\n\n    // can't compute progress\n    if (totalBytesTransfered === null) return progress(false, 0, 0);\n\n    // calculate progress values\n    const totalSize = chunks.reduce((total, chunk) => total + chunk.size, 0);\n\n    // can update progress indicator\n    progress(true, totalBytesTransfered, totalSize);\n  };\n\n  // process new chunks\n  const processChunks = () => {\n    const totalProcessing = chunks.filter(chunk => chunk.status === ChunkStatus.PROCESSING).length;\n    if (totalProcessing >= 1) return;\n    processChunk();\n  };\n  const abortChunks = () => {\n    chunks.forEach(chunk => {\n      clearTimeout(chunk.timeout);\n      if (chunk.request) {\n        chunk.request.abort();\n      }\n    });\n  };\n\n  // let's go!\n  if (!state.serverId) {\n    requestTransferId(serverId => {\n      // stop here if aborted, might have happened in between request and callback\n      if (state.aborted) return;\n\n      // pass back to item so we can use it if something goes wrong\n      transfer(serverId);\n\n      // store internally\n      state.serverId = serverId;\n      processChunks();\n    });\n  } else {\n    requestTransferOffset(offset => {\n      // stop here if aborted, might have happened in between request and callback\n      if (state.aborted) return;\n\n      // mark chunks with lower offset as complete\n      chunks.filter(chunk => chunk.offset < offset).forEach(chunk => {\n        chunk.status = ChunkStatus.COMPLETE;\n        chunk.progress = chunk.size;\n      });\n\n      // continue processing\n      processChunks();\n    });\n  }\n  return {\n    abort: () => {\n      state.aborted = true;\n      abortChunks();\n    }\n  };\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\nconst createFileProcessorFunction = (apiUrl, action, name, options) => (file, metadata, load, error, progress, abort, transfer) => {\n  // no file received\n  if (!file) return;\n\n  // if was passed a file, and we can chunk it, exit here\n  const canChunkUpload = options.chunkUploads;\n  const shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;\n  const willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);\n  if (file instanceof Blob && willChunkUpload) return processFileChunked(apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options);\n\n  // set handlers\n  const ondata = action.ondata || (fd => fd);\n  const onload = action.onload || (res => res);\n  const onerror = action.onerror || (res => null);\n  const headers = typeof action.headers === 'function' ? action.headers(file, metadata) || {} : {\n    ...action.headers\n  };\n  const requestParams = {\n    ...action,\n    headers\n  };\n\n  // create formdata object\n  var formData = new FormData();\n\n  // add metadata under same name\n  if (isObject(metadata)) {\n    formData.append(name, JSON.stringify(metadata));\n  }\n\n  // Turn into an array of objects so no matter what the input, we can handle it the same way\n  (file instanceof Blob ? [{\n    name: null,\n    file\n  }] : file).forEach(item => {\n    formData.append(name, item.file, item.name === null ? item.file.name : `${item.name}${item.file.name}`);\n  });\n\n  // send request object\n  const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n  request.onload = xhr => {\n    load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n  };\n  request.onerror = xhr => {\n    error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n  };\n  request.ontimeout = createTimeoutResponse(error);\n  request.onprogress = progress;\n  request.onabort = abort;\n\n  // should return request\n  return request;\n};\nconst createProcessorFunction = (apiUrl = '', action, name, options) => {\n  // custom handler (should also handle file, load, error, progress and abort)\n  if (typeof action === 'function') return (...params) => action(name, ...params, options);\n\n  // no action supplied\n  if (!action || !isString(action.url)) return null;\n\n  // internal handler\n  return createFileProcessorFunction(apiUrl, action, name, options);\n};\n\n/*\n function signature:\n (uniqueFileId, load, error) => { }\n */\nconst createRevertFunction = (apiUrl = '', action) => {\n  // is custom implementation\n  if (typeof action === 'function') {\n    return action;\n  }\n\n  // no action supplied, return stub function, interface will work, but file won't be removed\n  if (!action || !isString(action.url)) {\n    return (uniqueFileId, load) => load();\n  }\n\n  // set onload hanlder\n  const onload = action.onload || (res => res);\n  const onerror = action.onerror || (res => null);\n\n  // internal implementation\n  return (uniqueFileId, load, error) => {\n    const request = sendRequest(uniqueFileId, apiUrl + action.url, action // contains method, headers and withCredentials properties\n    );\n    request.onload = xhr => {\n      load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n    };\n    request.onerror = xhr => {\n      error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n    request.ontimeout = createTimeoutResponse(error);\n    return request;\n  };\n};\nconst getRandomNumber = (min = 0, max = 1) => min + Math.random() * (max - min);\nconst createPerceivedPerformanceUpdater = (cb, duration = 1000, offset = 0, tickMin = 25, tickMax = 250) => {\n  let timeout = null;\n  const start = Date.now();\n  const tick = () => {\n    let runtime = Date.now() - start;\n    let delay = getRandomNumber(tickMin, tickMax);\n    if (runtime + delay > duration) {\n      delay = runtime + delay - duration;\n    }\n    let progress = runtime / duration;\n    if (progress >= 1 || document.hidden) {\n      cb(1);\n      return;\n    }\n    cb(progress);\n    timeout = setTimeout(tick, delay);\n  };\n  if (duration > 0) tick();\n  return {\n    clear: () => {\n      clearTimeout(timeout);\n    }\n  };\n};\nconst createFileProcessor = (processFn, options) => {\n  const state = {\n    complete: false,\n    perceivedProgress: 0,\n    perceivedPerformanceUpdater: null,\n    progress: null,\n    timestamp: null,\n    perceivedDuration: 0,\n    duration: 0,\n    request: null,\n    response: null\n  };\n  const {\n    allowMinimumUploadDuration\n  } = options;\n  const process = (file, metadata) => {\n    const progressFn = () => {\n      // we've not yet started the real download, stop here\n      // the request might not go through, for instance, there might be some server trouble\n      // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n      if (state.duration === 0 || state.progress === null) return;\n\n      // as we're now processing, fire the progress event\n      api.fire('progress', api.getProgress());\n    };\n    const completeFn = () => {\n      state.complete = true;\n      api.fire('load-perceived', state.response.body);\n    };\n\n    // let's start processing\n    api.fire('start');\n\n    // set request start\n    state.timestamp = Date.now();\n\n    // create perceived performance progress indicator\n    state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(progress => {\n      state.perceivedProgress = progress;\n      state.perceivedDuration = Date.now() - state.timestamp;\n      progressFn();\n\n      // if fake progress is done, and a response has been received,\n      // and we've not yet called the complete method\n      if (state.response && state.perceivedProgress === 1 && !state.complete) {\n        // we done!\n        completeFn();\n      }\n    },\n    // random delay as in a list of files you start noticing\n    // files uploading at the exact same speed\n    allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0);\n\n    // remember request so we can abort it later\n    state.request = processFn(\n    // the file to process\n    file,\n    // the metadata to send along\n    metadata,\n    // callbacks (load, error, progress, abort, transfer)\n    // load expects the body to be a server id if\n    // you want to make use of revert\n    response => {\n      // we put the response in state so we can access\n      // it outside of this method\n      state.response = isObject(response) ? response : {\n        type: 'load',\n        code: 200,\n        body: `${response}`,\n        headers: {}\n      };\n\n      // update duration\n      state.duration = Date.now() - state.timestamp;\n\n      // force progress to 1 as we're now done\n      state.progress = 1;\n\n      // actual load is done let's share results\n      api.fire('load', state.response.body);\n\n      // we are really done\n      // if perceived progress is 1 ( wait for perceived progress to complete )\n      // or if server does not support progress ( null )\n      if (!allowMinimumUploadDuration || allowMinimumUploadDuration && state.perceivedProgress === 1) {\n        completeFn();\n      }\n    },\n    // error is expected to be an object with type, code, body\n    error => {\n      // cancel updater\n      state.perceivedPerformanceUpdater.clear();\n\n      // update others about this error\n      api.fire('error', isObject(error) ? error : {\n        type: 'error',\n        code: 0,\n        body: `${error}`\n      });\n    },\n    // actual processing progress\n    (computable, current, total) => {\n      // update actual duration\n      state.duration = Date.now() - state.timestamp;\n\n      // update actual progress\n      state.progress = computable ? current / total : null;\n      progressFn();\n    },\n    // abort does not expect a value\n    () => {\n      // stop updater\n      state.perceivedPerformanceUpdater.clear();\n\n      // fire the abort event so we can switch visuals\n      api.fire('abort', state.response ? state.response.body : null);\n    },\n    // register the id for this transfer\n    transferId => {\n      api.fire('transfer', transferId);\n    });\n  };\n  const abort = () => {\n    // no request running, can't abort\n    if (!state.request) return;\n\n    // stop updater\n    state.perceivedPerformanceUpdater.clear();\n\n    // abort actual request\n    if (state.request.abort) state.request.abort();\n\n    // if has response object, we've completed the request\n    state.complete = true;\n  };\n  const reset = () => {\n    abort();\n    state.complete = false;\n    state.perceivedProgress = 0;\n    state.progress = 0;\n    state.timestamp = null;\n    state.perceivedDuration = 0;\n    state.duration = 0;\n    state.request = null;\n    state.response = null;\n  };\n  const getProgress = allowMinimumUploadDuration ? () => state.progress ? Math.min(state.progress, state.perceivedProgress) : null : () => state.progress || null;\n  const getDuration = allowMinimumUploadDuration ? () => Math.min(state.duration, state.perceivedDuration) : () => state.duration;\n  const api = {\n    ...on(),\n    process,\n    // start processing file\n    abort,\n    // abort active process request\n    getProgress,\n    getDuration,\n    reset\n  };\n  return api;\n};\nconst getFilenameWithoutExtension = name => name.substring(0, name.lastIndexOf('.')) || name;\nconst createFileStub = source => {\n  let data = [source.name, source.size, source.type];\n\n  // is blob or base64, then we need to set the name\n  if (source instanceof Blob || isBase64DataURI(source)) {\n    data[0] = source.name || getDateString();\n  } else if (isBase64DataURI(source)) {\n    // if is base64 data uri we need to determine the average size and type\n    data[1] = source.length;\n    data[2] = getMimeTypeFromBase64DataURI(source);\n  } else if (isString(source)) {\n    // url\n    data[0] = getFilenameFromURL(source);\n    data[1] = 0;\n    data[2] = 'application/octet-stream';\n  }\n  return {\n    name: data[0],\n    size: data[1],\n    type: data[2]\n  };\n};\nconst isFile = value => !!(value instanceof File || value instanceof Blob && value.name);\nconst deepCloneObject = src => {\n  if (!isObject(src)) return src;\n  const target = isArray(src) ? [] : {};\n  for (const key in src) {\n    if (!src.hasOwnProperty(key)) continue;\n    const v = src[key];\n    target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n  }\n  return target;\n};\nconst createItem = (origin = null, serverFileReference = null, file = null) => {\n  // unique id for this item, is used to identify the item across views\n  const id = getUniqueId();\n\n  /**\n   * Internal item state\n   */\n  const state = {\n    // is archived\n    archived: false,\n    // if is frozen, no longer fires events\n    frozen: false,\n    // removed from view\n    released: false,\n    // original source\n    source: null,\n    // file model reference\n    file,\n    // id of file on server\n    serverFileReference,\n    // id of file transfer on server\n    transferId: null,\n    // is aborted\n    processingAborted: false,\n    // current item status\n    status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n    // active processes\n    activeLoader: null,\n    activeProcessor: null\n  };\n\n  // callback used when abort processing is called to link back to the resolve method\n  let abortProcessingRequestComplete = null;\n\n  /**\n   * Externally added item metadata\n   */\n  const metadata = {};\n\n  // item data\n  const setStatus = status => state.status = status;\n\n  // fire event unless the item has been archived\n  const fire = (event, ...params) => {\n    if (state.released || state.frozen) return;\n    api.fire(event, ...params);\n  };\n\n  // file data\n  const getFileExtension = () => getExtensionFromFilename(state.file.name);\n  const getFileType = () => state.file.type;\n  const getFileSize = () => state.file.size;\n  const getFile = () => state.file;\n\n  //\n  // logic to load a file\n  //\n  const load = (source, loader, onload) => {\n    // remember the original item source\n    state.source = source;\n\n    // source is known\n    api.fireSync('init');\n\n    // file stub is already there\n    if (state.file) {\n      api.fireSync('load-skip');\n      return;\n    }\n\n    // set a stub file object while loading the actual data\n    state.file = createFileStub(source);\n\n    // starts loading\n    loader.on('init', () => {\n      fire('load-init');\n    });\n\n    // we'eve received a size indication, let's update the stub\n    loader.on('meta', meta => {\n      // set size of file stub\n      state.file.size = meta.size;\n\n      // set name of file stub\n      state.file.filename = meta.filename;\n\n      // if has received source, we done\n      if (meta.source) {\n        origin = FileOrigin.LIMBO;\n        state.serverFileReference = meta.source;\n        state.status = ItemStatus.PROCESSING_COMPLETE;\n      }\n\n      // size has been updated\n      fire('load-meta');\n    });\n\n    // the file is now loading we need to update the progress indicators\n    loader.on('progress', progress => {\n      setStatus(ItemStatus.LOADING);\n      fire('load-progress', progress);\n    });\n\n    // an error was thrown while loading the file, we need to switch to error state\n    loader.on('error', error => {\n      setStatus(ItemStatus.LOAD_ERROR);\n      fire('load-request-error', error);\n    });\n\n    // user or another process aborted the file load (cannot retry)\n    loader.on('abort', () => {\n      setStatus(ItemStatus.INIT);\n      fire('load-abort');\n    });\n\n    // done loading\n    loader.on('load', file => {\n      // as we've now loaded the file the loader is no longer required\n      state.activeLoader = null;\n\n      // called when file has loaded succesfully\n      const success = result => {\n        // set (possibly) transformed file\n        state.file = isFile(result) ? result : state.file;\n\n        // file received\n        if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n          setStatus(ItemStatus.PROCESSING_COMPLETE);\n        } else {\n          setStatus(ItemStatus.IDLE);\n        }\n        fire('load');\n      };\n      const error = result => {\n        // set original file\n        state.file = file;\n        fire('load-meta');\n        setStatus(ItemStatus.LOAD_ERROR);\n        fire('load-file-error', result);\n      };\n\n      // if we already have a server file reference, we don't need to call the onload method\n      if (state.serverFileReference) {\n        success(file);\n        return;\n      }\n\n      // no server id, let's give this file the full treatment\n      onload(file, success, error);\n    });\n\n    // set loader source data\n    loader.setSource(source);\n\n    // set as active loader\n    state.activeLoader = loader;\n\n    // load the source data\n    loader.load();\n  };\n  const retryLoad = () => {\n    if (!state.activeLoader) {\n      return;\n    }\n    state.activeLoader.load();\n  };\n  const abortLoad = () => {\n    if (state.activeLoader) {\n      state.activeLoader.abort();\n      return;\n    }\n    setStatus(ItemStatus.INIT);\n    fire('load-abort');\n  };\n\n  //\n  // logic to process a file\n  //\n  const process = (processor, onprocess) => {\n    // processing was aborted\n    if (state.processingAborted) {\n      state.processingAborted = false;\n      return;\n    }\n\n    // now processing\n    setStatus(ItemStatus.PROCESSING);\n\n    // reset abort callback\n    abortProcessingRequestComplete = null;\n\n    // if no file loaded we'll wait for the load event\n    if (!(state.file instanceof Blob)) {\n      api.on('load', () => {\n        process(processor, onprocess);\n      });\n      return;\n    }\n\n    // setup processor\n    processor.on('load', serverFileReference => {\n      // need this id to be able to revert the upload\n      state.transferId = null;\n      state.serverFileReference = serverFileReference;\n    });\n\n    // register transfer id\n    processor.on('transfer', transferId => {\n      // need this id to be able to revert the upload\n      state.transferId = transferId;\n    });\n    processor.on('load-perceived', serverFileReference => {\n      // no longer required\n      state.activeProcessor = null;\n\n      // need this id to be able to rever the upload\n      state.transferId = null;\n      state.serverFileReference = serverFileReference;\n      setStatus(ItemStatus.PROCESSING_COMPLETE);\n      fire('process-complete', serverFileReference);\n    });\n    processor.on('start', () => {\n      fire('process-start');\n    });\n    processor.on('error', error => {\n      state.activeProcessor = null;\n      setStatus(ItemStatus.PROCESSING_ERROR);\n      fire('process-error', error);\n    });\n    processor.on('abort', serverFileReference => {\n      state.activeProcessor = null;\n\n      // if file was uploaded but processing was cancelled during perceived processor time store file reference\n      state.serverFileReference = serverFileReference;\n      setStatus(ItemStatus.IDLE);\n      fire('process-abort');\n\n      // has timeout so doesn't interfere with remove action\n      if (abortProcessingRequestComplete) {\n        abortProcessingRequestComplete();\n      }\n    });\n    processor.on('progress', progress => {\n      fire('process-progress', progress);\n    });\n\n    // when successfully transformed\n    const success = file => {\n      // if was archived in the mean time, don't process\n      if (state.archived) return;\n\n      // process file!\n      processor.process(file, {\n        ...metadata\n      });\n    };\n\n    // something went wrong during transform phase\n    const error = console.error;\n\n    // start processing the file\n    onprocess(state.file, success, error);\n\n    // set as active processor\n    state.activeProcessor = processor;\n  };\n  const requestProcessing = () => {\n    state.processingAborted = false;\n    setStatus(ItemStatus.PROCESSING_QUEUED);\n  };\n  const abortProcessing = () => new Promise(resolve => {\n    if (!state.activeProcessor) {\n      state.processingAborted = true;\n      setStatus(ItemStatus.IDLE);\n      fire('process-abort');\n      resolve();\n      return;\n    }\n    abortProcessingRequestComplete = () => {\n      resolve();\n    };\n    state.activeProcessor.abort();\n  });\n\n  //\n  // logic to revert a processed file\n  //\n  const revert = (revertFileUpload, forceRevert) => new Promise((resolve, reject) => {\n    // a completed upload will have a serverFileReference, a failed chunked upload where\n    // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set\n    const serverTransferId = state.serverFileReference !== null ? state.serverFileReference : state.transferId;\n\n    // cannot revert without a server id for this process\n    if (serverTransferId === null) {\n      resolve();\n      return;\n    }\n\n    // revert the upload (fire and forget)\n    revertFileUpload(serverTransferId, () => {\n      // reset file server id and transfer id as now it's not available on the server\n      state.serverFileReference = null;\n      state.transferId = null;\n      resolve();\n    }, error => {\n      // don't set error state when reverting is optional, it will always resolve\n      if (!forceRevert) {\n        resolve();\n        return;\n      }\n\n      // oh no errors\n      setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n      fire('process-revert-error');\n      reject(error);\n    });\n\n    // fire event\n    setStatus(ItemStatus.IDLE);\n    fire('process-revert');\n  });\n\n  // exposed methods\n  const setMetadata = (key, value, silent) => {\n    const keys = key.split('.');\n    const root = keys[0];\n    const last = keys.pop();\n    let data = metadata;\n    keys.forEach(key => data = data[key]);\n\n    // compare old value against new value, if they're the same, we're not updating\n    if (JSON.stringify(data[last]) === JSON.stringify(value)) return;\n\n    // update value\n    data[last] = value;\n\n    // fire update\n    fire('metadata-update', {\n      key: root,\n      value: metadata[root],\n      silent\n    });\n  };\n  const getMetadata = key => deepCloneObject(key ? metadata[key] : metadata);\n  const api = {\n    id: {\n      get: () => id\n    },\n    origin: {\n      get: () => origin,\n      set: value => origin = value\n    },\n    serverId: {\n      get: () => state.serverFileReference\n    },\n    transferId: {\n      get: () => state.transferId\n    },\n    status: {\n      get: () => state.status\n    },\n    filename: {\n      get: () => state.file.name\n    },\n    filenameWithoutExtension: {\n      get: () => getFilenameWithoutExtension(state.file.name)\n    },\n    fileExtension: {\n      get: getFileExtension\n    },\n    fileType: {\n      get: getFileType\n    },\n    fileSize: {\n      get: getFileSize\n    },\n    file: {\n      get: getFile\n    },\n    relativePath: {\n      get: () => state.file._relativePath\n    },\n    source: {\n      get: () => state.source\n    },\n    getMetadata,\n    setMetadata: (key, value, silent) => {\n      if (isObject(key)) {\n        const data = key;\n        Object.keys(data).forEach(key => {\n          setMetadata(key, data[key], value);\n        });\n        return key;\n      }\n      setMetadata(key, value, silent);\n      return value;\n    },\n    extend: (name, handler) => itemAPI[name] = handler,\n    abortLoad,\n    retryLoad,\n    requestProcessing,\n    abortProcessing,\n    load,\n    process,\n    revert,\n    ...on(),\n    freeze: () => state.frozen = true,\n    release: () => state.released = true,\n    released: {\n      get: () => state.released\n    },\n    archive: () => state.archived = true,\n    archived: {\n      get: () => state.archived\n    },\n    // replace source and file object\n    setFile: file => state.file = file\n  };\n\n  // create it here instead of returning it instantly so we can extend it later\n  const itemAPI = createObject(api);\n  return itemAPI;\n};\nconst getItemIndexByQuery = (items, query) => {\n  // just return first index\n  if (isEmpty(query)) {\n    return 0;\n  }\n\n  // invalid queries\n  if (!isString(query)) {\n    return -1;\n  }\n\n  // return item by id (or -1 if not found)\n  return items.findIndex(item => item.id === query);\n};\nconst getItemById = (items, itemId) => {\n  const index = getItemIndexByQuery(items, itemId);\n  if (index < 0) {\n    return;\n  }\n  return items[index] || null;\n};\nconst fetchBlob = (url, load, error, progress, abort, headers) => {\n  const request = sendRequest(null, url, {\n    method: 'GET',\n    responseType: 'blob'\n  });\n  request.onload = xhr => {\n    // get headers\n    const headers = xhr.getAllResponseHeaders();\n\n    // get filename\n    const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n    // create response\n    load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n  };\n  request.onerror = xhr => {\n    error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n  };\n  request.onheaders = xhr => {\n    headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n  };\n  request.ontimeout = createTimeoutResponse(error);\n  request.onprogress = progress;\n  request.onabort = abort;\n\n  // should return request\n  return request;\n};\nconst getDomainFromURL = url => {\n  if (url.indexOf('//') === 0) {\n    url = location.protocol + url;\n  }\n  return url.toLowerCase().replace('blob:', '').replace(/([a-z])?:\\/\\//, '$1').split('/')[0];\n};\nconst isExternalURL = url => (url.indexOf(':') > -1 || url.indexOf('//') > -1) && getDomainFromURL(location.href) !== getDomainFromURL(url);\nconst dynamicLabel = label => (...params) => isFunction(label) ? label(...params) : label;\nconst isMockItem = item => !isFile(item.file);\nconst listUpdated = (dispatch, state) => {\n  clearTimeout(state.listUpdateTimeout);\n  state.listUpdateTimeout = setTimeout(() => {\n    dispatch('DID_UPDATE_ITEMS', {\n      items: getActiveItems(state.items)\n    });\n  }, 0);\n};\nconst optionalPromise = (fn, ...params) => new Promise(resolve => {\n  if (!fn) {\n    return resolve(true);\n  }\n  const result = fn(...params);\n  if (result == null) {\n    return resolve(true);\n  }\n  if (typeof result === 'boolean') {\n    return resolve(result);\n  }\n  if (typeof result.then === 'function') {\n    result.then(resolve);\n  }\n});\nconst sortItems = (state, compare) => {\n  state.items.sort((a, b) => compare(createItemAPI(a), createItemAPI(b)));\n};\n\n// returns item based on state\nconst getItemByQueryFromState = (state, itemHandler) => ({\n  query,\n  success = () => {},\n  failure = () => {},\n  ...options\n} = {}) => {\n  const item = getItemByQuery(state.items, query);\n  if (!item) {\n    failure({\n      error: createResponse('error', 0, 'Item not found'),\n      file: null\n    });\n    return;\n  }\n  itemHandler(item, success, failure, options || {});\n};\nconst actions = (dispatch, query, state) => ({\n  /**\n   * Aborts all ongoing processes\n   */\n  ABORT_ALL: () => {\n    getActiveItems(state.items).forEach(item => {\n      item.freeze();\n      item.abortLoad();\n      item.abortProcessing();\n    });\n  },\n  /**\n   * Sets initial files\n   */\n  DID_SET_FILES: ({\n    value = []\n  }) => {\n    // map values to file objects\n    const files = value.map(file => ({\n      source: file.source ? file.source : file,\n      options: file.options\n    }));\n\n    // loop over files, if file is in list, leave it be, if not, remove\n    // test if items should be moved\n    let activeItems = getActiveItems(state.items);\n    activeItems.forEach(item => {\n      // if item not is in new value, remove\n      if (!files.find(file => file.source === item.source || file.source === item.file)) {\n        dispatch('REMOVE_ITEM', {\n          query: item,\n          remove: false\n        });\n      }\n    });\n\n    // add new files\n    activeItems = getActiveItems(state.items);\n    files.forEach((file, index) => {\n      // if file is already in list\n      if (activeItems.find(item => item.source === file.source || item.file === file.source)) return;\n\n      // not in list, add\n      dispatch('ADD_ITEM', {\n        ...file,\n        interactionMethod: InteractionMethod.NONE,\n        index\n      });\n    });\n  },\n  DID_UPDATE_ITEM_METADATA: ({\n    id,\n    action,\n    change\n  }) => {\n    // don't do anything\n    if (change.silent) return;\n\n    // if is called multiple times in close succession we combined all calls together to save resources\n    clearTimeout(state.itemUpdateTimeout);\n    state.itemUpdateTimeout = setTimeout(() => {\n      const item = getItemById(state.items, id);\n\n      // only revert and attempt to upload when we're uploading to a server\n      if (!query('IS_ASYNC')) {\n        // should we update the output data\n        applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n          item,\n          query,\n          action,\n          change\n        }).then(shouldPrepareOutput => {\n          // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n          const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n          if (beforePrepareFile) shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n          if (!shouldPrepareOutput) return;\n          dispatch('REQUEST_PREPARE_OUTPUT', {\n            query: id,\n            item,\n            success: file => {\n              dispatch('DID_PREPARE_OUTPUT', {\n                id,\n                file\n              });\n            }\n          }, true);\n        });\n        return;\n      }\n\n      // if is local item we need to enable upload button so change can be propagated to server\n      if (item.origin === FileOrigin.LOCAL) {\n        dispatch('DID_LOAD_ITEM', {\n          id: item.id,\n          error: null,\n          serverFileReference: item.source\n        });\n      }\n\n      // for async scenarios\n      const upload = () => {\n        // we push this forward a bit so the interface is updated correctly\n        setTimeout(() => {\n          dispatch('REQUEST_ITEM_PROCESSING', {\n            query: id\n          });\n        }, 32);\n      };\n      const revert = doUpload => {\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(doUpload ? upload : () => {}).catch(() => {});\n      };\n      const abort = doUpload => {\n        item.abortProcessing().then(doUpload ? upload : () => {});\n      };\n\n      // if we should re-upload the file immediately\n      if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n        return revert(state.options.instantUpload);\n      }\n\n      // if currently uploading, cancel upload\n      if (item.status === ItemStatus.PROCESSING) {\n        return abort(state.options.instantUpload);\n      }\n      if (state.options.instantUpload) {\n        upload();\n      }\n    }, 0);\n  },\n  MOVE_ITEM: ({\n    query,\n    index\n  }) => {\n    const item = getItemByQuery(state.items, query);\n    if (!item) return;\n    const currentIndex = state.items.indexOf(item);\n    index = limit(index, 0, state.items.length - 1);\n    if (currentIndex === index) return;\n    state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);\n  },\n  SORT: ({\n    compare\n  }) => {\n    sortItems(state, compare);\n    dispatch('DID_SORT_ITEMS', {\n      items: query('GET_ACTIVE_ITEMS')\n    });\n  },\n  ADD_ITEMS: ({\n    items,\n    index,\n    interactionMethod,\n    success = () => {},\n    failure = () => {}\n  }) => {\n    let currentIndex = index;\n    if (index === -1 || typeof index === 'undefined') {\n      const insertLocation = query('GET_ITEM_INSERT_LOCATION');\n      const totalItems = query('GET_TOTAL_ITEMS');\n      currentIndex = insertLocation === 'before' ? 0 : totalItems;\n    }\n    const ignoredFiles = query('GET_IGNORED_FILES');\n    const isValidFile = source => isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n    const validItems = items.filter(isValidFile);\n    const promises = validItems.map(source => new Promise((resolve, reject) => {\n      dispatch('ADD_ITEM', {\n        interactionMethod,\n        source: source.source || source,\n        success: resolve,\n        failure: reject,\n        index: currentIndex++,\n        options: source.options || {}\n      });\n    }));\n    Promise.all(promises).then(success).catch(failure);\n  },\n  /**\n   * @param source\n   * @param index\n   * @param interactionMethod\n   */\n  ADD_ITEM: ({\n    source,\n    index = -1,\n    interactionMethod,\n    success = () => {},\n    failure = () => {},\n    options = {}\n  }) => {\n    // if no source supplied\n    if (isEmpty(source)) {\n      failure({\n        error: createResponse('error', 0, 'No source'),\n        file: null\n      });\n      return;\n    }\n\n    // filter out invalid file items, used to filter dropped directory contents\n    if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n      // fail silently\n      return;\n    }\n\n    // test if there's still room in the list of files\n    if (!hasRoomForItem(state)) {\n      // if multiple allowed, we can't replace\n      // or if only a single item is allowed but we're not allowed to replace it we exit\n      if (state.options.allowMultiple || !state.options.allowMultiple && !state.options.allowReplace) {\n        const error = createResponse('warning', 0, 'Max files');\n        dispatch('DID_THROW_MAX_FILES', {\n          source,\n          error\n        });\n        failure({\n          error,\n          file: null\n        });\n        return;\n      }\n\n      // let's replace the item\n      // id of first item we're about to remove\n      const item = getActiveItems(state.items)[0];\n\n      // if has been processed remove it from the server as well\n      if (item.status === ItemStatus.PROCESSING_COMPLETE || item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n        const forceRevert = query('GET_FORCE_REVERT');\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), forceRevert).then(() => {\n          if (!forceRevert) return;\n\n          // try to add now\n          dispatch('ADD_ITEM', {\n            source,\n            index,\n            interactionMethod,\n            success,\n            failure,\n            options\n          });\n        }).catch(() => {}); // no need to handle this catch state for now\n\n        if (forceRevert) return;\n      }\n\n      // remove first item as it will be replaced by this item\n      dispatch('REMOVE_ITEM', {\n        query: item.id\n      });\n    }\n\n    // where did the file originate\n    const origin = options.type === 'local' ? FileOrigin.LOCAL : options.type === 'limbo' ? FileOrigin.LIMBO : FileOrigin.INPUT;\n\n    // create a new blank item\n    const item = createItem(\n    // where did this file come from\n    origin,\n    // an input file never has a server file reference\n    origin === FileOrigin.INPUT ? null : source,\n    // file mock data, if defined\n    options.file);\n\n    // set initial meta data\n    Object.keys(options.metadata || {}).forEach(key => {\n      item.setMetadata(key, options.metadata[key]);\n    });\n\n    // created the item, let plugins add methods\n    applyFilters('DID_CREATE_ITEM', item, {\n      query,\n      dispatch\n    });\n\n    // where to insert new items\n    const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n    // adjust index if is not allowed to pick location\n    if (!state.options.itemInsertLocationFreedom) {\n      index = itemInsertLocation === 'before' ? -1 : state.items.length;\n    }\n\n    // add item to list\n    insertItem(state.items, item, index);\n\n    // sort items in list\n    if (isFunction(itemInsertLocation) && source) {\n      sortItems(state, itemInsertLocation);\n    }\n\n    // get a quick reference to the item id\n    const id = item.id;\n\n    // observe item events\n    item.on('init', () => {\n      dispatch('DID_INIT_ITEM', {\n        id\n      });\n    });\n    item.on('load-init', () => {\n      dispatch('DID_START_ITEM_LOAD', {\n        id\n      });\n    });\n    item.on('load-meta', () => {\n      dispatch('DID_UPDATE_ITEM_META', {\n        id\n      });\n    });\n    item.on('load-progress', progress => {\n      dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', {\n        id,\n        progress\n      });\n    });\n    item.on('load-request-error', error => {\n      const mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);\n\n      // is client error, no way to recover\n      if (error.code >= 400 && error.code < 500) {\n        dispatch('DID_THROW_ITEM_INVALID', {\n          id,\n          error,\n          status: {\n            main: mainStatus,\n            sub: `${error.code} (${error.body})`\n          }\n        });\n\n        // reject the file so can be dealt with through API\n        failure({\n          error,\n          file: createItemAPI(item)\n        });\n        return;\n      }\n\n      // is possible server error, so might be possible to retry\n      dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n        id,\n        error,\n        status: {\n          main: mainStatus,\n          sub: state.options.labelTapToRetry\n        }\n      });\n    });\n    item.on('load-file-error', error => {\n      dispatch('DID_THROW_ITEM_INVALID', {\n        id,\n        error: error.status,\n        status: error.status\n      });\n      failure({\n        error: error.status,\n        file: createItemAPI(item)\n      });\n    });\n    item.on('load-abort', () => {\n      dispatch('REMOVE_ITEM', {\n        query: id\n      });\n    });\n    item.on('load-skip', () => {\n      item.on('metadata-update', change => {\n        if (!isFile(item.file)) return;\n        dispatch('DID_UPDATE_ITEM_METADATA', {\n          id,\n          change\n        });\n      });\n      dispatch('COMPLETE_LOAD_ITEM', {\n        query: id,\n        item,\n        data: {\n          source,\n          success\n        }\n      });\n    });\n    item.on('load', () => {\n      const handleAdd = shouldAdd => {\n        // no should not add this file\n        if (!shouldAdd) {\n          dispatch('REMOVE_ITEM', {\n            query: id\n          });\n          return;\n        }\n\n        // now interested in metadata updates\n        item.on('metadata-update', change => {\n          dispatch('DID_UPDATE_ITEM_METADATA', {\n            id,\n            change\n          });\n        });\n\n        // let plugins decide if the output data should be prepared at this point\n        // means we'll do this and wait for idle state\n        applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n          item,\n          query\n        }).then(shouldPrepareOutput => {\n          // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n          const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n          if (beforePrepareFile) shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n          const loadComplete = () => {\n            dispatch('COMPLETE_LOAD_ITEM', {\n              query: id,\n              item,\n              data: {\n                source,\n                success\n              }\n            });\n            listUpdated(dispatch, state);\n          };\n\n          // exit\n          if (shouldPrepareOutput) {\n            // wait for idle state and then run PREPARE_OUTPUT\n            dispatch('REQUEST_PREPARE_OUTPUT', {\n              query: id,\n              item,\n              success: file => {\n                dispatch('DID_PREPARE_OUTPUT', {\n                  id,\n                  file\n                });\n                loadComplete();\n              }\n            }, true);\n            return;\n          }\n          loadComplete();\n        });\n      };\n\n      // item loaded, allow plugins to\n      // - read data (quickly)\n      // - add metadata\n      applyFilterChain('DID_LOAD_ITEM', item, {\n        query,\n        dispatch\n      }).then(() => {\n        optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(handleAdd);\n      }).catch(e => {\n        if (!e || !e.error || !e.status) return handleAdd(false);\n        dispatch('DID_THROW_ITEM_INVALID', {\n          id,\n          error: e.error,\n          status: e.status\n        });\n      });\n    });\n    item.on('process-start', () => {\n      dispatch('DID_START_ITEM_PROCESSING', {\n        id\n      });\n    });\n    item.on('process-progress', progress => {\n      dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', {\n        id,\n        progress\n      });\n    });\n    item.on('process-error', error => {\n      dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n        id,\n        error,\n        status: {\n          main: dynamicLabel(state.options.labelFileProcessingError)(error),\n          sub: state.options.labelTapToRetry\n        }\n      });\n    });\n    item.on('process-revert-error', error => {\n      dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n        id,\n        error,\n        status: {\n          main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n          sub: state.options.labelTapToRetry\n        }\n      });\n    });\n    item.on('process-complete', serverFileReference => {\n      dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n        id,\n        error: null,\n        serverFileReference\n      });\n      dispatch('DID_DEFINE_VALUE', {\n        id,\n        value: serverFileReference\n      });\n    });\n    item.on('process-abort', () => {\n      dispatch('DID_ABORT_ITEM_PROCESSING', {\n        id\n      });\n    });\n    item.on('process-revert', () => {\n      dispatch('DID_REVERT_ITEM_PROCESSING', {\n        id\n      });\n      dispatch('DID_DEFINE_VALUE', {\n        id,\n        value: null\n      });\n    });\n\n    // let view know the item has been inserted\n    dispatch('DID_ADD_ITEM', {\n      id,\n      index,\n      interactionMethod\n    });\n    listUpdated(dispatch, state);\n\n    // start loading the source\n    const {\n      url,\n      load,\n      restore,\n      fetch\n    } = state.options.server || {};\n    item.load(source,\n    // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n    createFileLoader(origin === FileOrigin.INPUT ?\n    // input, if is remote, see if should use custom fetch, else use default fetchBlob\n    isString(source) && isExternalURL(source) ? fetch ? createFetchFunction(url, fetch) : fetchBlob // remote url\n    : fetchBlob // try to fetch url\n    :\n    // limbo or local\n    origin === FileOrigin.LIMBO ? createFetchFunction(url, restore) // limbo\n    : createFetchFunction(url, load) // local\n    ),\n    // called when the file is loaded so it can be piped through the filters\n    (file, success, error) => {\n      // let's process the file\n      applyFilterChain('LOAD_FILE', file, {\n        query\n      }).then(success).catch(error);\n    });\n  },\n  REQUEST_PREPARE_OUTPUT: ({\n    item,\n    success,\n    failure = () => {}\n  }) => {\n    // error response if item archived\n    const err = {\n      error: createResponse('error', 0, 'Item not found'),\n      file: null\n    };\n\n    // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n    if (item.archived) return failure(err);\n\n    // allow plugins to alter the file data\n    applyFilterChain('PREPARE_OUTPUT', item.file, {\n      query,\n      item\n    }).then(result => {\n      applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, {\n        query,\n        item\n      }).then(result => {\n        // don't handle archived items, an item could have been archived (load aborted) while being prepared\n        if (item.archived) return failure(err);\n\n        // we done!\n        success(result);\n      });\n    });\n  },\n  COMPLETE_LOAD_ITEM: ({\n    item,\n    data\n  }) => {\n    const {\n      success,\n      source\n    } = data;\n\n    // sort items in list\n    const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n    if (isFunction(itemInsertLocation) && source) {\n      sortItems(state, itemInsertLocation);\n    }\n\n    // let interface know the item has loaded\n    dispatch('DID_LOAD_ITEM', {\n      id: item.id,\n      error: null,\n      serverFileReference: item.origin === FileOrigin.INPUT ? null : source\n    });\n\n    // item has been successfully loaded and added to the\n    // list of items so can now be safely returned for use\n    success(createItemAPI(item));\n\n    // if this is a local server file we need to show a different state\n    if (item.origin === FileOrigin.LOCAL) {\n      dispatch('DID_LOAD_LOCAL_ITEM', {\n        id: item.id\n      });\n      return;\n    }\n\n    // if is a temp server file we prevent async upload call here (as the file is already on the server)\n    if (item.origin === FileOrigin.LIMBO) {\n      dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n        id: item.id,\n        error: null,\n        serverFileReference: source\n      });\n      dispatch('DID_DEFINE_VALUE', {\n        id: item.id,\n        value: item.serverId || source\n      });\n      return;\n    }\n\n    // id we are allowed to upload the file immediately, lets do it\n    if (query('IS_ASYNC') && state.options.instantUpload) {\n      dispatch('REQUEST_ITEM_PROCESSING', {\n        query: item.id\n      });\n    }\n  },\n  RETRY_ITEM_LOAD: getItemByQueryFromState(state, item => {\n    // try loading the source one more time\n    item.retryLoad();\n  }),\n  REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, (item, success, failure) => {\n    dispatch('REQUEST_PREPARE_OUTPUT', {\n      query: item.id,\n      item,\n      success: file => {\n        dispatch('DID_PREPARE_OUTPUT', {\n          id: item.id,\n          file\n        });\n        success({\n          file: item,\n          output: file\n        });\n      },\n      failure\n    }, true);\n  }),\n  REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, (item, success, failure) => {\n    // cannot be queued (or is already queued)\n    const itemCanBeQueuedForProcessing =\n    // waiting for something\n    item.status === ItemStatus.IDLE ||\n    // processing went wrong earlier\n    item.status === ItemStatus.PROCESSING_ERROR;\n\n    // not ready to be processed\n    if (!itemCanBeQueuedForProcessing) {\n      const processNow = () => dispatch('REQUEST_ITEM_PROCESSING', {\n        query: item,\n        success,\n        failure\n      });\n      const process = () => document.hidden ? processNow() : setTimeout(processNow, 32);\n\n      // if already done processing or tried to revert but didn't work, try again\n      if (item.status === ItemStatus.PROCESSING_COMPLETE || item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(process).catch(() => {}); // don't continue with processing if something went wrong\n      } else if (item.status === ItemStatus.PROCESSING) {\n        item.abortProcessing().then(process);\n      }\n      return;\n    }\n\n    // already queued for processing\n    if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n    item.requestProcessing();\n    dispatch('DID_REQUEST_ITEM_PROCESSING', {\n      id: item.id\n    });\n    dispatch('PROCESS_ITEM', {\n      query: item,\n      success,\n      failure\n    }, true);\n  }),\n  PROCESS_ITEM: getItemByQueryFromState(state, (item, success, failure) => {\n    const maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n    const totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length;\n\n    // queue and wait till queue is freed up\n    if (totalCurrentUploads === maxParallelUploads) {\n      // queue for later processing\n      state.processingQueue.push({\n        id: item.id,\n        success,\n        failure\n      });\n\n      // stop it!\n      return;\n    }\n\n    // if was not queued or is already processing exit here\n    if (item.status === ItemStatus.PROCESSING) return;\n    const processNext = () => {\n      // process queueud items\n      const queueEntry = state.processingQueue.shift();\n\n      // no items left\n      if (!queueEntry) return;\n\n      // get item reference\n      const {\n        id,\n        success,\n        failure\n      } = queueEntry;\n      const itemReference = getItemByQuery(state.items, id);\n\n      // if item was archived while in queue, jump to next\n      if (!itemReference || itemReference.archived) {\n        processNext();\n        return;\n      }\n\n      // process queued item\n      dispatch('PROCESS_ITEM', {\n        query: id,\n        success,\n        failure\n      }, true);\n    };\n\n    // we done function\n    item.onOnce('process-complete', () => {\n      success(createItemAPI(item));\n      processNext();\n\n      // if origin is local, and we're instant uploading, trigger remove of original\n      // as revert will remove file from list\n      const server = state.options.server;\n      const instantUpload = state.options.instantUpload;\n      if (instantUpload && item.origin === FileOrigin.LOCAL && isFunction(server.remove)) {\n        const noop = () => {};\n        item.origin = FileOrigin.LIMBO;\n        state.options.server.remove(item.source, noop, noop);\n      }\n\n      // All items processed? No errors?\n      const allItemsProcessed = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length === state.items.length;\n      if (allItemsProcessed) {\n        dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n      }\n    });\n\n    // we error function\n    item.onOnce('process-error', error => {\n      failure({\n        error,\n        file: createItemAPI(item)\n      });\n      processNext();\n    });\n\n    // start file processing\n    const options = state.options;\n    item.process(createFileProcessor(createProcessorFunction(options.server.url, options.server.process, options.name, {\n      chunkTransferId: item.transferId,\n      chunkServer: options.server.patch,\n      chunkUploads: options.chunkUploads,\n      chunkForce: options.chunkForce,\n      chunkSize: options.chunkSize,\n      chunkRetryDelays: options.chunkRetryDelays\n    }), {\n      allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION')\n    }),\n    // called when the file is about to be processed so it can be piped through the transform filters\n    (file, success, error) => {\n      // allow plugins to alter the file data\n      applyFilterChain('PREPARE_OUTPUT', file, {\n        query,\n        item\n      }).then(file => {\n        dispatch('DID_PREPARE_OUTPUT', {\n          id: item.id,\n          file\n        });\n        success(file);\n      }).catch(error);\n    });\n  }),\n  RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n    dispatch('REQUEST_ITEM_PROCESSING', {\n      query: item\n    });\n  }),\n  REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, item => {\n    optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(shouldRemove => {\n      if (!shouldRemove) {\n        return;\n      }\n      dispatch('REMOVE_ITEM', {\n        query: item\n      });\n    });\n  }),\n  RELEASE_ITEM: getItemByQueryFromState(state, item => {\n    item.release();\n  }),\n  REMOVE_ITEM: getItemByQueryFromState(state, (item, success, failure, options) => {\n    const removeFromView = () => {\n      // get id reference\n      const id = item.id;\n\n      // archive the item, this does not remove it from the list\n      getItemById(state.items, id).archive();\n\n      // tell the view the item has been removed\n      dispatch('DID_REMOVE_ITEM', {\n        error: null,\n        id,\n        item\n      });\n\n      // now the list has been modified\n      listUpdated(dispatch, state);\n\n      // correctly removed\n      success(createItemAPI(item));\n    };\n\n    // if this is a local file and the `server.remove` function has been configured,\n    // send source there so dev can remove file from server\n    const server = state.options.server;\n    if (item.origin === FileOrigin.LOCAL && server && isFunction(server.remove) && options.remove !== false) {\n      dispatch('DID_START_ITEM_REMOVE', {\n        id: item.id\n      });\n      server.remove(item.source, () => removeFromView(), status => {\n        dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n          id: item.id,\n          error: createResponse('error', 0, status, null),\n          status: {\n            main: dynamicLabel(state.options.labelFileRemoveError)(status),\n            sub: state.options.labelTapToRetry\n          }\n        });\n      });\n    } else {\n      // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)\n      if (options.revert && item.origin !== FileOrigin.LOCAL && item.serverId !== null ||\n      // if chunked uploads are enabled and we're uploading in chunks for this specific file\n      // or if the file isn't big enough for chunked uploads but chunkForce is set then call\n      // revert before removing from the view...\n      state.options.chunkUploads && item.file.size > state.options.chunkSize || state.options.chunkUploads && state.options.chunkForce) {\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT'));\n      }\n\n      // can now safely remove from view\n      removeFromView();\n    }\n  }),\n  ABORT_ITEM_LOAD: getItemByQueryFromState(state, item => {\n    item.abortLoad();\n  }),\n  ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n    // test if is already processed\n    if (item.serverId) {\n      dispatch('REVERT_ITEM_PROCESSING', {\n        id: item.id\n      });\n      return;\n    }\n\n    // abort\n    item.abortProcessing().then(() => {\n      const shouldRemove = state.options.instantUpload;\n      if (shouldRemove) {\n        dispatch('REMOVE_ITEM', {\n          query: item.id\n        });\n      }\n    });\n  }),\n  REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n    // not instant uploading, revert immediately\n    if (!state.options.instantUpload) {\n      dispatch('REVERT_ITEM_PROCESSING', {\n        query: item\n      });\n      return;\n    }\n\n    // if we're instant uploading the file will also be removed if we revert,\n    // so if a before remove file hook is defined we need to run it now\n    const handleRevert = shouldRevert => {\n      if (!shouldRevert) return;\n      dispatch('REVERT_ITEM_PROCESSING', {\n        query: item\n      });\n    };\n    const fn = query('GET_BEFORE_REMOVE_FILE');\n    if (!fn) {\n      return handleRevert(true);\n    }\n    const requestRemoveResult = fn(createItemAPI(item));\n    if (requestRemoveResult == null) {\n      // undefined or null\n      return handleRevert(true);\n    }\n    if (typeof requestRemoveResult === 'boolean') {\n      return handleRevert(requestRemoveResult);\n    }\n    if (typeof requestRemoveResult.then === 'function') {\n      requestRemoveResult.then(handleRevert);\n    }\n  }),\n  REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n    item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(() => {\n      const shouldRemove = state.options.instantUpload || isMockItem(item);\n      if (shouldRemove) {\n        dispatch('REMOVE_ITEM', {\n          query: item.id\n        });\n      }\n    }).catch(() => {});\n  }),\n  SET_OPTIONS: ({\n    options\n  }) => {\n    // get all keys passed\n    const optionKeys = Object.keys(options);\n\n    // get prioritized keyed to include (remove once not in options object)\n    const prioritizedOptionKeys = PrioritizedOptions.filter(key => optionKeys.includes(key));\n\n    // order the keys, prioritized first, then rest\n    const orderedOptionKeys = [\n    // add prioritized first if passed to options, else remove\n    ...prioritizedOptionKeys,\n    // prevent duplicate keys\n    ...Object.keys(options).filter(key => !prioritizedOptionKeys.includes(key))];\n\n    // dispatch set event for each option\n    orderedOptionKeys.forEach(key => {\n      dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n        value: options[key]\n      });\n    });\n  }\n});\nconst PrioritizedOptions = ['server' // must be processed before \"files\"\n];\nconst formatFilename = name => name;\nconst createElement$1 = tagName => {\n  return document.createElement(tagName);\n};\nconst text = (node, value) => {\n  let textNode = node.childNodes[0];\n  if (!textNode) {\n    textNode = document.createTextNode(value);\n    node.appendChild(textNode);\n  } else if (value !== textNode.nodeValue) {\n    textNode.nodeValue = value;\n  }\n};\nconst polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n  const angleInRadians = (angleInDegrees % 360 - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n};\nconst describeArc = (x, y, radius, startAngle, endAngle, arcSweep) => {\n  const start = polarToCartesian(x, y, radius, endAngle);\n  const end = polarToCartesian(x, y, radius, startAngle);\n  return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n};\nconst percentageArc = (x, y, radius, from, to) => {\n  let arcSweep = 1;\n  if (to > from && to - from <= 0.5) {\n    arcSweep = 0;\n  }\n  if (from > to && from - to >= 0.5) {\n    arcSweep = 0;\n  }\n  return describeArc(x, y, radius, Math.min(0.9999, from) * 360, Math.min(0.9999, to) * 360, arcSweep);\n};\nconst create = ({\n  root,\n  props\n}) => {\n  // start at 0\n  props.spin = false;\n  props.progress = 0;\n  props.opacity = 0;\n\n  // svg\n  const svg = createElement('svg');\n  root.ref.path = createElement('path', {\n    'stroke-width': 2,\n    'stroke-linecap': 'round'\n  });\n  svg.appendChild(root.ref.path);\n  root.ref.svg = svg;\n  root.appendChild(svg);\n};\nconst write = ({\n  root,\n  props\n}) => {\n  if (props.opacity === 0) {\n    return;\n  }\n  if (props.align) {\n    root.element.dataset.align = props.align;\n  }\n\n  // get width of stroke\n  const ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);\n\n  // calculate size of ring\n  const size = root.rect.element.width * 0.5;\n\n  // ring state\n  let ringFrom = 0;\n  let ringTo = 0;\n\n  // now in busy mode\n  if (props.spin) {\n    ringFrom = 0;\n    ringTo = 0.5;\n  } else {\n    ringFrom = 0;\n    ringTo = props.progress;\n  }\n\n  // get arc path\n  const coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);\n\n  // update progress bar\n  attr(root.ref.path, 'd', coordinates);\n\n  // hide while contains 0 value\n  attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n};\nconst progressIndicator = createView({\n  tag: 'div',\n  name: 'progress-indicator',\n  ignoreRectUpdate: true,\n  ignoreRect: true,\n  create,\n  write,\n  mixins: {\n    apis: ['progress', 'spin', 'align'],\n    styles: ['opacity'],\n    animations: {\n      opacity: {\n        type: 'tween',\n        duration: 500\n      },\n      progress: {\n        type: 'spring',\n        stiffness: 0.95,\n        damping: 0.65,\n        mass: 10\n      }\n    }\n  }\n});\nconst create$1 = ({\n  root,\n  props\n}) => {\n  root.element.innerHTML = (props.icon || '') + `<span>${props.label}</span>`;\n  props.isDisabled = false;\n};\nconst write$1 = ({\n  root,\n  props\n}) => {\n  const {\n    isDisabled\n  } = props;\n  const shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n  if (shouldDisable && !isDisabled) {\n    props.isDisabled = true;\n    attr(root.element, 'disabled', 'disabled');\n  } else if (!shouldDisable && isDisabled) {\n    props.isDisabled = false;\n    root.element.removeAttribute('disabled');\n  }\n};\nconst fileActionButton = createView({\n  tag: 'button',\n  attributes: {\n    type: 'button'\n  },\n  ignoreRect: true,\n  ignoreRectUpdate: true,\n  name: 'file-action-button',\n  mixins: {\n    apis: ['label'],\n    styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n    animations: {\n      scaleX: 'spring',\n      scaleY: 'spring',\n      translateX: 'spring',\n      translateY: 'spring',\n      opacity: {\n        type: 'tween',\n        duration: 250\n      }\n    },\n    listeners: true\n  },\n  create: create$1,\n  write: write$1\n});\nconst toNaturalFileSize = (bytes, decimalSeparator = '.', base = 1000, options = {}) => {\n  const {\n    labelBytes = 'bytes',\n    labelKilobytes = 'KB',\n    labelMegabytes = 'MB',\n    labelGigabytes = 'GB'\n  } = options;\n\n  // no negative byte sizes\n  bytes = Math.round(Math.abs(bytes));\n  const KB = base;\n  const MB = base * base;\n  const GB = base * base * base;\n\n  // just bytes\n  if (bytes < KB) {\n    return `${bytes} ${labelBytes}`;\n  }\n\n  // kilobytes\n  if (bytes < MB) {\n    return `${Math.floor(bytes / KB)} ${labelKilobytes}`;\n  }\n\n  // megabytes\n  if (bytes < GB) {\n    return `${removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator)} ${labelMegabytes}`;\n  }\n\n  // gigabytes\n  return `${removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator)} ${labelGigabytes}`;\n};\nconst removeDecimalsWhenZero = (value, decimalCount, separator) => {\n  return value.toFixed(decimalCount).split('.').filter(part => part !== '0').join(separator);\n};\nconst create$2 = ({\n  root,\n  props\n}) => {\n  // filename\n  const fileName = createElement$1('span');\n  fileName.className = 'filepond--file-info-main';\n  // hide for screenreaders\n  // the file is contained in a fieldset with legend that contains the filename\n  // no need to read it twice\n  attr(fileName, 'aria-hidden', 'true');\n  root.appendChild(fileName);\n  root.ref.fileName = fileName;\n\n  // filesize\n  const fileSize = createElement$1('span');\n  fileSize.className = 'filepond--file-info-sub';\n  root.appendChild(fileSize);\n  root.ref.fileSize = fileSize;\n\n  // set initial values\n  text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n  text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\nconst updateFile = ({\n  root,\n  props\n}) => {\n  text(root.ref.fileSize, toNaturalFileSize(root.query('GET_ITEM_SIZE', props.id), '.', root.query('GET_FILE_SIZE_BASE'), root.query('GET_FILE_SIZE_LABELS', root.query)));\n  text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\nconst updateFileSizeOnError = ({\n  root,\n  props\n}) => {\n  // if size is available don't fallback to unknown size message\n  if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n    updateFile({\n      root,\n      props\n    });\n    return;\n  }\n  text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n};\nconst fileInfo = createView({\n  name: 'file-info',\n  ignoreRect: true,\n  ignoreRectUpdate: true,\n  write: createRoute({\n    DID_LOAD_ITEM: updateFile,\n    DID_UPDATE_ITEM_META: updateFile,\n    DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n    DID_THROW_ITEM_INVALID: updateFileSizeOnError\n  }),\n  didCreateView: root => {\n    applyFilters('CREATE_VIEW', {\n      ...root,\n      view: root\n    });\n  },\n  create: create$2,\n  mixins: {\n    styles: ['translateX', 'translateY'],\n    animations: {\n      translateX: 'spring',\n      translateY: 'spring'\n    }\n  }\n});\nconst toPercentage = value => Math.round(value * 100);\nconst create$3 = ({\n  root\n}) => {\n  // main status\n  const main = createElement$1('span');\n  main.className = 'filepond--file-status-main';\n  root.appendChild(main);\n  root.ref.main = main;\n\n  // sub status\n  const sub = createElement$1('span');\n  sub.className = 'filepond--file-status-sub';\n  root.appendChild(sub);\n  root.ref.sub = sub;\n  didSetItemLoadProgress({\n    root,\n    action: {\n      progress: null\n    }\n  });\n};\nconst didSetItemLoadProgress = ({\n  root,\n  action\n}) => {\n  const title = action.progress === null ? root.query('GET_LABEL_FILE_LOADING') : `${root.query('GET_LABEL_FILE_LOADING')} ${toPercentage(action.progress)}%`;\n  text(root.ref.main, title);\n  text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\nconst didSetItemProcessProgress = ({\n  root,\n  action\n}) => {\n  const title = action.progress === null ? root.query('GET_LABEL_FILE_PROCESSING') : `${root.query('GET_LABEL_FILE_PROCESSING')} ${toPercentage(action.progress)}%`;\n  text(root.ref.main, title);\n  text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\nconst didRequestItemProcessing = ({\n  root\n}) => {\n  text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n  text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\nconst didAbortItemProcessing = ({\n  root\n}) => {\n  text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n  text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n};\nconst didCompleteItemProcessing = ({\n  root\n}) => {\n  text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n  text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n};\nconst clear = ({\n  root\n}) => {\n  text(root.ref.main, '');\n  text(root.ref.sub, '');\n};\nconst error = ({\n  root,\n  action\n}) => {\n  text(root.ref.main, action.status.main);\n  text(root.ref.sub, action.status.sub);\n};\nconst fileStatus = createView({\n  name: 'file-status',\n  ignoreRect: true,\n  ignoreRectUpdate: true,\n  write: createRoute({\n    DID_LOAD_ITEM: clear,\n    DID_REVERT_ITEM_PROCESSING: clear,\n    DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n    DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n    DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n    DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n    DID_THROW_ITEM_LOAD_ERROR: error,\n    DID_THROW_ITEM_INVALID: error,\n    DID_THROW_ITEM_PROCESSING_ERROR: error,\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n    DID_THROW_ITEM_REMOVE_ERROR: error\n  }),\n  didCreateView: root => {\n    applyFilters('CREATE_VIEW', {\n      ...root,\n      view: root\n    });\n  },\n  create: create$3,\n  mixins: {\n    styles: ['translateX', 'translateY', 'opacity'],\n    animations: {\n      opacity: {\n        type: 'tween',\n        duration: 250\n      },\n      translateX: 'spring',\n      translateY: 'spring'\n    }\n  }\n});\n\n/**\n * Button definitions for the file view\n */\n\nconst Buttons = {\n  AbortItemLoad: {\n    label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n    action: 'ABORT_ITEM_LOAD',\n    className: 'filepond--action-abort-item-load',\n    align: 'LOAD_INDICATOR_POSITION' // right\n  },\n  RetryItemLoad: {\n    label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n    action: 'RETRY_ITEM_LOAD',\n    icon: 'GET_ICON_RETRY',\n    className: 'filepond--action-retry-item-load',\n    align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n  },\n  RemoveItem: {\n    label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n    action: 'REQUEST_REMOVE_ITEM',\n    icon: 'GET_ICON_REMOVE',\n    className: 'filepond--action-remove-item',\n    align: 'BUTTON_REMOVE_ITEM_POSITION' // left\n  },\n  ProcessItem: {\n    label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n    action: 'REQUEST_ITEM_PROCESSING',\n    icon: 'GET_ICON_PROCESS',\n    className: 'filepond--action-process-item',\n    align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n  },\n  AbortItemProcessing: {\n    label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n    action: 'ABORT_ITEM_PROCESSING',\n    className: 'filepond--action-abort-item-processing',\n    align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n  },\n  RetryItemProcessing: {\n    label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n    action: 'RETRY_ITEM_PROCESSING',\n    icon: 'GET_ICON_RETRY',\n    className: 'filepond--action-retry-item-processing',\n    align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n  },\n  RevertItemProcessing: {\n    label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n    action: 'REQUEST_REVERT_ITEM_PROCESSING',\n    icon: 'GET_ICON_UNDO',\n    className: 'filepond--action-revert-item-processing',\n    align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n  }\n};\n\n// make a list of buttons, we can then remove buttons from this list if they're disabled\nconst ButtonKeys = [];\nforin(Buttons, key => {\n  ButtonKeys.push(key);\n});\nconst calculateFileInfoOffset = root => {\n  if (getRemoveIndicatorAligment(root) === 'right') return 0;\n  const buttonRect = root.ref.buttonRemoveItem.rect.element;\n  return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;\n};\nconst calculateButtonWidth = root => {\n  const buttonRect = root.ref.buttonAbortItemLoad.rect.element;\n  return buttonRect.width;\n};\n\n// Force on full pixels so text stays crips\nconst calculateFileVerticalCenterOffset = root => Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\nconst calculateFileHorizontalCenterOffset = root => Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\nconst getLoadIndicatorAlignment = root => root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\nconst getProcessIndicatorAlignment = root => root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\nconst getRemoveIndicatorAligment = root => root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\nconst DefaultStyle = {\n  buttonAbortItemLoad: {\n    opacity: 0\n  },\n  buttonRetryItemLoad: {\n    opacity: 0\n  },\n  buttonRemoveItem: {\n    opacity: 0\n  },\n  buttonProcessItem: {\n    opacity: 0\n  },\n  buttonAbortItemProcessing: {\n    opacity: 0\n  },\n  buttonRetryItemProcessing: {\n    opacity: 0\n  },\n  buttonRevertItemProcessing: {\n    opacity: 0\n  },\n  loadProgressIndicator: {\n    opacity: 0,\n    align: getLoadIndicatorAlignment\n  },\n  processProgressIndicator: {\n    opacity: 0,\n    align: getProcessIndicatorAlignment\n  },\n  processingCompleteIndicator: {\n    opacity: 0,\n    scaleX: 0.75,\n    scaleY: 0.75\n  },\n  info: {\n    translateX: 0,\n    translateY: 0,\n    opacity: 0\n  },\n  status: {\n    translateX: 0,\n    translateY: 0,\n    opacity: 0\n  }\n};\nconst IdleStyle = {\n  buttonRemoveItem: {\n    opacity: 1\n  },\n  buttonProcessItem: {\n    opacity: 1\n  },\n  info: {\n    translateX: calculateFileInfoOffset\n  },\n  status: {\n    translateX: calculateFileInfoOffset\n  }\n};\nconst ProcessingStyle = {\n  buttonAbortItemProcessing: {\n    opacity: 1\n  },\n  processProgressIndicator: {\n    opacity: 1\n  },\n  status: {\n    opacity: 1\n  }\n};\nconst StyleMap = {\n  DID_THROW_ITEM_INVALID: {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      translateX: calculateFileInfoOffset,\n      opacity: 1\n    }\n  },\n  DID_START_ITEM_LOAD: {\n    buttonAbortItemLoad: {\n      opacity: 1\n    },\n    loadProgressIndicator: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    }\n  },\n  DID_THROW_ITEM_LOAD_ERROR: {\n    buttonRetryItemLoad: {\n      opacity: 1\n    },\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      opacity: 1\n    }\n  },\n  DID_START_ITEM_REMOVE: {\n    processProgressIndicator: {\n      opacity: 1,\n      align: getRemoveIndicatorAligment\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      opacity: 0\n    }\n  },\n  DID_THROW_ITEM_REMOVE_ERROR: {\n    processProgressIndicator: {\n      opacity: 0,\n      align: getRemoveIndicatorAligment\n    },\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      opacity: 1,\n      translateX: calculateFileInfoOffset\n    }\n  },\n  DID_LOAD_ITEM: IdleStyle,\n  DID_LOAD_LOCAL_ITEM: {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      translateX: calculateFileInfoOffset\n    }\n  },\n  DID_START_ITEM_PROCESSING: ProcessingStyle,\n  DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n  DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n  DID_COMPLETE_ITEM_PROCESSING: {\n    buttonRevertItemProcessing: {\n      opacity: 1\n    },\n    info: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    }\n  },\n  DID_THROW_ITEM_PROCESSING_ERROR: {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    buttonRetryItemProcessing: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    }\n  },\n  DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n    buttonRevertItemProcessing: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    },\n    info: {\n      opacity: 1\n    }\n  },\n  DID_ABORT_ITEM_PROCESSING: {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    buttonProcessItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      opacity: 1\n    }\n  },\n  DID_REVERT_ITEM_PROCESSING: IdleStyle\n};\n\n// complete indicator view\nconst processingCompleteIndicatorView = createView({\n  create: ({\n    root\n  }) => {\n    root.element.innerHTML = root.query('GET_ICON_DONE');\n  },\n  name: 'processing-complete-indicator',\n  ignoreRect: true,\n  mixins: {\n    styles: ['scaleX', 'scaleY', 'opacity'],\n    animations: {\n      scaleX: 'spring',\n      scaleY: 'spring',\n      opacity: {\n        type: 'tween',\n        duration: 250\n      }\n    }\n  }\n});\n\n/**\n * Creates the file view\n */\nconst create$4 = ({\n  root,\n  props\n}) => {\n  // copy Buttons object\n  const LocalButtons = Object.keys(Buttons).reduce((prev, curr) => {\n    prev[curr] = {\n      ...Buttons[curr]\n    };\n    return prev;\n  }, {});\n  const {\n    id\n  } = props;\n\n  // allow reverting upload\n  const allowRevert = root.query('GET_ALLOW_REVERT');\n\n  // allow remove file\n  const allowRemove = root.query('GET_ALLOW_REMOVE');\n\n  // allow processing upload\n  const allowProcess = root.query('GET_ALLOW_PROCESS');\n\n  // is instant uploading, need this to determine the icon of the undo button\n  const instantUpload = root.query('GET_INSTANT_UPLOAD');\n\n  // is async set up\n  const isAsync = root.query('IS_ASYNC');\n\n  // should align remove item buttons\n  const alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');\n\n  // enabled buttons array\n  let buttonFilter;\n  if (isAsync) {\n    if (allowProcess && !allowRevert) {\n      // only remove revert button\n      buttonFilter = key => !/RevertItemProcessing/.test(key);\n    } else if (!allowProcess && allowRevert) {\n      // only remove process button\n      buttonFilter = key => !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);\n    } else if (!allowProcess && !allowRevert) {\n      // remove all process buttons\n      buttonFilter = key => !/Process/.test(key);\n    }\n  } else {\n    // no process controls available\n    buttonFilter = key => !/Process/.test(key);\n  }\n  const enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();\n\n  // update icon and label for revert button when instant uploading\n  if (instantUpload && allowRevert) {\n    LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n    LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n  }\n\n  // remove last button (revert) if not allowed\n  if (isAsync && !allowRevert) {\n    const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n    map.info.translateX = calculateFileHorizontalCenterOffset;\n    map.info.translateY = calculateFileVerticalCenterOffset;\n    map.status.translateY = calculateFileVerticalCenterOffset;\n    map.processingCompleteIndicator = {\n      opacity: 1,\n      scaleX: 1,\n      scaleY: 1\n    };\n  }\n\n  // should align center\n  if (isAsync && !allowProcess) {\n    ['DID_START_ITEM_PROCESSING', 'DID_REQUEST_ITEM_PROCESSING', 'DID_UPDATE_ITEM_PROCESS_PROGRESS', 'DID_THROW_ITEM_PROCESSING_ERROR'].forEach(key => {\n      StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;\n    });\n    StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;\n  }\n\n  // move remove button to right\n  if (alignRemoveItemButton && allowRevert) {\n    LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';\n    const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n    map.info.translateX = calculateFileInfoOffset;\n    map.status.translateY = calculateFileVerticalCenterOffset;\n    map.processingCompleteIndicator = {\n      opacity: 1,\n      scaleX: 1,\n      scaleY: 1\n    };\n  }\n\n  // show/hide RemoveItem button\n  if (!allowRemove) {\n    LocalButtons['RemoveItem'].disabled = true;\n  }\n\n  // create the button views\n  forin(LocalButtons, (key, definition) => {\n    // create button\n    const buttonView = root.createChildView(fileActionButton, {\n      label: root.query(definition.label),\n      icon: root.query(definition.icon),\n      opacity: 0\n    });\n\n    // should be appended?\n    if (enabledButtons.includes(key)) {\n      root.appendChildView(buttonView);\n    }\n\n    // toggle\n    if (definition.disabled) {\n      buttonView.element.setAttribute('disabled', 'disabled');\n      buttonView.element.setAttribute('hidden', 'hidden');\n    }\n\n    // add position attribute\n    buttonView.element.dataset.align = root.query(`GET_STYLE_${definition.align}`);\n\n    // add class\n    buttonView.element.classList.add(definition.className);\n\n    // handle interactions\n    buttonView.on('click', e => {\n      e.stopPropagation();\n      if (definition.disabled) return;\n      root.dispatch(definition.action, {\n        query: id\n      });\n    });\n\n    // set reference\n    root.ref[`button${key}`] = buttonView;\n  });\n\n  // checkmark\n  root.ref.processingCompleteIndicator = root.appendChildView(root.createChildView(processingCompleteIndicatorView));\n  root.ref.processingCompleteIndicator.element.dataset.align = root.query(`GET_STYLE_BUTTON_PROCESS_ITEM_POSITION`);\n\n  // create file info view\n  root.ref.info = root.appendChildView(root.createChildView(fileInfo, {\n    id\n  }));\n\n  // create file status view\n  root.ref.status = root.appendChildView(root.createChildView(fileStatus, {\n    id\n  }));\n\n  // add progress indicators\n  const loadIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n    opacity: 0,\n    align: root.query(`GET_STYLE_LOAD_INDICATOR_POSITION`)\n  }));\n  loadIndicatorView.element.classList.add('filepond--load-indicator');\n  root.ref.loadProgressIndicator = loadIndicatorView;\n  const progressIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n    opacity: 0,\n    align: root.query(`GET_STYLE_PROGRESS_INDICATOR_POSITION`)\n  }));\n  progressIndicatorView.element.classList.add('filepond--process-indicator');\n  root.ref.processProgressIndicator = progressIndicatorView;\n\n  // current active styles\n  root.ref.activeStyles = [];\n};\nconst write$2 = ({\n  root,\n  actions,\n  props\n}) => {\n  // route actions\n  route({\n    root,\n    actions,\n    props\n  });\n\n  // select last state change action\n  let action = actions.concat().filter(action => /^DID_/.test(action.type)).reverse().find(action => StyleMap[action.type]);\n\n  // a new action happened, let's get the matching styles\n  if (action) {\n    // define new active styles\n    root.ref.activeStyles = [];\n    const stylesToApply = StyleMap[action.type];\n    forin(DefaultStyle, (name, defaultStyles) => {\n      // get reference to control\n      const control = root.ref[name];\n\n      // loop over all styles for this control\n      forin(defaultStyles, (key, defaultValue) => {\n        const value = stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined' ? stylesToApply[name][key] : defaultValue;\n        root.ref.activeStyles.push({\n          control,\n          key,\n          value\n        });\n      });\n    });\n  }\n\n  // apply active styles to element\n  root.ref.activeStyles.forEach(({\n    control,\n    key,\n    value\n  }) => {\n    control[key] = typeof value === 'function' ? value(root) : value;\n  });\n};\nconst route = createRoute({\n  DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: ({\n    root,\n    action\n  }) => {\n    root.ref.buttonAbortItemProcessing.label = action.value;\n  },\n  DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: ({\n    root,\n    action\n  }) => {\n    root.ref.buttonAbortItemLoad.label = action.value;\n  },\n  DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: ({\n    root,\n    action\n  }) => {\n    root.ref.buttonAbortItemRemoval.label = action.value;\n  },\n  DID_REQUEST_ITEM_PROCESSING: ({\n    root\n  }) => {\n    root.ref.processProgressIndicator.spin = true;\n    root.ref.processProgressIndicator.progress = 0;\n  },\n  DID_START_ITEM_LOAD: ({\n    root\n  }) => {\n    root.ref.loadProgressIndicator.spin = true;\n    root.ref.loadProgressIndicator.progress = 0;\n  },\n  DID_START_ITEM_REMOVE: ({\n    root\n  }) => {\n    root.ref.processProgressIndicator.spin = true;\n    root.ref.processProgressIndicator.progress = 0;\n  },\n  DID_UPDATE_ITEM_LOAD_PROGRESS: ({\n    root,\n    action\n  }) => {\n    root.ref.loadProgressIndicator.spin = false;\n    root.ref.loadProgressIndicator.progress = action.progress;\n  },\n  DID_UPDATE_ITEM_PROCESS_PROGRESS: ({\n    root,\n    action\n  }) => {\n    root.ref.processProgressIndicator.spin = false;\n    root.ref.processProgressIndicator.progress = action.progress;\n  }\n});\nconst file = createView({\n  create: create$4,\n  write: write$2,\n  didCreateView: root => {\n    applyFilters('CREATE_VIEW', {\n      ...root,\n      view: root\n    });\n  },\n  name: 'file'\n});\n\n/**\n * Creates the file view\n */\nconst create$5 = ({\n  root,\n  props\n}) => {\n  // filename\n  root.ref.fileName = createElement$1('legend');\n  root.appendChild(root.ref.fileName);\n\n  // file appended\n  root.ref.file = root.appendChildView(root.createChildView(file, {\n    id: props.id\n  }));\n\n  // data has moved to data.js\n  root.ref.data = false;\n};\n\n/**\n * Data storage\n */\nconst didLoadItem = ({\n  root,\n  props\n}) => {\n  // updates the legend of the fieldset so screenreaders can better group buttons\n  text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\nconst fileWrapper = createView({\n  create: create$5,\n  ignoreRect: true,\n  write: createRoute({\n    DID_LOAD_ITEM: didLoadItem\n  }),\n  didCreateView: root => {\n    applyFilters('CREATE_VIEW', {\n      ...root,\n      view: root\n    });\n  },\n  tag: 'fieldset',\n  name: 'file-wrapper'\n});\nconst PANEL_SPRING_PROPS = {\n  type: 'spring',\n  damping: 0.6,\n  mass: 7\n};\nconst create$6 = ({\n  root,\n  props\n}) => {\n  [{\n    name: 'top'\n  }, {\n    name: 'center',\n    props: {\n      translateY: null,\n      scaleY: null\n    },\n    mixins: {\n      animations: {\n        scaleY: PANEL_SPRING_PROPS\n      },\n      styles: ['translateY', 'scaleY']\n    }\n  }, {\n    name: 'bottom',\n    props: {\n      translateY: null\n    },\n    mixins: {\n      animations: {\n        translateY: PANEL_SPRING_PROPS\n      },\n      styles: ['translateY']\n    }\n  }].forEach(section => {\n    createSection(root, section, props.name);\n  });\n  root.element.classList.add(`filepond--${props.name}`);\n  root.ref.scalable = null;\n};\nconst createSection = (root, section, className) => {\n  const viewConstructor = createView({\n    name: `panel-${section.name} filepond--${className}`,\n    mixins: section.mixins,\n    ignoreRectUpdate: true\n  });\n  const view = root.createChildView(viewConstructor, section.props);\n  root.ref[section.name] = root.appendChildView(view);\n};\nconst write$3 = ({\n  root,\n  props\n}) => {\n  // update scalable state\n  if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n    root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n    root.element.dataset.scalable = root.ref.scalable;\n  }\n\n  // no height, can't set\n  if (!props.height) return;\n\n  // get child rects\n  const topRect = root.ref.top.rect.element;\n  const bottomRect = root.ref.bottom.rect.element;\n\n  // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n  const height = Math.max(topRect.height + bottomRect.height, props.height);\n\n  // offset center part\n  root.ref.center.translateY = topRect.height;\n\n  // scale center part\n  // use math ceil to prevent transparent lines because of rounding errors\n  root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;\n\n  // offset bottom part\n  root.ref.bottom.translateY = height - bottomRect.height;\n};\nconst panel = createView({\n  name: 'panel',\n  read: ({\n    root,\n    props\n  }) => props.heightCurrent = root.ref.bottom.translateY,\n  write: write$3,\n  create: create$6,\n  ignoreRect: true,\n  mixins: {\n    apis: ['height', 'heightCurrent', 'scalable']\n  }\n});\nconst createDragHelper = items => {\n  const itemIds = items.map(item => item.id);\n  let prevIndex = undefined;\n  return {\n    setIndex: index => {\n      prevIndex = index;\n    },\n    getIndex: () => prevIndex,\n    getItemIndex: item => itemIds.indexOf(item.id)\n  };\n};\nconst ITEM_TRANSLATE_SPRING = {\n  type: 'spring',\n  stiffness: 0.75,\n  damping: 0.45,\n  mass: 10\n};\nconst ITEM_SCALE_SPRING = 'spring';\nconst StateMap = {\n  DID_START_ITEM_LOAD: 'busy',\n  DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n  DID_THROW_ITEM_INVALID: 'load-invalid',\n  DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n  DID_LOAD_ITEM: 'idle',\n  DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n  DID_START_ITEM_REMOVE: 'busy',\n  DID_START_ITEM_PROCESSING: 'busy processing',\n  DID_REQUEST_ITEM_PROCESSING: 'busy processing',\n  DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n  DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n  DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n  DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n  DID_ABORT_ITEM_PROCESSING: 'cancelled',\n  DID_REVERT_ITEM_PROCESSING: 'idle'\n};\n\n/**\n * Creates the file view\n */\nconst create$7 = ({\n  root,\n  props\n}) => {\n  // select\n  root.ref.handleClick = e => root.dispatch('DID_ACTIVATE_ITEM', {\n    id: props.id\n  });\n\n  // set id\n  root.element.id = `filepond--item-${props.id}`;\n  root.element.addEventListener('click', root.ref.handleClick);\n\n  // file view\n  root.ref.container = root.appendChildView(root.createChildView(fileWrapper, {\n    id: props.id\n  }));\n\n  // file panel\n  root.ref.panel = root.appendChildView(root.createChildView(panel, {\n    name: 'item-panel'\n  }));\n\n  // default start height\n  root.ref.panel.height = null;\n\n  // by default not marked for removal\n  props.markedForRemoval = false;\n\n  // if not allowed to reorder file items, exit here\n  if (!root.query('GET_ALLOW_REORDER')) return;\n\n  // set to idle so shows grab cursor\n  root.element.dataset.dragState = 'idle';\n  const grab = e => {\n    if (!e.isPrimary) return;\n    let removedActivateListener = false;\n    const origin = {\n      x: e.pageX,\n      y: e.pageY\n    };\n    props.dragOrigin = {\n      x: root.translateX,\n      y: root.translateY\n    };\n    props.dragCenter = {\n      x: e.offsetX,\n      y: e.offsetY\n    };\n    const dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));\n    root.dispatch('DID_GRAB_ITEM', {\n      id: props.id,\n      dragState\n    });\n    const drag = e => {\n      if (!e.isPrimary) return;\n      e.stopPropagation();\n      e.preventDefault();\n      props.dragOffset = {\n        x: e.pageX - origin.x,\n        y: e.pageY - origin.y\n      };\n\n      // if dragged stop listening to clicks, will re-add when done dragging\n      const dist = props.dragOffset.x * props.dragOffset.x + props.dragOffset.y * props.dragOffset.y;\n      if (dist > 16 && !removedActivateListener) {\n        removedActivateListener = true;\n        root.element.removeEventListener('click', root.ref.handleClick);\n      }\n      root.dispatch('DID_DRAG_ITEM', {\n        id: props.id,\n        dragState\n      });\n    };\n    const drop = e => {\n      if (!e.isPrimary) return;\n      props.dragOffset = {\n        x: e.pageX - origin.x,\n        y: e.pageY - origin.y\n      };\n      reset();\n    };\n    const cancel = () => {\n      reset();\n    };\n    const reset = () => {\n      document.removeEventListener('pointercancel', cancel);\n      document.removeEventListener('pointermove', drag);\n      document.removeEventListener('pointerup', drop);\n      root.dispatch('DID_DROP_ITEM', {\n        id: props.id,\n        dragState\n      });\n\n      // start listening to clicks again\n      if (removedActivateListener) {\n        setTimeout(() => root.element.addEventListener('click', root.ref.handleClick), 0);\n      }\n    };\n    document.addEventListener('pointercancel', cancel);\n    document.addEventListener('pointermove', drag);\n    document.addEventListener('pointerup', drop);\n  };\n  root.element.addEventListener('pointerdown', grab);\n};\nconst route$1 = createRoute({\n  DID_UPDATE_PANEL_HEIGHT: ({\n    root,\n    action\n  }) => {\n    root.height = action.height;\n  }\n});\nconst write$4 = createRoute({\n  DID_GRAB_ITEM: ({\n    root,\n    props\n  }) => {\n    props.dragOrigin = {\n      x: root.translateX,\n      y: root.translateY\n    };\n  },\n  DID_DRAG_ITEM: ({\n    root\n  }) => {\n    root.element.dataset.dragState = 'drag';\n  },\n  DID_DROP_ITEM: ({\n    root,\n    props\n  }) => {\n    props.dragOffset = null;\n    props.dragOrigin = null;\n    root.element.dataset.dragState = 'drop';\n  }\n}, ({\n  root,\n  actions,\n  props,\n  shouldOptimize\n}) => {\n  if (root.element.dataset.dragState === 'drop') {\n    if (root.scaleX <= 1) {\n      root.element.dataset.dragState = 'idle';\n    }\n  }\n\n  // select last state change action\n  let action = actions.concat().filter(action => /^DID_/.test(action.type)).reverse().find(action => StateMap[action.type]);\n\n  // no need to set same state twice\n  if (action && action.type !== props.currentState) {\n    // set current state\n    props.currentState = action.type;\n\n    // set state\n    root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n  }\n\n  // route actions\n  const aspectRatio = root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n  if (!aspectRatio) {\n    route$1({\n      root,\n      actions,\n      props\n    });\n    if (!root.height && root.ref.container.rect.element.height > 0) {\n      root.height = root.ref.container.rect.element.height;\n    }\n  } else if (!shouldOptimize) {\n    root.height = root.rect.element.width * aspectRatio;\n  }\n\n  // sync panel height with item height\n  if (shouldOptimize) {\n    root.ref.panel.height = null;\n  }\n  root.ref.panel.height = root.height;\n});\nconst item = createView({\n  create: create$7,\n  write: write$4,\n  destroy: ({\n    root,\n    props\n  }) => {\n    root.element.removeEventListener('click', root.ref.handleClick);\n    root.dispatch('RELEASE_ITEM', {\n      query: props.id\n    });\n  },\n  tag: 'li',\n  name: 'item',\n  mixins: {\n    apis: ['id', 'interactionMethod', 'markedForRemoval', 'spawnDate', 'dragCenter', 'dragOrigin', 'dragOffset'],\n    styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n    animations: {\n      scaleX: ITEM_SCALE_SPRING,\n      scaleY: ITEM_SCALE_SPRING,\n      translateX: ITEM_TRANSLATE_SPRING,\n      translateY: ITEM_TRANSLATE_SPRING,\n      opacity: {\n        type: 'tween',\n        duration: 150\n      }\n    }\n  }\n});\nvar getItemsPerRow = (horizontalSpace, itemWidth) => {\n  // add one pixel leeway, when using percentages for item width total items can be 1.99 per row\n\n  return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));\n};\nconst getItemIndexByPosition = (view, children, positionInView) => {\n  if (!positionInView) return;\n  const horizontalSpace = view.rect.element.width;\n  // const children = view.childViews;\n  const l = children.length;\n  let last = null;\n\n  // -1, don't move items to accomodate (either add to top or bottom)\n  if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;\n\n  // let's get the item width\n  const item = children[0];\n  const itemRect = item.rect.element;\n  const itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n  const itemWidth = itemRect.width + itemHorizontalMargin;\n  const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n  // stack\n  if (itemsPerRow === 1) {\n    for (let index = 0; index < l; index++) {\n      const child = children[index];\n      const childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n      if (positionInView.top < childMid) {\n        return index;\n      }\n    }\n    return l;\n  }\n\n  // grid\n  const itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n  const itemHeight = itemRect.height + itemVerticalMargin;\n  for (let index = 0; index < l; index++) {\n    const indexX = index % itemsPerRow;\n    const indexY = Math.floor(index / itemsPerRow);\n    const offsetX = indexX * itemWidth;\n    const offsetY = indexY * itemHeight;\n    const itemTop = offsetY - itemRect.marginTop;\n    const itemRight = offsetX + itemWidth;\n    const itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n    if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n      if (positionInView.left < itemRight) {\n        return index;\n      } else if (index !== l - 1) {\n        last = index;\n      } else {\n        last = null;\n      }\n    }\n  }\n  if (last !== null) {\n    return last;\n  }\n  return l;\n};\nconst dropAreaDimensions = {\n  height: 0,\n  width: 0,\n  get getHeight() {\n    return this.height;\n  },\n  set setHeight(val) {\n    if (this.height === 0 || val === 0) this.height = val;\n  },\n  get getWidth() {\n    return this.width;\n  },\n  set setWidth(val) {\n    if (this.width === 0 || val === 0) this.width = val;\n  },\n  setDimensions: function (height, width) {\n    if (this.height === 0 || height === 0) this.height = height;\n    if (this.width === 0 || width === 0) this.width = width;\n  }\n};\nconst create$8 = ({\n  root\n}) => {\n  // need to set role to list as otherwise it won't be read as a list by VoiceOver\n  attr(root.element, 'role', 'list');\n  root.ref.lastItemSpanwDate = Date.now();\n};\n\n/**\n * Inserts a new item\n * @param root\n * @param action\n */\nconst addItemView = ({\n  root,\n  action\n}) => {\n  const {\n    id,\n    index,\n    interactionMethod\n  } = action;\n  root.ref.addIndex = index;\n  const now = Date.now();\n  let spawnDate = now;\n  let opacity = 1;\n  if (interactionMethod !== InteractionMethod.NONE) {\n    opacity = 0;\n    const cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n    const dist = now - root.ref.lastItemSpanwDate;\n    spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n  }\n  root.ref.lastItemSpanwDate = spawnDate;\n  root.appendChildView(root.createChildView(\n  // view type\n  item,\n  // props\n  {\n    spawnDate,\n    id,\n    opacity,\n    interactionMethod\n  }), index);\n};\nconst moveItem = (item, x, y, vx = 0, vy = 1) => {\n  // set to null to remove animation while dragging\n  if (item.dragOffset) {\n    item.translateX = null;\n    item.translateY = null;\n    item.translateX = item.dragOrigin.x + item.dragOffset.x;\n    item.translateY = item.dragOrigin.y + item.dragOffset.y;\n    item.scaleX = 1.025;\n    item.scaleY = 1.025;\n  } else {\n    item.translateX = x;\n    item.translateY = y;\n    if (Date.now() > item.spawnDate) {\n      // reveal element\n      if (item.opacity === 0) {\n        introItemView(item, x, y, vx, vy);\n      }\n\n      // make sure is default scale every frame\n      item.scaleX = 1;\n      item.scaleY = 1;\n      item.opacity = 1;\n    }\n  }\n};\nconst introItemView = (item, x, y, vx, vy) => {\n  if (item.interactionMethod === InteractionMethod.NONE) {\n    item.translateX = null;\n    item.translateX = x;\n    item.translateY = null;\n    item.translateY = y;\n  } else if (item.interactionMethod === InteractionMethod.DROP) {\n    item.translateX = null;\n    item.translateX = x - vx * 20;\n    item.translateY = null;\n    item.translateY = y - vy * 10;\n    item.scaleX = 0.8;\n    item.scaleY = 0.8;\n  } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n    item.translateY = null;\n    item.translateY = y - 30;\n  } else if (item.interactionMethod === InteractionMethod.API) {\n    item.translateX = null;\n    item.translateX = x - 30;\n    item.translateY = null;\n  }\n};\n\n/**\n * Removes an existing item\n * @param root\n * @param action\n */\nconst removeItemView = ({\n  root,\n  action\n}) => {\n  const {\n    id\n  } = action;\n\n  // get the view matching the given id\n  const view = root.childViews.find(child => child.id === id);\n\n  // if no view found, exit\n  if (!view) {\n    return;\n  }\n\n  // animate view out of view\n  view.scaleX = 0.9;\n  view.scaleY = 0.9;\n  view.opacity = 0;\n\n  // mark for removal\n  view.markedForRemoval = true;\n};\nconst getItemHeight = child => child.rect.element.height + child.rect.element.marginBottom * 0.5 + child.rect.element.marginTop * 0.5;\nconst getItemWidth = child => child.rect.element.width + child.rect.element.marginLeft * 0.5 + child.rect.element.marginRight * 0.5;\nconst dragItem = ({\n  root,\n  action\n}) => {\n  const {\n    id,\n    dragState\n  } = action;\n\n  // reference to item\n  const item = root.query('GET_ITEM', {\n    id\n  });\n\n  // get the view matching the given id\n  const view = root.childViews.find(child => child.id === id);\n  const numItems = root.childViews.length;\n  const oldIndex = dragState.getItemIndex(item);\n\n  // if no view found, exit\n  if (!view) return;\n  const dragPosition = {\n    x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,\n    y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y\n  };\n\n  // get drag area dimensions\n  const dragHeight = getItemHeight(view);\n  const dragWidth = getItemWidth(view);\n\n  // get rows and columns (There will always be at least one row and one column if a file is present)\n  let cols = Math.floor(root.rect.outer.width / dragWidth);\n  if (cols > numItems) cols = numItems;\n\n  // rows are used to find when we have left the preview area bounding box\n  const rows = Math.floor(numItems / cols + 1);\n  dropAreaDimensions.setHeight = dragHeight * rows;\n  dropAreaDimensions.setWidth = dragWidth * cols;\n\n  // get new index of dragged item\n  var location = {\n    y: Math.floor(dragPosition.y / dragHeight),\n    x: Math.floor(dragPosition.x / dragWidth),\n    getGridIndex: function getGridIndex() {\n      if (dragPosition.y > dropAreaDimensions.getHeight || dragPosition.y < 0 || dragPosition.x > dropAreaDimensions.getWidth || dragPosition.x < 0) return oldIndex;\n      return this.y * cols + this.x;\n    },\n    getColIndex: function getColIndex() {\n      const items = root.query('GET_ACTIVE_ITEMS');\n      const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n      const children = items.map(item => visibleChildren.find(childView => childView.id === item.id));\n      const currentIndex = children.findIndex(child => child === view);\n      const dragHeight = getItemHeight(view);\n      const l = children.length;\n      let idx = l;\n      let childHeight = 0;\n      let childBottom = 0;\n      let childTop = 0;\n      for (let i = 0; i < l; i++) {\n        childHeight = getItemHeight(children[i]);\n        childTop = childBottom;\n        childBottom = childTop + childHeight;\n        if (dragPosition.y < childBottom) {\n          if (currentIndex > i) {\n            if (dragPosition.y < childTop + dragHeight) {\n              idx = i;\n              break;\n            }\n            continue;\n          }\n          idx = i;\n          break;\n        }\n      }\n      return idx;\n    }\n  };\n\n  // get new index\n  const index = cols > 1 ? location.getGridIndex() : location.getColIndex();\n  root.dispatch('MOVE_ITEM', {\n    query: view,\n    index\n  });\n\n  // if the index of the item changed, dispatch reorder action\n  const currentIndex = dragState.getIndex();\n  if (currentIndex === undefined || currentIndex !== index) {\n    dragState.setIndex(index);\n    if (currentIndex === undefined) return;\n    root.dispatch('DID_REORDER_ITEMS', {\n      items: root.query('GET_ACTIVE_ITEMS'),\n      origin: oldIndex,\n      target: index\n    });\n  }\n};\n\n/**\n * Setup action routes\n */\nconst route$2 = createRoute({\n  DID_ADD_ITEM: addItemView,\n  DID_REMOVE_ITEM: removeItemView,\n  DID_DRAG_ITEM: dragItem\n});\n\n/**\n * Write to view\n * @param root\n * @param actions\n * @param props\n */\nconst write$5 = ({\n  root,\n  props,\n  actions,\n  shouldOptimize\n}) => {\n  // route actions\n  route$2({\n    root,\n    props,\n    actions\n  });\n  const {\n    dragCoordinates\n  } = props;\n\n  // available space on horizontal axis\n  const horizontalSpace = root.rect.element.width;\n\n  // only draw children that have dimensions\n  const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n\n  // sort based on current active items\n  const children = root.query('GET_ACTIVE_ITEMS').map(item => visibleChildren.find(child => child.id === item.id)).filter(item => item);\n\n  // get index\n  const dragIndex = dragCoordinates ? getItemIndexByPosition(root, children, dragCoordinates) : null;\n\n  // add index is used to reserve the dropped/added item index till the actual item is rendered\n  const addIndex = root.ref.addIndex || null;\n\n  // add index no longer needed till possibly next draw\n  root.ref.addIndex = null;\n  let dragIndexOffset = 0;\n  let removeIndexOffset = 0;\n  let addIndexOffset = 0;\n  if (children.length === 0) return;\n  const childRect = children[0].rect.element;\n  const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n  const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n  const itemWidth = childRect.width + itemHorizontalMargin;\n  const itemHeight = childRect.height + itemVerticalMargin;\n  const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n  // stack\n  if (itemsPerRow === 1) {\n    let offsetY = 0;\n    let dragOffset = 0;\n    children.forEach((child, index) => {\n      if (dragIndex) {\n        let dist = index - dragIndex;\n        if (dist === -2) {\n          dragOffset = -itemVerticalMargin * 0.25;\n        } else if (dist === -1) {\n          dragOffset = -itemVerticalMargin * 0.75;\n        } else if (dist === 0) {\n          dragOffset = itemVerticalMargin * 0.75;\n        } else if (dist === 1) {\n          dragOffset = itemVerticalMargin * 0.25;\n        } else {\n          dragOffset = 0;\n        }\n      }\n      if (shouldOptimize) {\n        child.translateX = null;\n        child.translateY = null;\n      }\n      if (!child.markedForRemoval) {\n        moveItem(child, 0, offsetY + dragOffset);\n      }\n      let itemHeight = child.rect.element.height + itemVerticalMargin;\n      let visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n      offsetY += visualHeight;\n    });\n  }\n  // grid\n  else {\n    let prevX = 0;\n    let prevY = 0;\n    children.forEach((child, index) => {\n      if (index === dragIndex) {\n        dragIndexOffset = 1;\n      }\n      if (index === addIndex) {\n        addIndexOffset += 1;\n      }\n      if (child.markedForRemoval && child.opacity < 0.5) {\n        removeIndexOffset -= 1;\n      }\n      const visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n      const indexX = visualIndex % itemsPerRow;\n      const indexY = Math.floor(visualIndex / itemsPerRow);\n      const offsetX = indexX * itemWidth;\n      const offsetY = indexY * itemHeight;\n      const vectorX = Math.sign(offsetX - prevX);\n      const vectorY = Math.sign(offsetY - prevY);\n      prevX = offsetX;\n      prevY = offsetY;\n      if (child.markedForRemoval) return;\n      if (shouldOptimize) {\n        child.translateX = null;\n        child.translateY = null;\n      }\n      moveItem(child, offsetX, offsetY, vectorX, vectorY);\n    });\n  }\n};\n\n/**\n * Filters actions that are meant specifically for a certain child of the list\n * @param child\n * @param actions\n */\nconst filterSetItemActions = (child, actions) => actions.filter(action => {\n  // if action has an id, filter out actions that don't have this child id\n  if (action.data && action.data.id) {\n    return child.id === action.data.id;\n  }\n\n  // allow all other actions\n  return true;\n});\nconst list = createView({\n  create: create$8,\n  write: write$5,\n  tag: 'ul',\n  name: 'list',\n  didWriteView: ({\n    root\n  }) => {\n    root.childViews.filter(view => view.markedForRemoval && view.opacity === 0 && view.resting).forEach(view => {\n      view._destroy();\n      root.removeChildView(view);\n    });\n  },\n  filterFrameActionsForChild: filterSetItemActions,\n  mixins: {\n    apis: ['dragCoordinates']\n  }\n});\nconst create$9 = ({\n  root,\n  props\n}) => {\n  root.ref.list = root.appendChildView(root.createChildView(list));\n  props.dragCoordinates = null;\n  props.overflowing = false;\n};\nconst storeDragCoordinates = ({\n  root,\n  props,\n  action\n}) => {\n  if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n  props.dragCoordinates = {\n    left: action.position.scopeLeft - root.ref.list.rect.element.left,\n    top: action.position.scopeTop - (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop)\n  };\n};\nconst clearDragCoordinates = ({\n  props\n}) => {\n  props.dragCoordinates = null;\n};\nconst route$3 = createRoute({\n  DID_DRAG: storeDragCoordinates,\n  DID_END_DRAG: clearDragCoordinates\n});\nconst write$6 = ({\n  root,\n  props,\n  actions\n}) => {\n  // route actions\n  route$3({\n    root,\n    props,\n    actions\n  });\n\n  // current drag position\n  root.ref.list.dragCoordinates = props.dragCoordinates;\n\n  // if currently overflowing but no longer received overflow\n  if (props.overflowing && !props.overflow) {\n    props.overflowing = false;\n\n    // reset overflow state\n    root.element.dataset.state = '';\n    root.height = null;\n  }\n\n  // if is not overflowing currently but does receive overflow value\n  if (props.overflow) {\n    const newHeight = Math.round(props.overflow);\n    if (newHeight !== root.height) {\n      props.overflowing = true;\n      root.element.dataset.state = 'overflow';\n      root.height = newHeight;\n    }\n  }\n};\nconst listScroller = createView({\n  create: create$9,\n  write: write$6,\n  name: 'list-scroller',\n  mixins: {\n    apis: ['overflow', 'dragCoordinates'],\n    styles: ['height', 'translateY'],\n    animations: {\n      translateY: 'spring'\n    }\n  }\n});\nconst attrToggle = (element, name, state, enabledValue = '') => {\n  if (state) {\n    attr(element, name, enabledValue);\n  } else {\n    element.removeAttribute(name);\n  }\n};\nconst resetFileInput = input => {\n  // no value, no need to reset\n  if (!input || input.value === '') {\n    return;\n  }\n  try {\n    // for modern browsers\n    input.value = '';\n  } catch (err) {}\n\n  // for IE10\n  if (input.value) {\n    // quickly append input to temp form and reset form\n    const form = createElement$1('form');\n    const parentNode = input.parentNode;\n    const ref = input.nextSibling;\n    form.appendChild(input);\n    form.reset();\n\n    // re-inject input where it originally was\n    if (ref) {\n      parentNode.insertBefore(input, ref);\n    } else {\n      parentNode.appendChild(input);\n    }\n  }\n};\nconst create$a = ({\n  root,\n  props\n}) => {\n  // set id so can be referenced from outside labels\n  root.element.id = `filepond--browser-${props.id}`;\n\n  // set name of element (is removed when a value is set)\n  attr(root.element, 'name', root.query('GET_NAME'));\n\n  // we have to link this element to the status element\n  attr(root.element, 'aria-controls', `filepond--assistant-${props.id}`);\n\n  // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n  attr(root.element, 'aria-labelledby', `filepond--drop-label-${props.id}`);\n\n  // set configurable props\n  setAcceptedFileTypes({\n    root,\n    action: {\n      value: root.query('GET_ACCEPTED_FILE_TYPES')\n    }\n  });\n  toggleAllowMultiple({\n    root,\n    action: {\n      value: root.query('GET_ALLOW_MULTIPLE')\n    }\n  });\n  toggleDirectoryFilter({\n    root,\n    action: {\n      value: root.query('GET_ALLOW_DIRECTORIES_ONLY')\n    }\n  });\n  toggleDisabled({\n    root\n  });\n  toggleRequired({\n    root,\n    action: {\n      value: root.query('GET_REQUIRED')\n    }\n  });\n  setCaptureMethod({\n    root,\n    action: {\n      value: root.query('GET_CAPTURE_METHOD')\n    }\n  });\n\n  // handle changes to the input field\n  root.ref.handleChange = e => {\n    if (!root.element.value) {\n      return;\n    }\n\n    // extract files and move value of webkitRelativePath path to _relativePath\n    const files = Array.from(root.element.files).map(file => {\n      file._relativePath = file.webkitRelativePath;\n      return file;\n    });\n\n    // we add a little delay so the OS file select window can move out of the way before we add our file\n    setTimeout(() => {\n      // load files\n      props.onload(files);\n\n      // reset input, it's just for exposing a method to drop files, should not retain any state\n      resetFileInput(root.element);\n    }, 250);\n  };\n  root.element.addEventListener('change', root.ref.handleChange);\n};\nconst setAcceptedFileTypes = ({\n  root,\n  action\n}) => {\n  if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;\n  attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n};\nconst toggleAllowMultiple = ({\n  root,\n  action\n}) => {\n  attrToggle(root.element, 'multiple', action.value);\n};\nconst toggleDirectoryFilter = ({\n  root,\n  action\n}) => {\n  attrToggle(root.element, 'webkitdirectory', action.value);\n};\nconst toggleDisabled = ({\n  root\n}) => {\n  const isDisabled = root.query('GET_DISABLED');\n  const doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n  const disableField = isDisabled || !doesAllowBrowse;\n  attrToggle(root.element, 'disabled', disableField);\n};\nconst toggleRequired = ({\n  root,\n  action\n}) => {\n  // want to remove required, always possible\n  if (!action.value) {\n    attrToggle(root.element, 'required', false);\n  }\n  // if want to make required, only possible when zero items\n  else if (root.query('GET_TOTAL_ITEMS') === 0) {\n    attrToggle(root.element, 'required', true);\n  }\n};\nconst setCaptureMethod = ({\n  root,\n  action\n}) => {\n  attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n};\nconst updateRequiredStatus = ({\n  root\n}) => {\n  const {\n    element\n  } = root;\n  // always remove the required attribute when more than zero items\n  if (root.query('GET_TOTAL_ITEMS') > 0) {\n    attrToggle(element, 'required', false);\n    attrToggle(element, 'name', false);\n  } else {\n    // add name attribute\n    attrToggle(element, 'name', true, root.query('GET_NAME'));\n\n    // remove any validation messages\n    const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (shouldCheckValidity) {\n      element.setCustomValidity('');\n    }\n\n    // we only add required if the field has been deemed required\n    if (root.query('GET_REQUIRED')) {\n      attrToggle(element, 'required', true);\n    }\n  }\n};\nconst updateFieldValidityStatus = ({\n  root\n}) => {\n  const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n  if (!shouldCheckValidity) return;\n  root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n};\nconst browser = createView({\n  tag: 'input',\n  name: 'browser',\n  ignoreRect: true,\n  ignoreRectUpdate: true,\n  attributes: {\n    type: 'file'\n  },\n  create: create$a,\n  destroy: ({\n    root\n  }) => {\n    root.element.removeEventListener('change', root.ref.handleChange);\n  },\n  write: createRoute({\n    DID_LOAD_ITEM: updateRequiredStatus,\n    DID_REMOVE_ITEM: updateRequiredStatus,\n    DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n    DID_SET_DISABLED: toggleDisabled,\n    DID_SET_ALLOW_BROWSE: toggleDisabled,\n    DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,\n    DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n    DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n    DID_SET_CAPTURE_METHOD: setCaptureMethod,\n    DID_SET_REQUIRED: toggleRequired\n  })\n});\nconst Key = {\n  ENTER: 13,\n  SPACE: 32\n};\nconst create$b = ({\n  root,\n  props\n}) => {\n  // create the label and link it to the file browser\n  const label = createElement$1('label');\n  attr(label, 'for', `filepond--browser-${props.id}`);\n\n  // use for labeling file input (aria-labelledby on file input)\n  attr(label, 'id', `filepond--drop-label-${props.id}`);\n\n  // handle keys\n  root.ref.handleKeyDown = e => {\n    const isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n    if (!isActivationKey) return;\n    // stops from triggering the element a second time\n    e.preventDefault();\n\n    // click link (will then in turn activate file input)\n    root.ref.label.click();\n  };\n  root.ref.handleClick = e => {\n    const isLabelClick = e.target === label || label.contains(e.target);\n\n    // don't want to click twice\n    if (isLabelClick) return;\n\n    // click link (will then in turn activate file input)\n    root.ref.label.click();\n  };\n\n  // attach events\n  label.addEventListener('keydown', root.ref.handleKeyDown);\n  root.element.addEventListener('click', root.ref.handleClick);\n\n  // update\n  updateLabelValue(label, props.caption);\n\n  // add!\n  root.appendChild(label);\n  root.ref.label = label;\n};\nconst updateLabelValue = (label, value) => {\n  label.innerHTML = value;\n  const clickable = label.querySelector('.filepond--label-action');\n  if (clickable) {\n    attr(clickable, 'tabindex', '0');\n  }\n  return value;\n};\nconst dropLabel = createView({\n  name: 'drop-label',\n  ignoreRect: true,\n  create: create$b,\n  destroy: ({\n    root\n  }) => {\n    root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);\n    root.element.removeEventListener('click', root.ref.handleClick);\n  },\n  write: createRoute({\n    DID_SET_LABEL_IDLE: ({\n      root,\n      action\n    }) => {\n      updateLabelValue(root.ref.label, action.value);\n    }\n  }),\n  mixins: {\n    styles: ['opacity', 'translateX', 'translateY'],\n    animations: {\n      opacity: {\n        type: 'tween',\n        duration: 150\n      },\n      translateX: 'spring',\n      translateY: 'spring'\n    }\n  }\n});\nconst blob = createView({\n  name: 'drip-blob',\n  ignoreRect: true,\n  mixins: {\n    styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n    animations: {\n      scaleX: 'spring',\n      scaleY: 'spring',\n      translateX: 'spring',\n      translateY: 'spring',\n      opacity: {\n        type: 'tween',\n        duration: 250\n      }\n    }\n  }\n});\nconst addBlob = ({\n  root\n}) => {\n  const centerX = root.rect.element.width * 0.5;\n  const centerY = root.rect.element.height * 0.5;\n  root.ref.blob = root.appendChildView(root.createChildView(blob, {\n    opacity: 0,\n    scaleX: 2.5,\n    scaleY: 2.5,\n    translateX: centerX,\n    translateY: centerY\n  }));\n};\nconst moveBlob = ({\n  root,\n  action\n}) => {\n  if (!root.ref.blob) {\n    addBlob({\n      root\n    });\n    return;\n  }\n  root.ref.blob.translateX = action.position.scopeLeft;\n  root.ref.blob.translateY = action.position.scopeTop;\n  root.ref.blob.scaleX = 1;\n  root.ref.blob.scaleY = 1;\n  root.ref.blob.opacity = 1;\n};\nconst hideBlob = ({\n  root\n}) => {\n  if (!root.ref.blob) {\n    return;\n  }\n  root.ref.blob.opacity = 0;\n};\nconst explodeBlob = ({\n  root\n}) => {\n  if (!root.ref.blob) {\n    return;\n  }\n  root.ref.blob.scaleX = 2.5;\n  root.ref.blob.scaleY = 2.5;\n  root.ref.blob.opacity = 0;\n};\nconst write$7 = ({\n  root,\n  props,\n  actions\n}) => {\n  route$4({\n    root,\n    props,\n    actions\n  });\n  const {\n    blob\n  } = root.ref;\n  if (actions.length === 0 && blob && blob.opacity === 0) {\n    root.removeChildView(blob);\n    root.ref.blob = null;\n  }\n};\nconst route$4 = createRoute({\n  DID_DRAG: moveBlob,\n  DID_DROP: explodeBlob,\n  DID_END_DRAG: hideBlob\n});\nconst drip = createView({\n  ignoreRect: true,\n  ignoreRectUpdate: true,\n  name: 'drip',\n  write: write$7\n});\nconst setInputFiles = (element, files) => {\n  try {\n    // Create a DataTransfer instance and add a newly created file\n    const dataTransfer = new DataTransfer();\n    files.forEach(file => {\n      if (file instanceof File) {\n        dataTransfer.items.add(file);\n      } else {\n        dataTransfer.items.add(new File([file], file.name, {\n          type: file.type\n        }));\n      }\n    });\n\n    // Assign the DataTransfer files list to the file input\n    element.files = dataTransfer.files;\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\nconst create$c = ({\n  root\n}) => {\n  root.ref.fields = {};\n  const legend = document.createElement('legend');\n  legend.textContent = 'Files';\n  root.element.appendChild(legend);\n};\nconst getField = (root, id) => root.ref.fields[id];\nconst syncFieldPositionsWithItems = root => {\n  root.query('GET_ACTIVE_ITEMS').forEach(item => {\n    if (!root.ref.fields[item.id]) return;\n    root.element.appendChild(root.ref.fields[item.id]);\n  });\n};\nconst didReorderItems = ({\n  root\n}) => syncFieldPositionsWithItems(root);\nconst didAddItem = ({\n  root,\n  action\n}) => {\n  const fileItem = root.query('GET_ITEM', action.id);\n  const isLocalFile = fileItem.origin === FileOrigin.LOCAL;\n  const shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');\n  const dataContainer = createElement$1('input');\n  dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';\n  dataContainer.name = root.query('GET_NAME');\n  root.ref.fields[action.id] = dataContainer;\n  syncFieldPositionsWithItems(root);\n};\nconst didLoadItem$1 = ({\n  root,\n  action\n}) => {\n  const field = getField(root, action.id);\n  if (!field) return;\n\n  // store server ref in hidden input\n  if (action.serverFileReference !== null) field.value = action.serverFileReference;\n\n  // store file item in file input\n  if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n  const fileItem = root.query('GET_ITEM', action.id);\n  setInputFiles(field, [fileItem.file]);\n};\nconst didPrepareOutput = ({\n  root,\n  action\n}) => {\n  // this timeout pushes the handler after 'load'\n  if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n  setTimeout(() => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    setInputFiles(field, [action.file]);\n  }, 0);\n};\nconst didSetDisabled = ({\n  root\n}) => {\n  root.element.disabled = root.query('GET_DISABLED');\n};\nconst didRemoveItem = ({\n  root,\n  action\n}) => {\n  const field = getField(root, action.id);\n  if (!field) return;\n  if (field.parentNode) field.parentNode.removeChild(field);\n  delete root.ref.fields[action.id];\n};\n\n// only runs for server files. will refuse to update the value if the field\n// is a file field\nconst didDefineValue = ({\n  root,\n  action\n}) => {\n  const field = getField(root, action.id);\n  if (!field) return;\n  if (action.value === null) {\n    // clear field value\n    field.removeAttribute('value');\n  } else {\n    // set field value\n    if (field.type != 'file') {\n      field.value = action.value;\n    }\n  }\n  syncFieldPositionsWithItems(root);\n};\nconst write$8 = createRoute({\n  DID_SET_DISABLED: didSetDisabled,\n  DID_ADD_ITEM: didAddItem,\n  DID_LOAD_ITEM: didLoadItem$1,\n  DID_REMOVE_ITEM: didRemoveItem,\n  DID_DEFINE_VALUE: didDefineValue,\n  DID_PREPARE_OUTPUT: didPrepareOutput,\n  DID_REORDER_ITEMS: didReorderItems,\n  DID_SORT_ITEMS: didReorderItems\n});\nconst data = createView({\n  tag: 'fieldset',\n  name: 'data',\n  create: create$c,\n  write: write$8,\n  ignoreRect: true\n});\nconst getRootNode = element => 'getRootNode' in element ? element.getRootNode() : document;\nconst images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\nconst text$1 = ['css', 'csv', 'html', 'txt'];\nconst map = {\n  zip: 'zip|compressed',\n  epub: 'application/epub+zip'\n};\nconst guesstimateMimeType = (extension = '') => {\n  extension = extension.toLowerCase();\n  if (images.includes(extension)) {\n    return 'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension);\n  }\n  if (text$1.includes(extension)) {\n    return 'text/' + extension;\n  }\n  return map[extension] || '';\n};\nconst requestDataTransferItems = dataTransfer => new Promise((resolve, reject) => {\n  // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)\n  const links = getLinks(dataTransfer);\n  if (links.length && !hasFiles(dataTransfer)) {\n    return resolve(links);\n  }\n  // try to get files from the transfer\n  getFiles(dataTransfer).then(resolve);\n});\n\n/**\n * Test if datatransfer has files\n */\nconst hasFiles = dataTransfer => {\n  if (dataTransfer.files) return dataTransfer.files.length > 0;\n  return false;\n};\n\n/**\n * Extracts files from a DataTransfer object\n */\nconst getFiles = dataTransfer => new Promise((resolve, reject) => {\n  // get the transfer items as promises\n  const promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : []\n\n  // only keep file system items (files and directories)\n  ).filter(item => isFileSystemItem(item))\n\n  // map each item to promise\n  .map(item => getFilesFromItem(item));\n\n  // if is empty, see if we can extract some info from the files property as a fallback\n  if (!promisedFiles.length) {\n    // TODO: test for directories (should not be allowed)\n    // Use FileReader, problem is that the files property gets lost in the process\n    resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n    return;\n  }\n\n  // done!\n  Promise.all(promisedFiles).then(returnedFileGroups => {\n    // flatten groups\n    const files = [];\n    returnedFileGroups.forEach(group => {\n      files.push.apply(files, group);\n    });\n\n    // done (filter out empty files)!\n    resolve(files.filter(file => file).map(file => {\n      if (!file._relativePath) file._relativePath = file.webkitRelativePath;\n      return file;\n    }));\n  }).catch(console.error);\n});\nconst isFileSystemItem = item => {\n  if (isEntry(item)) {\n    const entry = getAsEntry(item);\n    if (entry) {\n      return entry.isFile || entry.isDirectory;\n    }\n  }\n  return item.kind === 'file';\n};\nconst getFilesFromItem = item => new Promise((resolve, reject) => {\n  if (isDirectoryEntry(item)) {\n    getFilesInDirectory(getAsEntry(item)).then(resolve).catch(reject);\n    return;\n  }\n  resolve([item.getAsFile()]);\n});\nconst getFilesInDirectory = entry => new Promise((resolve, reject) => {\n  const files = [];\n\n  // the total entries to read\n  let dirCounter = 0;\n  let fileCounter = 0;\n  const resolveIfDone = () => {\n    if (fileCounter === 0 && dirCounter === 0) {\n      resolve(files);\n    }\n  };\n\n  // the recursive function\n  const readEntries = dirEntry => {\n    dirCounter++;\n    const directoryReader = dirEntry.createReader();\n\n    // directories are returned in batches, we need to process all batches before we're done\n    const readBatch = () => {\n      directoryReader.readEntries(entries => {\n        if (entries.length === 0) {\n          dirCounter--;\n          resolveIfDone();\n          return;\n        }\n        entries.forEach(entry => {\n          // recursively read more directories\n          if (entry.isDirectory) {\n            readEntries(entry);\n          } else {\n            // read as file\n            fileCounter++;\n            entry.file(file => {\n              const correctedFile = correctMissingFileType(file);\n              if (entry.fullPath) correctedFile._relativePath = entry.fullPath;\n              files.push(correctedFile);\n              fileCounter--;\n              resolveIfDone();\n            });\n          }\n        });\n\n        // try to get next batch of files\n        readBatch();\n      }, reject);\n    };\n\n    // read first batch of files\n    readBatch();\n  };\n\n  // go!\n  readEntries(entry);\n});\nconst correctMissingFileType = file => {\n  if (file.type.length) return file;\n  const date = file.lastModifiedDate;\n  const name = file.name;\n  const type = guesstimateMimeType(getExtensionFromFilename(file.name));\n  if (!type.length) return file;\n  file = file.slice(0, file.size, type);\n  file.name = name;\n  file.lastModifiedDate = date;\n  return file;\n};\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\nconst isEntry = item => 'webkitGetAsEntry' in item;\nconst getAsEntry = item => item.webkitGetAsEntry();\n\n/**\n * Extracts links from a DataTransfer object\n */\nconst getLinks = dataTransfer => {\n  let links = [];\n  try {\n    // look in meta data property\n    links = getLinksFromTransferMetaData(dataTransfer);\n    if (links.length) {\n      return links;\n    }\n    links = getLinksFromTransferURLData(dataTransfer);\n  } catch (e) {\n    // nope nope nope (probably IE trouble)\n  }\n  return links;\n};\nconst getLinksFromTransferURLData = dataTransfer => {\n  let data = dataTransfer.getData('url');\n  if (typeof data === 'string' && data.length) {\n    return [data];\n  }\n  return [];\n};\nconst getLinksFromTransferMetaData = dataTransfer => {\n  let data = dataTransfer.getData('text/html');\n  if (typeof data === 'string' && data.length) {\n    const matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n    if (matches) {\n      return [matches[1]];\n    }\n  }\n  return [];\n};\nconst dragNDropObservers = [];\nconst eventPosition = e => ({\n  pageLeft: e.pageX,\n  pageTop: e.pageY,\n  scopeLeft: e.offsetX || e.layerX,\n  scopeTop: e.offsetY || e.layerY\n});\nconst createDragNDropClient = (element, scopeToObserve, filterElement) => {\n  const observer = getDragNDropObserver(scopeToObserve);\n  const client = {\n    element,\n    filterElement,\n    state: null,\n    ondrop: () => {},\n    onenter: () => {},\n    ondrag: () => {},\n    onexit: () => {},\n    onload: () => {},\n    allowdrop: () => {}\n  };\n  client.destroy = observer.addListener(client);\n  return client;\n};\nconst getDragNDropObserver = element => {\n  // see if already exists, if so, return\n  const observer = dragNDropObservers.find(item => item.element === element);\n  if (observer) {\n    return observer;\n  }\n\n  // create new observer, does not yet exist for this element\n  const newObserver = createDragNDropObserver(element);\n  dragNDropObservers.push(newObserver);\n  return newObserver;\n};\nconst createDragNDropObserver = element => {\n  const clients = [];\n  const routes = {\n    dragenter,\n    dragover,\n    dragleave,\n    drop\n  };\n  const handlers = {};\n  forin(routes, (event, createHandler) => {\n    handlers[event] = createHandler(element, clients);\n    element.addEventListener(event, handlers[event], false);\n  });\n  const observer = {\n    element,\n    addListener: client => {\n      // add as client\n      clients.push(client);\n\n      // return removeListener function\n      return () => {\n        // remove client\n        clients.splice(clients.indexOf(client), 1);\n\n        // if no more clients, clean up observer\n        if (clients.length === 0) {\n          dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n          forin(routes, event => {\n            element.removeEventListener(event, handlers[event], false);\n          });\n        }\n      };\n    }\n  };\n  return observer;\n};\nconst elementFromPoint = (root, point) => {\n  if (!('elementFromPoint' in root)) {\n    root = document;\n  }\n  return root.elementFromPoint(point.x, point.y);\n};\nconst isEventTarget = (e, target) => {\n  // get root\n  const root = getRootNode(target);\n\n  // get element at position\n  // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n  const elementAtPosition = elementFromPoint(root, {\n    x: e.pageX - window.pageXOffset,\n    y: e.pageY - window.pageYOffset\n  });\n\n  // test if target is the element or if one of its children is\n  return elementAtPosition === target || target.contains(elementAtPosition);\n};\nlet initialTarget = null;\nconst setDropEffect = (dataTransfer, effect) => {\n  // is in try catch as IE11 will throw error if not\n  try {\n    dataTransfer.dropEffect = effect;\n  } catch (e) {}\n};\nconst dragenter = (root, clients) => e => {\n  e.preventDefault();\n  initialTarget = e.target;\n  clients.forEach(client => {\n    const {\n      element,\n      onenter\n    } = client;\n    if (isEventTarget(e, element)) {\n      client.state = 'enter';\n\n      // fire enter event\n      onenter(eventPosition(e));\n    }\n  });\n};\nconst dragover = (root, clients) => e => {\n  e.preventDefault();\n  const dataTransfer = e.dataTransfer;\n  requestDataTransferItems(dataTransfer).then(items => {\n    let overDropTarget = false;\n    clients.some(client => {\n      const {\n        filterElement,\n        element,\n        onenter,\n        onexit,\n        ondrag,\n        allowdrop\n      } = client;\n\n      // by default we can drop\n      setDropEffect(dataTransfer, 'copy');\n\n      // allow transfer of these items\n      const allowsTransfer = allowdrop(items);\n\n      // only used when can be dropped on page\n      if (!allowsTransfer) {\n        setDropEffect(dataTransfer, 'none');\n        return;\n      }\n\n      // targetting this client\n      if (isEventTarget(e, element)) {\n        overDropTarget = true;\n\n        // had no previous state, means we are entering this client\n        if (client.state === null) {\n          client.state = 'enter';\n          onenter(eventPosition(e));\n          return;\n        }\n\n        // now over element (no matter if it allows the drop or not)\n        client.state = 'over';\n\n        // needs to allow transfer\n        if (filterElement && !allowsTransfer) {\n          setDropEffect(dataTransfer, 'none');\n          return;\n        }\n\n        // dragging\n        ondrag(eventPosition(e));\n      } else {\n        // should be over an element to drop\n        if (filterElement && !overDropTarget) {\n          setDropEffect(dataTransfer, 'none');\n        }\n\n        // might have just left this client?\n        if (client.state) {\n          client.state = null;\n          onexit(eventPosition(e));\n        }\n      }\n    });\n  });\n};\nconst drop = (root, clients) => e => {\n  e.preventDefault();\n  const dataTransfer = e.dataTransfer;\n  requestDataTransferItems(dataTransfer).then(items => {\n    clients.forEach(client => {\n      const {\n        filterElement,\n        element,\n        ondrop,\n        onexit,\n        allowdrop\n      } = client;\n      client.state = null;\n\n      // if we're filtering on element we need to be over the element to drop\n      if (filterElement && !isEventTarget(e, element)) return;\n\n      // no transfer for this client\n      if (!allowdrop(items)) return onexit(eventPosition(e));\n\n      // we can drop these items on this client\n      ondrop(eventPosition(e), items);\n    });\n  });\n};\nconst dragleave = (root, clients) => e => {\n  if (initialTarget !== e.target) {\n    return;\n  }\n  clients.forEach(client => {\n    const {\n      onexit\n    } = client;\n    client.state = null;\n    onexit(eventPosition(e));\n  });\n};\nconst createHopper = (scope, validateItems, options) => {\n  // is now hopper scope\n  scope.classList.add('filepond--hopper');\n\n  // shortcuts\n  const {\n    catchesDropsOnPage,\n    requiresDropOnElement,\n    filterItems = items => items\n  } = options;\n\n  // create a dnd client\n  const client = createDragNDropClient(scope, catchesDropsOnPage ? document.documentElement : scope, requiresDropOnElement);\n\n  // current client state\n  let lastState = '';\n  let currentState = '';\n\n  // determines if a file may be dropped\n  client.allowdrop = items => {\n    // TODO: if we can, throw error to indicate the items cannot by dropped\n\n    return validateItems(filterItems(items));\n  };\n  client.ondrop = (position, items) => {\n    const filteredItems = filterItems(items);\n    if (!validateItems(filteredItems)) {\n      api.ondragend(position);\n      return;\n    }\n    currentState = 'drag-drop';\n    api.onload(filteredItems, position);\n  };\n  client.ondrag = position => {\n    api.ondrag(position);\n  };\n  client.onenter = position => {\n    currentState = 'drag-over';\n    api.ondragstart(position);\n  };\n  client.onexit = position => {\n    currentState = 'drag-exit';\n    api.ondragend(position);\n  };\n  const api = {\n    updateHopperState: () => {\n      if (lastState !== currentState) {\n        scope.dataset.hopperState = currentState;\n        lastState = currentState;\n      }\n    },\n    onload: () => {},\n    ondragstart: () => {},\n    ondrag: () => {},\n    ondragend: () => {},\n    destroy: () => {\n      // destroy client\n      client.destroy();\n    }\n  };\n  return api;\n};\nlet listening = false;\nconst listeners$1 = [];\nconst handlePaste = e => {\n  // if is pasting in input or textarea and the target is outside of a filepond scope, ignore\n  const activeEl = document.activeElement;\n  const isActiveElementEditable = activeEl && (/textarea|input/i.test(activeEl.nodeName) || activeEl.getAttribute('contenteditable') === 'true');\n  if (isActiveElementEditable) {\n    // test textarea or input is contained in filepond root\n    let inScope = false;\n    let element = activeEl;\n    while (element !== document.body) {\n      if (element.classList.contains('filepond--root')) {\n        inScope = true;\n        break;\n      }\n      element = element.parentNode;\n    }\n    if (!inScope) return;\n  }\n  requestDataTransferItems(e.clipboardData).then(files => {\n    // no files received\n    if (!files.length) {\n      return;\n    }\n\n    // notify listeners of received files\n    listeners$1.forEach(listener => listener(files));\n  });\n};\nconst listen = cb => {\n  // can't add twice\n  if (listeners$1.includes(cb)) {\n    return;\n  }\n\n  // add initial listener\n  listeners$1.push(cb);\n\n  // setup paste listener for entire page\n  if (listening) {\n    return;\n  }\n  listening = true;\n  document.addEventListener('paste', handlePaste);\n};\nconst unlisten = listener => {\n  arrayRemove(listeners$1, listeners$1.indexOf(listener));\n\n  // clean up\n  if (listeners$1.length === 0) {\n    document.removeEventListener('paste', handlePaste);\n    listening = false;\n  }\n};\nconst createPaster = () => {\n  const cb = files => {\n    api.onload(files);\n  };\n  const api = {\n    destroy: () => {\n      unlisten(cb);\n    },\n    onload: () => {}\n  };\n  listen(cb);\n  return api;\n};\n\n/**\n * Creates the file view\n */\nconst create$d = ({\n  root,\n  props\n}) => {\n  root.element.id = `filepond--assistant-${props.id}`;\n  attr(root.element, 'role', 'alert');\n  attr(root.element, 'aria-live', 'polite');\n  attr(root.element, 'aria-relevant', 'additions');\n};\nlet addFilesNotificationTimeout = null;\nlet notificationClearTimeout = null;\nconst filenames = [];\nconst assist = (root, message) => {\n  root.element.textContent = message;\n};\nconst clear$1 = root => {\n  root.element.textContent = '';\n};\nconst listModified = (root, filename, label) => {\n  const total = root.query('GET_TOTAL_ITEMS');\n  assist(root, `${label} ${filename}, ${total} ${total === 1 ? root.query('GET_LABEL_FILE_COUNT_SINGULAR') : root.query('GET_LABEL_FILE_COUNT_PLURAL')}`);\n\n  // clear group after set amount of time so the status is not read twice\n  clearTimeout(notificationClearTimeout);\n  notificationClearTimeout = setTimeout(() => {\n    clear$1(root);\n  }, 1500);\n};\nconst isUsingFilePond = root => root.element.parentNode.contains(document.activeElement);\nconst itemAdded = ({\n  root,\n  action\n}) => {\n  if (!isUsingFilePond(root)) {\n    return;\n  }\n  root.element.textContent = '';\n  const item = root.query('GET_ITEM', action.id);\n  filenames.push(item.filename);\n  clearTimeout(addFilesNotificationTimeout);\n  addFilesNotificationTimeout = setTimeout(() => {\n    listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n    filenames.length = 0;\n  }, 750);\n};\nconst itemRemoved = ({\n  root,\n  action\n}) => {\n  if (!isUsingFilePond(root)) {\n    return;\n  }\n  const item = action.item;\n  listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n};\nconst itemProcessed = ({\n  root,\n  action\n}) => {\n  // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n  const item = root.query('GET_ITEM', action.id);\n  const filename = item.filename;\n  const label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n  assist(root, `${filename} ${label}`);\n};\nconst itemProcessedUndo = ({\n  root,\n  action\n}) => {\n  const item = root.query('GET_ITEM', action.id);\n  const filename = item.filename;\n  const label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n  assist(root, `${filename} ${label}`);\n};\nconst itemError = ({\n  root,\n  action\n}) => {\n  const item = root.query('GET_ITEM', action.id);\n  const filename = item.filename;\n\n  // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n  assist(root, `${action.status.main} ${filename} ${action.status.sub}`);\n};\nconst assistant = createView({\n  create: create$d,\n  ignoreRect: true,\n  ignoreRectUpdate: true,\n  write: createRoute({\n    DID_LOAD_ITEM: itemAdded,\n    DID_REMOVE_ITEM: itemRemoved,\n    DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n    DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n    DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n    DID_THROW_ITEM_REMOVE_ERROR: itemError,\n    DID_THROW_ITEM_LOAD_ERROR: itemError,\n    DID_THROW_ITEM_INVALID: itemError,\n    DID_THROW_ITEM_PROCESSING_ERROR: itemError\n  }),\n  tag: 'span',\n  name: 'assistant'\n});\nconst toCamels = (string, separator = '-') => string.replace(new RegExp(`${separator}.`, 'g'), sub => sub.charAt(1).toUpperCase());\nconst debounce = (func, interval = 16, immidiateOnly = true) => {\n  let last = Date.now();\n  let timeout = null;\n  return (...args) => {\n    clearTimeout(timeout);\n    const dist = Date.now() - last;\n    const fn = () => {\n      last = Date.now();\n      func(...args);\n    };\n    if (dist < interval) {\n      // we need to delay by the difference between interval and dist\n      // for example: if distance is 10 ms and interval is 16 ms,\n      // we need to wait an additional 6ms before calling the function)\n      if (!immidiateOnly) {\n        timeout = setTimeout(fn, interval - dist);\n      }\n    } else {\n      // go!\n      fn();\n    }\n  };\n};\nconst MAX_FILES_LIMIT = 1000000;\nconst prevent = e => e.preventDefault();\nconst create$e = ({\n  root,\n  props\n}) => {\n  // Add id\n  const id = root.query('GET_ID');\n  if (id) {\n    root.element.id = id;\n  }\n\n  // Add className\n  const className = root.query('GET_CLASS_NAME');\n  if (className) {\n    className.split(' ').filter(name => name.length).forEach(name => {\n      root.element.classList.add(name);\n    });\n  }\n\n  // Field label\n  root.ref.label = root.appendChildView(root.createChildView(dropLabel, {\n    ...props,\n    translateY: null,\n    caption: root.query('GET_LABEL_IDLE')\n  }));\n\n  // List of items\n  root.ref.list = root.appendChildView(root.createChildView(listScroller, {\n    translateY: null\n  }));\n\n  // Background panel\n  root.ref.panel = root.appendChildView(root.createChildView(panel, {\n    name: 'panel-root'\n  }));\n\n  // Assistant notifies assistive tech when content changes\n  root.ref.assistant = root.appendChildView(root.createChildView(assistant, {\n    ...props\n  }));\n\n  // Data\n  root.ref.data = root.appendChildView(root.createChildView(data, {\n    ...props\n  }));\n\n  // Measure (tests if fixed height was set)\n  // DOCTYPE needs to be set for this to work\n  root.ref.measure = createElement$1('div');\n  root.ref.measure.style.height = '100%';\n  root.element.appendChild(root.ref.measure);\n\n  // information on the root height or fixed height status\n  root.ref.bounds = null;\n\n  // apply initial style properties\n  root.query('GET_STYLES').filter(style => !isEmpty(style.value)).map(({\n    name,\n    value\n  }) => {\n    root.element.dataset[name] = value;\n  });\n\n  // determine if width changed\n  root.ref.widthPrevious = null;\n  root.ref.widthUpdated = debounce(() => {\n    root.ref.updateHistory = [];\n    root.dispatch('DID_RESIZE_ROOT');\n  }, 250);\n\n  // history of updates\n  root.ref.previousAspectRatio = null;\n  root.ref.updateHistory = [];\n\n  // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)\n  const canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;\n  const hasPointerEvents = 'PointerEvent' in window;\n  if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {\n    root.element.addEventListener('touchmove', prevent, {\n      passive: false\n    });\n    root.element.addEventListener('gesturestart', prevent);\n  }\n\n  // add credits\n  const credits = root.query('GET_CREDITS');\n  const hasCredits = credits.length === 2;\n  if (hasCredits) {\n    const frag = document.createElement('a');\n    frag.className = 'filepond--credits';\n    frag.href = credits[0];\n    frag.tabIndex = -1;\n    frag.target = '_blank';\n    frag.rel = 'noopener noreferrer nofollow';\n    frag.textContent = credits[1];\n    root.element.appendChild(frag);\n    root.ref.credits = frag;\n  }\n};\nconst write$9 = ({\n  root,\n  props,\n  actions\n}) => {\n  // route actions\n  route$5({\n    root,\n    props,\n    actions\n  });\n\n  // apply style properties\n  actions.filter(action => /^DID_SET_STYLE_/.test(action.type)).filter(action => !isEmpty(action.data.value)).map(({\n    type,\n    data\n  }) => {\n    const name = toCamels(type.substring(8).toLowerCase(), '_');\n    root.element.dataset[name] = data.value;\n    root.invalidateLayout();\n  });\n  if (root.rect.element.hidden) return;\n  if (root.rect.element.width !== root.ref.widthPrevious) {\n    root.ref.widthPrevious = root.rect.element.width;\n    root.ref.widthUpdated();\n  }\n\n  // get box bounds, we do this only once\n  let bounds = root.ref.bounds;\n  if (!bounds) {\n    bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);\n\n    // destroy measure element\n    root.element.removeChild(root.ref.measure);\n    root.ref.measure = null;\n  }\n\n  // get quick references to various high level parts of the upload tool\n  const {\n    hopper,\n    label,\n    list,\n    panel\n  } = root.ref;\n\n  // sets correct state to hopper scope\n  if (hopper) {\n    hopper.updateHopperState();\n  }\n\n  // bool to indicate if we're full or not\n  const aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n  const isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n  const totalItems = root.query('GET_TOTAL_ITEMS');\n  const maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n  const atMaxCapacity = totalItems === maxItems;\n\n  // action used to add item\n  const addAction = actions.find(action => action.type === 'DID_ADD_ITEM');\n\n  // if reached max capacity and we've just reached it\n  if (atMaxCapacity && addAction) {\n    // get interaction type\n    const interactionMethod = addAction.data.interactionMethod;\n\n    // hide label\n    label.opacity = 0;\n    if (isMultiItem) {\n      label.translateY = -40;\n    } else {\n      if (interactionMethod === InteractionMethod.API) {\n        label.translateX = 40;\n      } else if (interactionMethod === InteractionMethod.BROWSE) {\n        label.translateY = 40;\n      } else {\n        label.translateY = 30;\n      }\n    }\n  } else if (!atMaxCapacity) {\n    label.opacity = 1;\n    label.translateX = 0;\n    label.translateY = 0;\n  }\n  const listItemMargin = calculateListItemMargin(root);\n  const listHeight = calculateListHeight(root);\n  const labelHeight = label.rect.element.height;\n  const currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n  const listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n  const listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n  const visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n  const boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;\n\n  // link list to label bottom position\n  list.translateY = Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n  if (aspectRatio) {\n    // fixed aspect ratio\n\n    // calculate height based on width\n    const width = root.rect.element.width;\n    const height = width * aspectRatio;\n\n    // clear history if aspect ratio has changed\n    if (aspectRatio !== root.ref.previousAspectRatio) {\n      root.ref.previousAspectRatio = aspectRatio;\n      root.ref.updateHistory = [];\n    }\n\n    // remember this width\n    const history = root.ref.updateHistory;\n    history.push(width);\n    const MAX_BOUNCES = 2;\n    if (history.length > MAX_BOUNCES * 2) {\n      const l = history.length;\n      const bottom = l - 10;\n      let bounces = 0;\n      for (let i = l; i >= bottom; i--) {\n        if (history[i] === history[i - 2]) {\n          bounces++;\n        }\n        if (bounces >= MAX_BOUNCES) {\n          // dont adjust height\n          return;\n        }\n      }\n    }\n\n    // fix height of panel so it adheres to aspect ratio\n    panel.scalable = false;\n    panel.height = height;\n\n    // available height for list\n    const listAvailableHeight =\n    // the height of the panel minus the label height\n    height - currentLabelHeight - (\n    // the room we leave open between the end of the list and the panel bottom\n    listMarginBottom - listItemMargin.bottom) - (\n    // if we're full we need to leave some room between the top of the panel and the list\n    atMaxCapacity ? listMarginTop : 0);\n    if (listHeight.visual > listAvailableHeight) {\n      list.overflow = listAvailableHeight;\n    } else {\n      list.overflow = null;\n    }\n\n    // set container bounds (so pushes siblings downwards)\n    root.height = height;\n  } else if (bounds.fixedHeight) {\n    // fixed height\n\n    // fix height of panel\n    panel.scalable = false;\n\n    // available height for list\n    const listAvailableHeight =\n    // the height of the panel minus the label height\n    bounds.fixedHeight - currentLabelHeight - (\n    // the room we leave open between the end of the list and the panel bottom\n    listMarginBottom - listItemMargin.bottom) - (\n    // if we're full we need to leave some room between the top of the panel and the list\n    atMaxCapacity ? listMarginTop : 0);\n\n    // set list height\n    if (listHeight.visual > listAvailableHeight) {\n      list.overflow = listAvailableHeight;\n    } else {\n      list.overflow = null;\n    }\n\n    // no need to set container bounds as these are handles by CSS fixed height\n  } else if (bounds.cappedHeight) {\n    // max-height\n\n    // not a fixed height panel\n    const isCappedHeight = visualHeight >= bounds.cappedHeight;\n    const panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n    panel.scalable = true;\n    panel.height = isCappedHeight ? panelHeight : panelHeight - listItemMargin.top - listItemMargin.bottom;\n\n    // available height for list\n    const listAvailableHeight =\n    // the height of the panel minus the label height\n    panelHeight - currentLabelHeight - (\n    // the room we leave open between the end of the list and the panel bottom\n    listMarginBottom - listItemMargin.bottom) - (\n    // if we're full we need to leave some room between the top of the panel and the list\n    atMaxCapacity ? listMarginTop : 0);\n\n    // set list height (if is overflowing)\n    if (visualHeight > bounds.cappedHeight && listHeight.visual > listAvailableHeight) {\n      list.overflow = listAvailableHeight;\n    } else {\n      list.overflow = null;\n    }\n\n    // set container bounds (so pushes siblings downwards)\n    root.height = Math.min(bounds.cappedHeight, boundsHeight - listItemMargin.top - listItemMargin.bottom);\n  } else {\n    // flexible height\n\n    // not a fixed height panel\n    const itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n    panel.scalable = true;\n    panel.height = Math.max(labelHeight, visualHeight - itemMargin);\n\n    // set container bounds (so pushes siblings downwards)\n    root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n  }\n\n  // move credits to bottom\n  if (root.ref.credits && panel.heightCurrent) root.ref.credits.style.transform = `translateY(${panel.heightCurrent}px)`;\n};\nconst calculateListItemMargin = root => {\n  const item = root.ref.list.childViews[0].childViews[0];\n  return item ? {\n    top: item.rect.element.marginTop,\n    bottom: item.rect.element.marginBottom\n  } : {\n    top: 0,\n    bottom: 0\n  };\n};\nconst calculateListHeight = root => {\n  let visual = 0;\n  let bounds = 0;\n\n  // get file list reference\n  const scrollList = root.ref.list;\n  const itemList = scrollList.childViews[0];\n  const visibleChildren = itemList.childViews.filter(child => child.rect.element.height);\n  const children = root.query('GET_ACTIVE_ITEMS').map(item => visibleChildren.find(child => child.id === item.id)).filter(item => item);\n\n  // no children, done!\n  if (children.length === 0) return {\n    visual,\n    bounds\n  };\n  const horizontalSpace = itemList.rect.element.width;\n  const dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);\n  const childRect = children[0].rect.element;\n  const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n  const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n  const itemWidth = childRect.width + itemHorizontalMargin;\n  const itemHeight = childRect.height + itemVerticalMargin;\n  const newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n  const removedItem = children.find(child => child.markedForRemoval && child.opacity < 0.45) ? -1 : 0;\n  const verticalItemCount = children.length + newItem + removedItem;\n  const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n  // stack\n  if (itemsPerRow === 1) {\n    children.forEach(item => {\n      const height = item.rect.element.height + itemVerticalMargin;\n      bounds += height;\n      visual += height * item.opacity;\n    });\n  }\n  // grid\n  else {\n    bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n    visual = bounds;\n  }\n  return {\n    visual,\n    bounds\n  };\n};\nconst calculateRootBoundingBoxHeight = root => {\n  const height = root.ref.measureHeight || null;\n  const cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n  const fixedHeight = height === 0 ? null : height;\n  return {\n    cappedHeight,\n    fixedHeight\n  };\n};\nconst exceedsMaxFiles = (root, items) => {\n  const allowReplace = root.query('GET_ALLOW_REPLACE');\n  const allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n  const totalItems = root.query('GET_TOTAL_ITEMS');\n  let maxItems = root.query('GET_MAX_FILES');\n\n  // total amount of items being dragged\n  const totalBrowseItems = items.length;\n\n  // if does not allow multiple items and dragging more than one item\n  if (!allowMultiple && totalBrowseItems > 1) {\n    root.dispatch('DID_THROW_MAX_FILES', {\n      source: items,\n      error: createResponse('warning', 0, 'Max files')\n    });\n    return true;\n  }\n\n  // limit max items to one if not allowed to drop multiple items\n  maxItems = allowMultiple ? maxItems : 1;\n  if (!allowMultiple && allowReplace) {\n    // There is only one item, so there is room to replace or add an item\n    return false;\n  }\n\n  // no more room?\n  const hasMaxItems = isInt(maxItems);\n  if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n    root.dispatch('DID_THROW_MAX_FILES', {\n      source: items,\n      error: createResponse('warning', 0, 'Max files')\n    });\n    return true;\n  }\n  return false;\n};\nconst getDragIndex = (list, children, position) => {\n  const itemList = list.childViews[0];\n  return getItemIndexByPosition(itemList, children, {\n    left: position.scopeLeft - itemList.rect.element.left,\n    top: position.scopeTop - (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop)\n  });\n};\n\n/**\n * Enable or disable file drop functionality\n */\nconst toggleDrop = root => {\n  const isAllowed = root.query('GET_ALLOW_DROP');\n  const isDisabled = root.query('GET_DISABLED');\n  const enabled = isAllowed && !isDisabled;\n  if (enabled && !root.ref.hopper) {\n    const hopper = createHopper(root.element, items => {\n      // allow quick validation of dropped items\n      const beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || (() => true);\n\n      // all items should be validated by all filters as valid\n      const dropValidation = root.query('GET_DROP_VALIDATION');\n      return dropValidation ? items.every(item => applyFilters('ALLOW_HOPPER_ITEM', item, {\n        query: root.query\n      }).every(result => result === true) && beforeDropFile(item)) : true;\n    }, {\n      filterItems: items => {\n        const ignoredFiles = root.query('GET_IGNORED_FILES');\n        return items.filter(item => {\n          if (isFile(item)) {\n            return !ignoredFiles.includes(item.name.toLowerCase());\n          }\n          return true;\n        });\n      },\n      catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n      requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT')\n    });\n    hopper.onload = (items, position) => {\n      // get item children elements and sort based on list sort\n      const list = root.ref.list.childViews[0];\n      const visibleChildren = list.childViews.filter(child => child.rect.element.height);\n      const children = root.query('GET_ACTIVE_ITEMS').map(item => visibleChildren.find(child => child.id === item.id)).filter(item => item);\n      applyFilterChain('ADD_ITEMS', items, {\n        dispatch: root.dispatch\n      }).then(queue => {\n        // these files don't fit so stop here\n        if (exceedsMaxFiles(root, queue)) return false;\n\n        // go\n        root.dispatch('ADD_ITEMS', {\n          items: queue,\n          index: getDragIndex(root.ref.list, children, position),\n          interactionMethod: InteractionMethod.DROP\n        });\n      });\n      root.dispatch('DID_DROP', {\n        position\n      });\n      root.dispatch('DID_END_DRAG', {\n        position\n      });\n    };\n    hopper.ondragstart = position => {\n      root.dispatch('DID_START_DRAG', {\n        position\n      });\n    };\n    hopper.ondrag = debounce(position => {\n      root.dispatch('DID_DRAG', {\n        position\n      });\n    });\n    hopper.ondragend = position => {\n      root.dispatch('DID_END_DRAG', {\n        position\n      });\n    };\n    root.ref.hopper = hopper;\n    root.ref.drip = root.appendChildView(root.createChildView(drip));\n  } else if (!enabled && root.ref.hopper) {\n    root.ref.hopper.destroy();\n    root.ref.hopper = null;\n    root.removeChildView(root.ref.drip);\n  }\n};\n\n/**\n * Enable or disable browse functionality\n */\nconst toggleBrowse = (root, props) => {\n  const isAllowed = root.query('GET_ALLOW_BROWSE');\n  const isDisabled = root.query('GET_DISABLED');\n  const enabled = isAllowed && !isDisabled;\n  if (enabled && !root.ref.browser) {\n    root.ref.browser = root.appendChildView(root.createChildView(browser, {\n      ...props,\n      onload: items => {\n        applyFilterChain('ADD_ITEMS', items, {\n          dispatch: root.dispatch\n        }).then(queue => {\n          // these files don't fit so stop here\n          if (exceedsMaxFiles(root, queue)) return false;\n\n          // add items!\n          root.dispatch('ADD_ITEMS', {\n            items: queue,\n            index: -1,\n            interactionMethod: InteractionMethod.BROWSE\n          });\n        });\n      }\n    }), 0);\n  } else if (!enabled && root.ref.browser) {\n    root.removeChildView(root.ref.browser);\n    root.ref.browser = null;\n  }\n};\n\n/**\n * Enable or disable paste functionality\n */\nconst togglePaste = root => {\n  const isAllowed = root.query('GET_ALLOW_PASTE');\n  const isDisabled = root.query('GET_DISABLED');\n  const enabled = isAllowed && !isDisabled;\n  if (enabled && !root.ref.paster) {\n    root.ref.paster = createPaster();\n    root.ref.paster.onload = items => {\n      applyFilterChain('ADD_ITEMS', items, {\n        dispatch: root.dispatch\n      }).then(queue => {\n        // these files don't fit so stop here\n        if (exceedsMaxFiles(root, queue)) return false;\n\n        // add items!\n        root.dispatch('ADD_ITEMS', {\n          items: queue,\n          index: -1,\n          interactionMethod: InteractionMethod.PASTE\n        });\n      });\n    };\n  } else if (!enabled && root.ref.paster) {\n    root.ref.paster.destroy();\n    root.ref.paster = null;\n  }\n};\n\n/**\n * Route actions\n */\nconst route$5 = createRoute({\n  DID_SET_ALLOW_BROWSE: ({\n    root,\n    props\n  }) => {\n    toggleBrowse(root, props);\n  },\n  DID_SET_ALLOW_DROP: ({\n    root\n  }) => {\n    toggleDrop(root);\n  },\n  DID_SET_ALLOW_PASTE: ({\n    root\n  }) => {\n    togglePaste(root);\n  },\n  DID_SET_DISABLED: ({\n    root,\n    props\n  }) => {\n    toggleDrop(root);\n    togglePaste(root);\n    toggleBrowse(root, props);\n    const isDisabled = root.query('GET_DISABLED');\n    if (isDisabled) {\n      root.element.dataset.disabled = 'disabled';\n    } else {\n      // delete root.element.dataset.disabled; <= this does not work on iOS 10\n      root.element.removeAttribute('data-disabled');\n    }\n  }\n});\nconst root = createView({\n  name: 'root',\n  read: ({\n    root\n  }) => {\n    if (root.ref.measure) {\n      root.ref.measureHeight = root.ref.measure.offsetHeight;\n    }\n  },\n  create: create$e,\n  write: write$9,\n  destroy: ({\n    root\n  }) => {\n    if (root.ref.paster) {\n      root.ref.paster.destroy();\n    }\n    if (root.ref.hopper) {\n      root.ref.hopper.destroy();\n    }\n    root.element.removeEventListener('touchmove', prevent);\n    root.element.removeEventListener('gesturestart', prevent);\n  },\n  mixins: {\n    styles: ['height']\n  }\n});\n\n// creates the app\nconst createApp = (initialOptions = {}) => {\n  // let element\n  let originalElement = null;\n\n  // get default options\n  const defaultOptions = getOptions();\n\n  // create the data store, this will contain all our app info\n  const store = createStore(\n  // initial state (should be serializable)\n  createInitialState(defaultOptions),\n  // queries\n  [queries, createOptionQueries(defaultOptions)],\n  // action handlers\n  [actions, createOptionActions(defaultOptions)]);\n\n  // set initial options\n  store.dispatch('SET_OPTIONS', {\n    options: initialOptions\n  });\n\n  // kick thread if visibility changes\n  const visibilityHandler = () => {\n    if (document.hidden) return;\n    store.dispatch('KICK');\n  };\n  document.addEventListener('visibilitychange', visibilityHandler);\n\n  // re-render on window resize start and finish\n  let resizeDoneTimer = null;\n  let isResizing = false;\n  let isResizingHorizontally = false;\n  let initialWindowWidth = null;\n  let currentWindowWidth = null;\n  const resizeHandler = () => {\n    if (!isResizing) {\n      isResizing = true;\n    }\n    clearTimeout(resizeDoneTimer);\n    resizeDoneTimer = setTimeout(() => {\n      isResizing = false;\n      initialWindowWidth = null;\n      currentWindowWidth = null;\n      if (isResizingHorizontally) {\n        isResizingHorizontally = false;\n        store.dispatch('DID_STOP_RESIZE');\n      }\n    }, 500);\n  };\n  window.addEventListener('resize', resizeHandler);\n\n  // render initial view\n  const view = root(store, {\n    id: getUniqueId()\n  });\n\n  //\n  // PRIVATE API -------------------------------------------------------------------------------------\n  //\n  let isResting = false;\n  let isHidden = false;\n  const readWriteApi = {\n    // necessary for update loop\n\n    /**\n     * Reads from dom (never call manually)\n     * @private\n     */\n    _read: () => {\n      // test if we're resizing horizontally\n      // TODO: see if we can optimize this by measuring root rect\n      if (isResizing) {\n        currentWindowWidth = window.innerWidth;\n        if (!initialWindowWidth) {\n          initialWindowWidth = currentWindowWidth;\n        }\n        if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n          store.dispatch('DID_START_RESIZE');\n          isResizingHorizontally = true;\n        }\n      }\n      if (isHidden && isResting) {\n        // test if is no longer hidden\n        isResting = view.element.offsetParent === null;\n      }\n\n      // if resting, no need to read as numbers will still all be correct\n      if (isResting) return;\n\n      // read view data\n      view._read();\n\n      // if is hidden we need to know so we exit rest mode when revealed\n      isHidden = view.rect.element.hidden;\n    },\n    /**\n     * Writes to dom (never call manually)\n     * @private\n     */\n    _write: ts => {\n      // get all actions from store\n      const actions = store.processActionQueue()\n\n      // filter out set actions (these will automatically trigger DID_SET)\n      .filter(action => !/^SET_/.test(action.type));\n\n      // if was idling and no actions stop here\n      if (isResting && !actions.length) return;\n\n      // some actions might trigger events\n      routeActionsToEvents(actions);\n\n      // update the view\n      isResting = view._write(ts, actions, isResizingHorizontally);\n\n      // will clean up all archived items\n      removeReleasedItems(store.query('GET_ITEMS'));\n\n      // now idling\n      if (isResting) {\n        store.processDispatchQueue();\n      }\n    }\n  };\n\n  //\n  // EXPOSE EVENTS -------------------------------------------------------------------------------------\n  //\n  const createEvent = name => data => {\n    // create default event\n    const event = {\n      type: name\n    };\n\n    // no data to add\n    if (!data) {\n      return event;\n    }\n\n    // copy relevant props\n    if (data.hasOwnProperty('error')) {\n      event.error = data.error ? {\n        ...data.error\n      } : null;\n    }\n    if (data.status) {\n      event.status = {\n        ...data.status\n      };\n    }\n    if (data.file) {\n      event.output = data.file;\n    }\n\n    // only source is available, else add item if possible\n    if (data.source) {\n      event.file = data.source;\n    } else if (data.item || data.id) {\n      const item = data.item ? data.item : store.query('GET_ITEM', data.id);\n      event.file = item ? createItemAPI(item) : null;\n    }\n\n    // map all items in a possible items array\n    if (data.items) {\n      event.items = data.items.map(createItemAPI);\n    }\n\n    // if this is a progress event add the progress amount\n    if (/progress/.test(name)) {\n      event.progress = data.progress;\n    }\n\n    // copy relevant props\n    if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {\n      event.origin = data.origin;\n      event.target = data.target;\n    }\n    return event;\n  };\n  const eventRoutes = {\n    DID_DESTROY: createEvent('destroy'),\n    DID_INIT: createEvent('init'),\n    DID_THROW_MAX_FILES: createEvent('warning'),\n    DID_INIT_ITEM: createEvent('initfile'),\n    DID_START_ITEM_LOAD: createEvent('addfilestart'),\n    DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n    DID_LOAD_ITEM: createEvent('addfile'),\n    DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n    DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n    DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n    DID_PREPARE_OUTPUT: createEvent('preparefile'),\n    DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n    DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n    DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n    DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n    DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n    DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n    DID_REMOVE_ITEM: createEvent('removefile'),\n    DID_UPDATE_ITEMS: createEvent('updatefiles'),\n    DID_ACTIVATE_ITEM: createEvent('activatefile'),\n    DID_REORDER_ITEMS: createEvent('reorderfiles')\n  };\n  const exposeEvent = event => {\n    // create event object to be dispatched\n    const detail = {\n      pond: exports,\n      ...event\n    };\n    delete detail.type;\n    view.element.dispatchEvent(new CustomEvent(`FilePond:${event.type}`, {\n      // event info\n      detail,\n      // event behaviour\n      bubbles: true,\n      cancelable: true,\n      composed: true // triggers listeners outside of shadow root\n    }));\n\n    // event object to params used for `on()` event handlers and callbacks `oninit()`\n    const params = [];\n\n    // if is possible error event, make it the first param\n    if (event.hasOwnProperty('error')) {\n      params.push(event.error);\n    }\n\n    // file is always section\n    if (event.hasOwnProperty('file')) {\n      params.push(event.file);\n    }\n\n    // append other props\n    const filtered = ['type', 'error', 'file'];\n    Object.keys(event).filter(key => !filtered.includes(key)).forEach(key => params.push(event[key]));\n\n    // on(type, () => { })\n    exports.fire(event.type, ...params);\n\n    // oninit = () => {}\n    const handler = store.query(`GET_ON${event.type.toUpperCase()}`);\n    if (handler) {\n      handler(...params);\n    }\n  };\n  const routeActionsToEvents = actions => {\n    if (!actions.length) return;\n    actions.filter(action => eventRoutes[action.type]).forEach(action => {\n      const routes = eventRoutes[action.type];\n      (Array.isArray(routes) ? routes : [routes]).forEach(route => {\n        // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init\n        if (action.type === 'DID_INIT_ITEM') {\n          exposeEvent(route(action.data));\n        } else {\n          setTimeout(() => {\n            exposeEvent(route(action.data));\n          }, 0);\n        }\n      });\n    });\n  };\n\n  //\n  // PUBLIC API -------------------------------------------------------------------------------------\n  //\n  const setOptions = options => store.dispatch('SET_OPTIONS', {\n    options\n  });\n  const getFile = query => store.query('GET_ACTIVE_ITEM', query);\n  const prepareFile = query => new Promise((resolve, reject) => {\n    store.dispatch('REQUEST_ITEM_PREPARE', {\n      query,\n      success: item => {\n        resolve(item);\n      },\n      failure: error => {\n        reject(error);\n      }\n    });\n  });\n  const addFile = (source, options = {}) => new Promise((resolve, reject) => {\n    addFiles([{\n      source,\n      options\n    }], {\n      index: options.index\n    }).then(items => resolve(items && items[0])).catch(reject);\n  });\n  const isFilePondFile = obj => obj.file && obj.id;\n  const removeFile = (query, options) => {\n    // if only passed options\n    if (typeof query === 'object' && !isFilePondFile(query) && !options) {\n      options = query;\n      query = undefined;\n    }\n\n    // request item removal\n    store.dispatch('REMOVE_ITEM', {\n      ...options,\n      query\n    });\n\n    // see if item has been removed\n    return store.query('GET_ACTIVE_ITEM', query) === null;\n  };\n  const addFiles = (...args) => new Promise((resolve, reject) => {\n    const sources = [];\n    const options = {};\n\n    // user passed a sources array\n    if (isArray(args[0])) {\n      sources.push.apply(sources, args[0]);\n      Object.assign(options, args[1] || {});\n    } else {\n      // user passed sources as arguments, last one might be options object\n      const lastArgument = args[args.length - 1];\n      if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n        Object.assign(options, args.pop());\n      }\n\n      // add rest to sources\n      sources.push(...args);\n    }\n    store.dispatch('ADD_ITEMS', {\n      items: sources,\n      index: options.index,\n      interactionMethod: InteractionMethod.API,\n      success: resolve,\n      failure: reject\n    });\n  });\n  const getFiles = () => store.query('GET_ACTIVE_ITEMS');\n  const processFile = query => new Promise((resolve, reject) => {\n    store.dispatch('REQUEST_ITEM_PROCESSING', {\n      query,\n      success: item => {\n        resolve(item);\n      },\n      failure: error => {\n        reject(error);\n      }\n    });\n  });\n  const prepareFiles = (...args) => {\n    const queries = Array.isArray(args[0]) ? args[0] : args;\n    const items = queries.length ? queries : getFiles();\n    return Promise.all(items.map(prepareFile));\n  };\n  const processFiles = (...args) => {\n    const queries = Array.isArray(args[0]) ? args[0] : args;\n    if (!queries.length) {\n      const files = getFiles().filter(item => !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) && item.status !== ItemStatus.PROCESSING && item.status !== ItemStatus.PROCESSING_COMPLETE && item.status !== ItemStatus.PROCESSING_REVERT_ERROR);\n      return Promise.all(files.map(processFile));\n    }\n    return Promise.all(queries.map(processFile));\n  };\n  const removeFiles = (...args) => {\n    const queries = Array.isArray(args[0]) ? args[0] : args;\n    let options;\n    if (typeof queries[queries.length - 1] === 'object') {\n      options = queries.pop();\n    } else if (Array.isArray(args[0])) {\n      options = args[1];\n    }\n    const files = getFiles();\n    if (!queries.length) return Promise.all(files.map(file => removeFile(file, options)));\n\n    // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n    const mappedQueries = queries.map(query => isNumber(query) ? files[query] ? files[query].id : null : query).filter(query => query);\n    return mappedQueries.map(q => removeFile(q, options));\n  };\n  const exports = {\n    // supports events\n    ...on(),\n    // inject private api methods\n    ...readWriteApi,\n    // inject all getters and setters\n    ...createOptionAPI(store, defaultOptions),\n    /**\n     * Override options defined in options object\n     * @param options\n     */\n    setOptions,\n    /**\n     * Load the given file\n     * @param source - the source of the file (either a File, base64 data uri or url)\n     * @param options - object, { index: 0 }\n     */\n    addFile,\n    /**\n     * Load the given files\n     * @param sources - the sources of the files to load\n     * @param options - object, { index: 0 }\n     */\n    addFiles,\n    /**\n     * Returns the file objects matching the given query\n     * @param query { string, number, null }\n     */\n    getFile,\n    /**\n     * Upload file with given name\n     * @param query { string, number, null  }\n     */\n    processFile,\n    /**\n     * Request prepare output for file with given name\n     * @param query { string, number, null  }\n     */\n    prepareFile,\n    /**\n     * Removes a file by its name\n     * @param query { string, number, null  }\n     */\n    removeFile,\n    /**\n     * Moves a file to a new location in the files list\n     */\n    moveFile: (query, index) => store.dispatch('MOVE_ITEM', {\n      query,\n      index\n    }),\n    /**\n     * Returns all files (wrapped in public api)\n     */\n    getFiles,\n    /**\n     * Starts uploading all files\n     */\n    processFiles,\n    /**\n     * Clears all files from the files list\n     */\n    removeFiles,\n    /**\n     * Starts preparing output of all files\n     */\n    prepareFiles,\n    /**\n     * Sort list of files\n     */\n    sort: compare => store.dispatch('SORT', {\n      compare\n    }),\n    /**\n     * Browse the file system for a file\n     */\n    browse: () => {\n      // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n      var input = view.element.querySelector('input[type=file]');\n      if (input) {\n        input.click();\n      }\n    },\n    /**\n     * Destroys the app\n     */\n    destroy: () => {\n      // request destruction\n      exports.fire('destroy', view.element);\n\n      // stop active processes (file uploads, fetches, stuff like that)\n      // loop over items and depending on states call abort for ongoing processes\n      store.dispatch('ABORT_ALL');\n\n      // destroy view\n      view._destroy();\n\n      // stop listening to resize\n      window.removeEventListener('resize', resizeHandler);\n\n      // stop listening to the visiblitychange event\n      document.removeEventListener('visibilitychange', visibilityHandler);\n\n      // dispatch destroy\n      store.dispatch('DID_DESTROY');\n    },\n    /**\n     * Inserts the plugin before the target element\n     */\n    insertBefore: element => insertBefore(view.element, element),\n    /**\n     * Inserts the plugin after the target element\n     */\n    insertAfter: element => insertAfter(view.element, element),\n    /**\n     * Appends the plugin to the target element\n     */\n    appendTo: element => element.appendChild(view.element),\n    /**\n     * Replaces an element with the app\n     */\n    replaceElement: element => {\n      // insert the app before the element\n      insertBefore(view.element, element);\n\n      // remove the original element\n      element.parentNode.removeChild(element);\n\n      // remember original element\n      originalElement = element;\n    },\n    /**\n     * Restores the original element\n     */\n    restoreElement: () => {\n      if (!originalElement) {\n        return; // no element to restore\n      }\n\n      // restore original element\n      insertAfter(originalElement, view.element);\n\n      // remove our element\n      view.element.parentNode.removeChild(view.element);\n\n      // remove reference\n      originalElement = null;\n    },\n    /**\n     * Returns true if the app root is attached to given element\n     * @param element\n     */\n    isAttachedTo: element => view.element === element || originalElement === element,\n    /**\n     * Returns the root element\n     */\n    element: {\n      get: () => view.element\n    },\n    /**\n     * Returns the current pond status\n     */\n    status: {\n      get: () => store.query('GET_STATUS')\n    }\n  };\n\n  // Done!\n  store.dispatch('DID_INIT');\n\n  // create actual api object\n  return createObject(exports);\n};\nconst createAppObject = (customOptions = {}) => {\n  // default options\n  const defaultOptions = {};\n  forin(getOptions(), (key, value) => {\n    defaultOptions[key] = value[0];\n  });\n\n  // set app options\n  const app = createApp({\n    // default options\n    ...defaultOptions,\n    // custom options\n    ...customOptions\n  });\n\n  // return the plugin instance\n  return app;\n};\nconst lowerCaseFirstLetter = string => string.charAt(0).toLowerCase() + string.slice(1);\nconst attributeNameToPropertyName = attributeName => toCamels(attributeName.replace(/^data-/, ''));\nconst mapObject = (object, propertyMap) => {\n  // remove unwanted\n  forin(propertyMap, (selector, mapping) => {\n    forin(object, (property, value) => {\n      // create regexp shortcut\n      const selectorRegExp = new RegExp(selector);\n\n      // tests if\n      const matches = selectorRegExp.test(property);\n\n      // no match, skip\n      if (!matches) {\n        return;\n      }\n\n      // if there's a mapping, the original property is always removed\n      delete object[property];\n\n      // should only remove, we done!\n      if (mapping === false) {\n        return;\n      }\n\n      // move value to new property\n      if (isString(mapping)) {\n        object[mapping] = value;\n        return;\n      }\n\n      // move to group\n      const group = mapping.group;\n      if (isObject(mapping) && !object[group]) {\n        object[group] = {};\n      }\n      object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n    });\n\n    // do submapping\n    if (mapping.mapping) {\n      mapObject(object[mapping.group], mapping.mapping);\n    }\n  });\n};\nconst getAttributesAsObject = (node, attributeMapping = {}) => {\n  // turn attributes into object\n  const attributes = [];\n  forin(node.attributes, index => {\n    attributes.push(node.attributes[index]);\n  });\n  const output = attributes.filter(attribute => attribute.name).reduce((obj, attribute) => {\n    const value = attr(node, attribute.name);\n    obj[attributeNameToPropertyName(attribute.name)] = value === attribute.name ? true : value;\n    return obj;\n  }, {});\n\n  // do mapping of object properties\n  mapObject(output, attributeMapping);\n  return output;\n};\nconst createAppAtElement = (element, options = {}) => {\n  // how attributes of the input element are mapped to the options for the plugin\n  const attributeMapping = {\n    // translate to other name\n    '^class$': 'className',\n    '^multiple$': 'allowMultiple',\n    '^capture$': 'captureMethod',\n    '^webkitdirectory$': 'allowDirectoriesOnly',\n    // group under single property\n    '^server': {\n      group: 'server',\n      mapping: {\n        '^process': {\n          group: 'process'\n        },\n        '^revert': {\n          group: 'revert'\n        },\n        '^fetch': {\n          group: 'fetch'\n        },\n        '^restore': {\n          group: 'restore'\n        },\n        '^load': {\n          group: 'load'\n        }\n      }\n    },\n    // don't include in object\n    '^type$': false,\n    '^files$': false\n  };\n\n  // add additional option translators\n  applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);\n\n  // create final options object by setting options object and then overriding options supplied on element\n  const mergedOptions = {\n    ...options\n  };\n  const attributeOptions = getAttributesAsObject(element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element, attributeMapping);\n\n  // merge with options object\n  Object.keys(attributeOptions).forEach(key => {\n    if (isObject(attributeOptions[key])) {\n      if (!isObject(mergedOptions[key])) {\n        mergedOptions[key] = {};\n      }\n      Object.assign(mergedOptions[key], attributeOptions[key]);\n    } else {\n      mergedOptions[key] = attributeOptions[key];\n    }\n  });\n\n  // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n  // these will then be automatically set to the initial files\n  mergedOptions.files = (options.files || []).concat(Array.from(element.querySelectorAll('input:not([type=file])')).map(input => ({\n    source: input.value,\n    options: {\n      type: input.dataset.type\n    }\n  })));\n\n  // build plugin\n  const app = createAppObject(mergedOptions);\n\n  // add already selected files\n  if (element.files) {\n    Array.from(element.files).forEach(file => {\n      app.addFile(file);\n    });\n  }\n\n  // replace the target element\n  app.replaceElement(element);\n\n  // expose\n  return app;\n};\n\n// if an element is passed, we create the instance at that element, if not, we just create an up object\nconst createApp$1 = (...args) => isNode(args[0]) ? createAppAtElement(...args) : createAppObject(...args);\nconst PRIVATE_METHODS = ['fire', '_read', '_write'];\nconst createAppAPI = app => {\n  const api = {};\n  copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n  return api;\n};\n\n/**\n * Replaces placeholders in given string with replacements\n * @param string - \"Foo {bar}\"\"\n * @param replacements - { \"bar\": 10 }\n */\nconst replaceInString = (string, replacements) => string.replace(/(?:{([a-zA-Z]+)})/g, (match, group) => replacements[group]);\nconst createWorker = fn => {\n  const workerBlob = new Blob(['(', fn.toString(), ')()'], {\n    type: 'application/javascript'\n  });\n  const workerURL = URL.createObjectURL(workerBlob);\n  const worker = new Worker(workerURL);\n  return {\n    transfer: (message, cb) => {},\n    post: (message, cb, transferList) => {\n      const id = getUniqueId();\n      worker.onmessage = e => {\n        if (e.data.id === id) {\n          cb(e.data.message);\n        }\n      };\n      worker.postMessage({\n        id,\n        message\n      }, transferList);\n    },\n    terminate: () => {\n      worker.terminate();\n      URL.revokeObjectURL(workerURL);\n    }\n  };\n};\nconst loadImage = url => new Promise((resolve, reject) => {\n  const img = new Image();\n  img.onload = () => {\n    resolve(img);\n  };\n  img.onerror = e => {\n    reject(e);\n  };\n  img.src = url;\n});\nconst renameFile = (file, name) => {\n  const renamedFile = file.slice(0, file.size, file.type);\n  renamedFile.lastModifiedDate = file.lastModifiedDate;\n  renamedFile.name = name;\n  return renamedFile;\n};\nconst copyFile = file => renameFile(file, file.name);\n\n// already registered plugins (can't register twice)\nconst registeredPlugins = [];\n\n// pass utils to plugin\nconst createAppPlugin = plugin => {\n  // already registered\n  if (registeredPlugins.includes(plugin)) {\n    return;\n  }\n\n  // remember this plugin\n  registeredPlugins.push(plugin);\n\n  // setup!\n  const pluginOutline = plugin({\n    addFilter,\n    utils: {\n      Type,\n      forin,\n      isString,\n      isFile,\n      toNaturalFileSize,\n      replaceInString,\n      getExtensionFromFilename,\n      getFilenameWithoutExtension,\n      guesstimateMimeType,\n      getFileFromBlob,\n      getFilenameFromURL,\n      createRoute,\n      createWorker,\n      createView,\n      createItemAPI,\n      loadImage,\n      copyFile,\n      renameFile,\n      createBlob,\n      applyFilterChain,\n      text,\n      getNumericAspectRatioFromString\n    },\n    views: {\n      fileActionButton\n    }\n  });\n\n  // add plugin options to default options\n  extendDefaultOptions(pluginOutline.options);\n};\n\n// feature detection used by supported() method\nconst isOperaMini = () => Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\nconst hasPromises = () => 'Promise' in window;\nconst hasBlobSlice = () => 'slice' in Blob.prototype;\nconst hasCreateObjectURL = () => 'URL' in window && 'createObjectURL' in window.URL;\nconst hasVisibility = () => 'visibilityState' in document;\nconst hasTiming = () => 'performance' in window; // iOS 8.x\nconst hasCSSSupports = () => 'supports' in (window.CSS || {}); // use to detect Safari 9+\nconst isIE11 = () => /MSIE|Trident/.test(window.navigator.userAgent);\nconst supported = (() => {\n  // Runs immediately and then remembers result for subsequent calls\n  const isSupported =\n  // Has to be a browser\n  isBrowser() &&\n  // Can't run on Opera Mini due to lack of everything\n  !isOperaMini() &&\n  // Require these APIs to feature detect a modern browser\n  hasVisibility() && hasPromises() && hasBlobSlice() && hasCreateObjectURL() && hasTiming() && (\n  // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)\n  hasCSSSupports() || isIE11());\n  return () => isSupported;\n})();\n\n/**\n * Plugin internal state (over all instances)\n */\nconst state = {\n  // active app instances, used to redraw the apps and to find the later\n  apps: []\n};\n\n// plugin name\nconst name = 'filepond';\n\n/**\n * Public Plugin methods\n */\nconst fn = () => {};\nlet Status$1 = {};\nlet FileStatus = {};\nlet FileOrigin$1 = {};\nlet OptionTypes = {};\nlet create$f = fn;\nlet destroy = fn;\nlet parse = fn;\nlet find = fn;\nlet registerPlugin = fn;\nlet getOptions$1 = fn;\nlet setOptions$1 = fn;\n\n// if not supported, no API\nif (supported()) {\n  // start painter and fire load event\n  createPainter(() => {\n    state.apps.forEach(app => app._read());\n  }, ts => {\n    state.apps.forEach(app => app._write(ts));\n  });\n\n  // fire loaded event so we know when FilePond is available\n  const dispatch = () => {\n    // let others know we have area ready\n    document.dispatchEvent(new CustomEvent('FilePond:loaded', {\n      detail: {\n        supported,\n        create: create$f,\n        destroy,\n        parse,\n        find,\n        registerPlugin,\n        setOptions: setOptions$1\n      }\n    }));\n\n    // clean up event\n    document.removeEventListener('DOMContentLoaded', dispatch);\n  };\n  if (document.readyState !== 'loading') {\n    // move to back of execution queue, FilePond should have been exported by then\n    setTimeout(() => dispatch(), 0);\n  } else {\n    document.addEventListener('DOMContentLoaded', dispatch);\n  }\n\n  // updates the OptionTypes object based on the current options\n  const updateOptionTypes = () => forin(getOptions(), (key, value) => {\n    OptionTypes[key] = value[1];\n  });\n  Status$1 = {\n    ...Status\n  };\n  FileOrigin$1 = {\n    ...FileOrigin\n  };\n  FileStatus = {\n    ...ItemStatus\n  };\n  OptionTypes = {};\n  updateOptionTypes();\n\n  // create method, creates apps and adds them to the app array\n  create$f = (...args) => {\n    const app = createApp$1(...args);\n    app.on('destroy', destroy);\n    state.apps.push(app);\n    return createAppAPI(app);\n  };\n\n  // destroys apps and removes them from the app array\n  destroy = hook => {\n    // returns true if the app was destroyed successfully\n    const indexToRemove = state.apps.findIndex(app => app.isAttachedTo(hook));\n    if (indexToRemove >= 0) {\n      // remove from apps\n      const app = state.apps.splice(indexToRemove, 1)[0];\n\n      // restore original dom element\n      app.restoreElement();\n      return true;\n    }\n    return false;\n  };\n\n  // parses the given context for plugins (does not include the context element itself)\n  parse = context => {\n    // get all possible hooks\n    const matchedHooks = Array.from(context.querySelectorAll(`.${name}`));\n\n    // filter out already active hooks\n    const newHooks = matchedHooks.filter(newHook => !state.apps.find(app => app.isAttachedTo(newHook)));\n\n    // create new instance for each hook\n    return newHooks.map(hook => create$f(hook));\n  };\n\n  // returns an app based on the given element hook\n  find = hook => {\n    const app = state.apps.find(app => app.isAttachedTo(hook));\n    if (!app) {\n      return null;\n    }\n    return createAppAPI(app);\n  };\n\n  // adds a plugin extension\n  registerPlugin = (...plugins) => {\n    // register plugins\n    plugins.forEach(createAppPlugin);\n\n    // update OptionTypes, each plugin might have extended the default options\n    updateOptionTypes();\n  };\n  getOptions$1 = () => {\n    const opts = {};\n    forin(getOptions(), (key, value) => {\n      opts[key] = value[0];\n    });\n    return opts;\n  };\n  setOptions$1 = opts => {\n    if (isObject(opts)) {\n      // update existing plugins\n      state.apps.forEach(app => {\n        app.setOptions(opts);\n      });\n\n      // override defaults\n      setOptions(opts);\n    }\n\n    // return new options\n    return getOptions$1();\n  };\n}\nexport { FileOrigin$1 as FileOrigin, FileStatus, OptionTypes, Status$1 as Status, create$f as create, destroy, find, getOptions$1 as getOptions, parse, registerPlugin, setOptions$1 as setOptions, supported };", "import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { supported, create } from 'filepond';\nexport { registerPlugin } from 'filepond';\nimport { CommonModule } from '@angular/common';\n\n// We test if filepond is supported on the current client\nconst isSupported = supported();\n// List of attributes for fallback input\nconst inputAttributes = [\"id\", \"name\", \"class\", \"multiple\", \"required\", \"disabled\", \"capture\", \"accept\"];\n// Methods not made available on the component\nconst filteredComponentMethods = [\"setOptions\", \"on\", \"off\", \"onOnce\", \"appendTo\", \"insertAfter\", \"insertBefore\", \"isAttachedTo\", \"replaceElement\", \"restoreElement\", \"destroy\"];\nconst outputs = [\"oninit\", \"onwarning\", \"onerror\", \"oninitfile\", \"onaddfilestart\", \"onaddfileprogress\", \"onaddfile\", \"onprocessfilestart\", \"onprocessfileprogress\", \"onprocessfileabort\", \"onprocessfilerevert\", \"onprocessfile\", \"onprocessfiles\", \"onremovefile\", \"onpreparefile\", \"onupdatefiles\", \"onactivatefile\", \"onreorderfiles\"];\n// Component outline\nclass FilePondComponent {\n  constructor(root, zone) {\n    this.options = {};\n    // same as outputs array\n    this.oninit = new EventEmitter();\n    this.onwarning = new EventEmitter();\n    this.onerror = new EventEmitter();\n    this.oninitfile = new EventEmitter();\n    this.onactivatefile = new EventEmitter();\n    this.onaddfilestart = new EventEmitter();\n    this.onaddfileprogress = new EventEmitter();\n    this.onaddfile = new EventEmitter();\n    this.onprocessfilestart = new EventEmitter();\n    this.onprocessfileprogress = new EventEmitter();\n    this.onprocessfileabort = new EventEmitter();\n    this.onprocessfilerevert = new EventEmitter();\n    this.onprocessfile = new EventEmitter();\n    this.onprocessfiles = new EventEmitter();\n    this.onremovefile = new EventEmitter();\n    this.onpreparefile = new EventEmitter();\n    this.onupdatefiles = new EventEmitter();\n    this.onreorderfiles = new EventEmitter();\n    this.pond = null;\n    this.handleEvent = null;\n    this.root = root;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    const input = this.root.nativeElement.querySelector(\"input\");\n    // transfer relevant attributes to input, this so we still have an input with the correct attributes should file pond not load\n    const attributes = this.root.nativeElement.attributes;\n    inputAttributes.forEach(name => {\n      const value = attributes[name] ? attributes[name].value : this.options[name];\n      if (!value) {\n        return;\n      }\n      input.setAttribute(name, value);\n    });\n    // no sufficient features supported in this browser\n    if (!isSupported) {\n      return;\n    }\n    // map FilePond events to Angular @outputs\n    this.handleEvent = e => {\n      const key = `on${e.type.split(\":\")[1]}`;\n      // @ts-ignore\n      this[key].emit({\n        ...e.detail\n      });\n    };\n    outputs.forEach(event => {\n      this.root.nativeElement.addEventListener(`FilePond:${event.substring(2)}`, this.handleEvent);\n    });\n    // will block angular from listening to events inside the pond\n    this.zone.runOutsideAngular(() => {\n      // create instance\n      this.pond = create(input, {\n        // our options\n        ...this.options,\n        // our initial files\n        files: this.files\n      });\n    });\n    // Copy instance method references to component instance\n    this.pond && Object.keys(this.pond)\n    // remove unwanted methods\n    .filter(key => filteredComponentMethods.indexOf(key) === -1)\n    // set method references from the component instance to the pond instance\n    .forEach(key => {\n      // @ts-ignore\n      this[key] = this.pond[key];\n    });\n  }\n  ngOnChanges(changes) {\n    // no need to handle first change\n    if (changes[\"firstChange\"]) return;\n    // no filepond instance available\n    if (!this.pond) {\n      return;\n    }\n    // use new options object as base ( or if not available, use current options )\n    const options = changes[\"options\"] ? changes[\"options\"].currentValue : this.options;\n    // see if file list has changed\n    if (changes[\"files\"] && JSON.stringify(changes[\"files\"].previousValue) !== JSON.stringify(changes[\"files\"].currentValue)) {\n      // file list has changed\n      options.files = changes[\"files\"].currentValue;\n    }\n    // set new options\n    this.pond.setOptions(options);\n  }\n  ngOnDestroy() {\n    if (!this.pond) {\n      return;\n    }\n    outputs.forEach(event => {\n      this.root.nativeElement.removeEventListener(`FilePond:${event.substring(2)}`, this.handleEvent);\n    });\n    this.pond.destroy();\n  }\n}\nFilePondComponent.ɵfac = function FilePondComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FilePondComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nFilePondComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilePondComponent,\n  selectors: [[\"file-pond\"]],\n  inputs: {\n    options: \"options\",\n    files: \"files\"\n  },\n  outputs: {\n    oninit: \"oninit\",\n    onwarning: \"onwarning\",\n    onerror: \"onerror\",\n    oninitfile: \"oninitfile\",\n    onactivatefile: \"onactivatefile\",\n    onaddfilestart: \"onaddfilestart\",\n    onaddfileprogress: \"onaddfileprogress\",\n    onaddfile: \"onaddfile\",\n    onprocessfilestart: \"onprocessfilestart\",\n    onprocessfileprogress: \"onprocessfileprogress\",\n    onprocessfileabort: \"onprocessfileabort\",\n    onprocessfilerevert: \"onprocessfilerevert\",\n    onprocessfile: \"onprocessfile\",\n    onprocessfiles: \"onprocessfiles\",\n    onremovefile: \"onremovefile\",\n    onpreparefile: \"onpreparefile\",\n    onupdatefiles: \"onupdatefiles\",\n    onreorderfiles: \"onreorderfiles\"\n  },\n  standalone: false,\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"filepond--wrapper\"], [\"type\", \"file\"]],\n  template: function FilePondComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilePondComponent, [{\n    type: Component,\n    args: [{\n      selector: \"file-pond\",\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"filepond--wrapper\\\">\\n  <input type=\\\"file\\\"/>\\n</div>\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    files: [{\n      type: Input\n    }],\n    oninit: [{\n      type: Output\n    }],\n    onwarning: [{\n      type: Output\n    }],\n    onerror: [{\n      type: Output\n    }],\n    oninitfile: [{\n      type: Output\n    }],\n    onactivatefile: [{\n      type: Output\n    }],\n    onaddfilestart: [{\n      type: Output\n    }],\n    onaddfileprogress: [{\n      type: Output\n    }],\n    onaddfile: [{\n      type: Output\n    }],\n    onprocessfilestart: [{\n      type: Output\n    }],\n    onprocessfileprogress: [{\n      type: Output\n    }],\n    onprocessfileabort: [{\n      type: Output\n    }],\n    onprocessfilerevert: [{\n      type: Output\n    }],\n    onprocessfile: [{\n      type: Output\n    }],\n    onprocessfiles: [{\n      type: Output\n    }],\n    onremovefile: [{\n      type: Output\n    }],\n    onpreparefile: [{\n      type: Output\n    }],\n    onupdatefiles: [{\n      type: Output\n    }],\n    onreorderfiles: [{\n      type: Output\n    }]\n  });\n})();\nclass FilePondModule {}\nFilePondModule.ɵfac = function FilePondModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FilePondModule)();\n};\nFilePondModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FilePondModule,\n  declarations: [FilePondComponent],\n  imports: [CommonModule],\n  exports: [FilePondComponent]\n});\nFilePondModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilePondModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FilePondComponent],\n      exports: [FilePondComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-filepond\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FilePondComponent, FilePondModule };\n"],
  "mappings": "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",
  "names": ["queries", "actions", "state", "data", "query", "name", "name", "animations", "animator", "fn", "styles", "write", "create", "destroy", "actions", "state", "store", "props", "read", "root", "listeners", "item", "value", "error", "option", "blob", "file", "data", "res", "headers", "chunk", "ondata", "onerror", "onload", "serverFileReference", "key", "query", "success", "result", "failure", "isAsync", "map", "action", "e", "drop", "location", "currentIndex", "dragHeight", "itemHeight", "entry", "list", "panel", "defaultOptions", "route", "setOptions", "getFiles", "queries", "isSupported", "app", "root", "name"]
}
