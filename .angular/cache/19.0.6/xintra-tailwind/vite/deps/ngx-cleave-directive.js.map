{
  "version": 3,
  "sources": ["../../../../../../node_modules/ngx-cleave-directive/fesm2020/ngx-cleave-directive.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Directive, Optional, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport Cleave from 'cleave.js';\nclass NgxCleaveDirective {\n  constructor(elementRef, ngControl) {\n    this.elementRef = elementRef;\n    this.ngControl = ngControl;\n    this.rawValue = false;\n    this.viewToModelUpdate = this.ngControl?.viewToModelUpdate;\n    if (!this.ngControl) {\n      throw new Error('NgxCleaveDirective: should be used with one of the following form directives — ngModel, formControl or formControlName.');\n    }\n  }\n  set cleave(cleave) {\n    this._cleave = cleave;\n    this.setCleave();\n  }\n  get cleave() {\n    return this._cleave;\n  }\n  ngOnInit() {\n    if (this.ngControl) {\n      // the parameter is not used in the patched method,\n      this.ngControl.viewToModelUpdate = _ => {\n        this.viewToModelUpdate?.call(this.ngControl,\n        // update model with the value got from the Cleave instance\n        this.rawValue ? this.cleaveInstance?.getRawValue() : this.cleaveInstance?.getFormattedValue());\n      };\n    }\n  }\n  ngOnDestroy() {\n    if (this.ngControl) {\n      this.ngControl.viewToModelUpdate = this.viewToModelUpdate;\n    }\n    this.cleaveInstance?.destroy();\n  }\n  setCleave() {\n    this.cleaveInstance?.destroy();\n    this.cleaveInstance = new Cleave(this.elementRef.nativeElement, {\n      ...this.cleave,\n      onValueChanged: ({\n        target\n      }) => {\n        // trigger the update with an empty string\n        this.ngControl.viewToModelUpdate('');\n        if (this.cleave.onValueChanged && typeof this.cleave.onValueChanged === 'function') {\n          this.cleave.onValueChanged({\n            target\n          });\n        }\n      }\n    });\n    if (!this.rawValue) {\n      // initially format the value, which will trigger onValueChanged to call viewToModelUpdate\n      setTimeout(() => this.cleaveInstance?.setRawValue(this.ngControl.value), 0);\n    }\n  }\n}\n/** @nocollapse */ /** @nocollapse */\nNgxCleaveDirective.ɵfac = function NgxCleaveDirective_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgxCleaveDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgControl, 8));\n};\n/** @nocollapse */ /** @nocollapse */\nNgxCleaveDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxCleaveDirective,\n  selectors: [[\"input\", \"cleave\", \"\"], [\"textarea\", \"cleave\", \"\"]],\n  inputs: {\n    rawValue: \"rawValue\",\n    cleave: \"cleave\"\n  },\n  standalone: false\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxCleaveDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[cleave],textarea[cleave]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    rawValue: [{\n      type: Input,\n      args: ['rawValue']\n    }],\n    cleave: [{\n      type: Input,\n      args: ['cleave']\n    }]\n  });\n})();\nclass NgxCleaveDirectiveModule {}\n/** @nocollapse */ /** @nocollapse */\nNgxCleaveDirectiveModule.ɵfac = function NgxCleaveDirectiveModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgxCleaveDirectiveModule)();\n};\n/** @nocollapse */ /** @nocollapse */\nNgxCleaveDirectiveModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxCleaveDirectiveModule,\n  declarations: [NgxCleaveDirective],\n  exports: [NgxCleaveDirective]\n});\n/** @nocollapse */ /** @nocollapse */\nNgxCleaveDirectiveModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxCleaveDirectiveModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [NgxCleaveDirective],\n      exports: [NgxCleaveDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-cleave-directive\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxCleaveDirective, NgxCleaveDirectiveModule };\n"],
  "mappings": "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",
  "names": []
}
